  java.lang.Object.toString/$r8, <java.lang.Object: java.lang.String toString()>
  java.lang.String.getBTCConverter/r3, <java.lang.String: sun.io.ByteToCharConverter getBTCConverter(java.lang.String)>
  java.lang.String.getBTCConverter/r10, <java.lang.String: sun.io.ByteToCharConverter getBTCConverter(java.lang.String)>
  java.lang.Object.clone/@native-return, <java.lang.Object: java.lang.Object clone()>
  java.lang.Object.getClass/@native-return, <java.lang.Object: java.lang.Class getClass()>
  java.lang.Integer.toHexString/$r0, <java.lang.Integer: java.lang.String toHexString(int)>
  <java.lang.String: byte[] getBytes(sun.io.CharToByteConverter)>/r2, <java.lang.String: byte[] getBytes(sun.io.CharToByteConverter)>
  <java.lang.String: byte[] getBytes(sun.io.CharToByteConverter)>/r13, <java.lang.String: byte[] getBytes(sun.io.CharToByteConverter)>
  <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>/r1, <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>
  <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>/$r7, <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>
  java.lang.Integer.decode/r7, <java.lang.Integer: java.lang.Integer decode(java.lang.String)>
  java.io.ObjectStreamField.class$/$r2, <java.io.ObjectStreamField: java.lang.Class class$(java.lang.String)>
  <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/r2, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/r4, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/$stringconstant0, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/r2, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/r4, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/$stringconstant0, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>/$r9, <java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>/$stringconstant0, <java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>/$r14, <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>/$r23, <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>/$r33, <java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
  java.util.Locale.clone/r1, <java.util.Locale: java.lang.Object clone()>
  java.util.Locale.getDisplayVariantArray/r4, <java.util.Locale: java.lang.String[] getDisplayVariantArray(java.util.ResourceBundle)>
  java.lang.Long.decode/r7, <java.lang.Long: java.lang.Long decode(java.lang.String)>
  <java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>/r1, <java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>
  <java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>/$r7, <java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r3, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  java.io.ObjectInputStream.resolveProxyClass/$r7, <java.io.ObjectInputStream: java.lang.Class resolveProxyClass(java.lang.String[])>
  java.io.ObjectInputStream.inputClassDescriptor/r2, <java.io.ObjectInputStream: java.io.ObjectStreamClass inputClassDescriptor()>
  java.io.ObjectInputStream.inputProxyClassDescriptor/r2, <java.io.ObjectInputStream: java.io.ObjectStreamClass inputProxyClassDescriptor()>
  java.io.ObjectInputStream.readUTFBody/r29, <java.io.ObjectInputStream: java.lang.String readUTFBody(long)>
  java.io.ObjectInputStream.class$/$r2, <java.io.ObjectInputStream: java.lang.Class class$(java.lang.String)>
  <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>/r2, <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
  <java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>/r5, <java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
  java.lang.ClassLoader.getResourceAsStream/$r4, <java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
  java.lang.ClassLoader.getSystemResourceAsStream/$r3, <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
  java.lang.ClassLoader.definePackage/r11, <java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  java.lang.ClassLoader.getPackage/r4, <java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
  java.lang.ClassLoader.getPackages/$r18, <java.lang.ClassLoader: java.lang.Package[] getPackages()>
  java.lang.ClassLoader.getDefaultDomain/$r16, <java.lang.ClassLoader: java.security.ProtectionDomain getDefaultDomain()>
  java.lang.ClassLoader.class$/$r2, <java.lang.ClassLoader: java.lang.Class class$(java.lang.String)>
  java.lang.Package.getSystemPackage/r9, <java.lang.Package: java.lang.Package getSystemPackage(java.lang.String)>
  java.lang.Package.getSystemPackages/r2, <java.lang.Package: java.lang.Package[] getSystemPackages()>
  java.lang.Package.loadManifest/r4, <java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>
  java.lang.reflect.Field.getTypeName/$r7, <java.lang.reflect.Field: java.lang.String getTypeName(java.lang.Class)>
  java.lang.reflect.Field.getTypeName/$r10, <java.lang.reflect.Field: java.lang.String getTypeName(java.lang.Class)>
  java.lang.reflect.Method.toString/$r41, <java.lang.reflect.Method: java.lang.String toString()>
  java.lang.reflect.Method.toString/$r48, <java.lang.reflect.Method: java.lang.String toString()>
  java.lang.reflect.Constructor.toString/$r25, <java.lang.reflect.Constructor: java.lang.String toString()>
  java.lang.reflect.Constructor.toString/$r32, <java.lang.reflect.Constructor: java.lang.String toString()>
  java.net.URL.getURLStreamHandler/r2, <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>
  java.net.URL.getURLStreamHandler/r38, <java.net.URL: java.net.URLStreamHandler getURLStreamHandler(java.lang.String)>
  java.io.ObjectStreamClass.lookupInternal/r5, <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookupInternal(java.lang.Class)>
  java.io.ObjectStreamClass.invokeMethod/r5, <java.io.ObjectStreamClass: java.lang.Object invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
  java.io.ObjectStreamClass.getDeclaredMethod/r3, <java.io.ObjectStreamClass: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[],int,int)>
  java.io.ObjectStreamClass.class$/$r2, <java.io.ObjectStreamClass: java.lang.Class class$(java.lang.String)>
  java.security.Permissions.getPermissionCollection/r3, <java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission)>
  java.security.Permissions.class$/$r2, <java.security.Permissions: java.lang.Class class$(java.lang.String)>
  java.security.PermissionCollection.toString/$r18, <java.security.PermissionCollection: java.lang.String toString()>
  java.lang.SecurityManager.class$/$r2, <java.lang.SecurityManager: java.lang.Class class$(java.lang.String)>
  java.lang.FloatingDecimal.readJavaFormatString/$r4, <java.lang.FloatingDecimal: java.lang.FloatingDecimal readJavaFormatString(java.lang.String)>
  java.lang.Short.decode/r7, <java.lang.Short: java.lang.Short decode(java.lang.String)>
  java.lang.Byte.decode/r7, <java.lang.Byte: java.lang.Byte decode(java.lang.String)>
  java.util.Hashtable.clone/r1, <java.util.Hashtable: java.lang.Object clone()>
  java.util.ResourceBundle.getBundleImpl/$r23, <java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
  java.util.ResourceBundle.getBundleImpl/$r37, <java.util.ResourceBundle: java.util.ResourceBundle getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
  java.util.ResourceBundle.findBundle/r7, <java.util.ResourceBundle: java.lang.Object findBundle(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
  java.util.ResourceBundle.findBundle/r30, <java.util.ResourceBundle: java.lang.Object findBundle(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
  java.util.ResourceBundle.findBundle/r38, <java.util.ResourceBundle: java.lang.Object findBundle(java.lang.ClassLoader,java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
  java.util.ResourceBundle.findBundleInCache/r4, <java.util.ResourceBundle: java.lang.Object findBundleInCache(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle.loadBundle/r3, <java.util.ResourceBundle: java.lang.Object loadBundle(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle.loadBundle/r4, <java.util.ResourceBundle: java.lang.Object loadBundle(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle.loadBundle/r24, <java.util.ResourceBundle: java.lang.Object loadBundle(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle.class$/$r2, <java.util.ResourceBundle: java.lang.Class class$(java.lang.String)>
  java.text.MessageFormat.getFormats/$r4, <java.text.MessageFormat: java.text.Format[] getFormats()>
  java.text.MessageFormat.getFormats/$r6, <java.text.MessageFormat: java.text.Format[] getFormats()>
  java.io.ObjectOutputStream.class$/$r2, <java.io.ObjectOutputStream: java.lang.Class class$(java.lang.String)>
  java.text.Format.clone/r1, <java.text.Format: java.lang.Object clone()>
  java.util.ArrayList.clone/r1, <java.util.ArrayList: java.lang.Object clone()>
  java.io.ObjectInputStream$GetFieldImpl.class$/$r2, <java.io.ObjectInputStream$GetFieldImpl: java.lang.Class class$(java.lang.String)>
  java.lang.reflect.Proxy.getProxyClass/r2, <java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
  java.lang.reflect.Proxy.getProxyClass/r10, <java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
  java.lang.reflect.Proxy.newProxyInstance/$r11, <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
  java.lang.reflect.Proxy.class$/$r2, <java.lang.reflect.Proxy: java.lang.Class class$(java.lang.String)>
  java.io.OutputStreamWriter.getEncoding/r2, <java.io.OutputStreamWriter: java.lang.String getEncoding()>
  java.io.OutputStreamWriter.getEncoding/n0, <java.io.OutputStreamWriter: java.lang.String getEncoding()>
  java.lang.reflect.AccessibleObject.class$/$r2, <java.lang.reflect.AccessibleObject: java.lang.Class class$(java.lang.String)>
  java.security.cert.Certificate.writeReplace/$r1, <java.security.cert.Certificate: java.lang.Object writeReplace()>
  <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>/$r12, <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
  <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>/$r15, <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>
  java.security.cert.CertificateFactory.class$/$r2, <java.security.cert.CertificateFactory: java.lang.Class class$(java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/r2, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/r10, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
  java.util.Vector.elementAt/$r9, <java.util.Vector: java.lang.Object elementAt(int)>
  java.util.Vector.clone/r1, <java.util.Vector: java.lang.Object clone()>
  java.security.UnresolvedPermission.resolve/$r15, <java.security.UnresolvedPermission: java.security.Permission resolve(java.security.Permission,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.class$/$r2, <java.security.UnresolvedPermission: java.lang.Class class$(java.lang.String)>
  java.security.UnresolvedPermissionCollection.elements/$r11, <java.security.UnresolvedPermissionCollection: java.util.Enumeration elements()>
  java.lang.Package$1.run/r26, <java.lang.Package$1: java.lang.Object run()>
  java.util.HashMap.clone/r1, <java.util.HashMap: java.lang.Object clone()>
  java.util.zip.ZipInputStream.readLOC/r3, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r10, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r17, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  java.net.InetAddress.getCachedAddress/r3, <java.net.InetAddress: java.lang.Object getCachedAddress(java.lang.String)>
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean)>/$r10, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String,boolean)>
  java.net.InetAddress.getAddressFromNameService/r7, <java.net.InetAddress: java.lang.Object getAddressFromNameService(java.lang.String)>
  java.net.InetAddress.checkLookupTable/n1, <java.net.InetAddress: java.lang.Object checkLookupTable(java.lang.String)>
  java.net.InetAddress.checkLookupTable/r12, <java.net.InetAddress: java.lang.Object checkLookupTable(java.lang.String)>
  java.net.InetAddress.getLocalHost/$r13, <java.net.InetAddress: java.net.InetAddress getLocalHost()>
  java.net.InetAddress.getLocalHost/$r14, <java.net.InetAddress: java.net.InetAddress getLocalHost()>
  <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>/r7, <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
  java.util.HashSet.clone/r1, <java.util.HashSet: java.lang.Object clone()>
  java.net.URLStreamHandler.getHostAddress/$r6, <java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
  java.net.URLStreamHandler.getHostAddress/$r10, <java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
  java.net.URLConnection.getContentHandler/r2, <java.net.URLConnection: java.net.ContentHandler getContentHandler()>
  java.net.URLConnection.lookupContentHandlerClassFor/r18, <java.net.URLConnection: java.net.ContentHandler lookupContentHandlerClassFor(java.lang.String)>
  java.net.URLConnection.lookupContentHandlerClassFor/$r21, <java.net.URLConnection: java.net.ContentHandler lookupContentHandlerClassFor(java.lang.String)>
  <java.io.BufferedReader: java.lang.String readLine(boolean)>/r3, <java.io.BufferedReader: java.lang.String readLine(boolean)>
  <java.io.BufferedReader: java.lang.String readLine(boolean)>/n0, <java.io.BufferedReader: java.lang.String readLine(boolean)>
  <java.io.BufferedReader: java.lang.String readLine(boolean)>/r5, <java.io.BufferedReader: java.lang.String readLine(boolean)>
  java.util.Date.clone/r1, <java.util.Date: java.lang.Object clone()>
  java.util.Date.toString/r4, <java.util.Date: java.lang.String toString()>
  java.io.InputStreamReader.getEncoding/r2, <java.io.InputStreamReader: java.lang.String getEncoding()>
  java.io.InputStreamReader.getEncoding/n0, <java.io.InputStreamReader: java.lang.String getEncoding()>
  java.lang.Shutdown.class$/$r2, <java.lang.Shutdown: java.lang.Class class$(java.lang.String)>
  java.io.ObjectOutputStream$PutFieldImpl.class$/$r2, <java.io.ObjectOutputStream$PutFieldImpl: java.lang.Class class$(java.lang.String)>
  java.text.SimpleDateFormat.parse/r12, <java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
  java.text.DateFormat.get/$r12, <java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>
  java.text.DateFormat.get/$r14, <java.text.DateFormat: java.text.DateFormat get(int,int,int,java.util.Locale)>
  <java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>/r1, <java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>/r4, <java.text.DecimalFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>/r7, <java.text.DecimalFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
  java.text.DecimalFormat.getDecimalFormatSymbols/$r4, <java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()>
  java.text.DecimalFormat.clone/r1, <java.text.DecimalFormat: java.lang.Object clone()>
  java.util.ResourceBundle$ResourceCacheKey.clone/$r2, <java.util.ResourceBundle$ResourceCacheKey: java.lang.Object clone()>
  java.util.zip.ZipEntry.clone/r1, <java.util.zip.ZipEntry: java.lang.Object clone()>
  java.security.cert.Certificate$CertificateRep.readResolve/$r5, <java.security.cert.Certificate$CertificateRep: java.lang.Object readResolve()>
  java.security.Provider.loadProvider/$r4, <java.security.Provider: java.security.Provider loadProvider(java.lang.String)>
  java.security.cert.CertificateFactory$1.run/r1, <java.security.cert.CertificateFactory$1: java.lang.Object run()>
  java.lang.ref.ReferenceQueue.poll/r2, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
  <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>/r3, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
  <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>/r4, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
  <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>/n0, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String)>/r3, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String)>/r25, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String)>
  java.security.Security.getImpl/$r21, <java.security.Security: java.lang.Object[] getImpl(java.lang.String,java.lang.String,java.lang.String)>
  java.security.Security.class$/$r2, <java.security.Security: java.lang.Class class$(java.lang.String)>
  java.util.Vector$1.nextElement/r2, <java.util.Vector$1: java.lang.Object nextElement()>
  java.io.FilePermission$1.run/r3, <java.io.FilePermission$1: java.lang.Object run()>
  java.io.FilePermission$1.run/$r12, <java.io.FilePermission$1: java.lang.Object run()>
  java.io.FilePermission$1.run/$r16, <java.io.FilePermission$1: java.lang.Object run()>
  java.security.Policy.getPolicyNoCheck/$r16, <java.security.Policy: java.security.Policy getPolicyNoCheck()>
  java.security.Policy.class$/$r2, <java.security.Policy: java.lang.Class class$(java.lang.String)>
  java.util.Calendar.clone/r1, <java.util.Calendar: java.lang.Object clone()>
  <java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>/$r28, <java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
  java.util.TimeZone.clone/r1, <java.util.TimeZone: java.lang.Object clone()>
  java.util.TimeZone.parseCustomTimeZone/n0, <java.util.TimeZone: java.util.SimpleTimeZone parseCustomTimeZone(java.lang.String)>
  java.util.TimeZone.parseCustomTimeZone/n1, <java.util.TimeZone: java.util.SimpleTimeZone parseCustomTimeZone(java.lang.String)>
  java.util.TimeZone.parseCustomTimeZone/r18, <java.util.TimeZone: java.util.SimpleTimeZone parseCustomTimeZone(java.lang.String)>
  java.util.TimeZone.class$/$r2, <java.util.TimeZone: java.lang.Class class$(java.lang.String)>
  java.text.DateFormatSymbols.clone/r1, <java.text.DateFormatSymbols: java.lang.Object clone()>
  java.text.DecimalFormatSymbols.clone/$r3, <java.text.DecimalFormatSymbols: java.lang.Object clone()>
  java.util.Collections$SynchronizedMap.get/r3, <java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object)>
  java.util.Collections$SynchronizedMap.put/r4, <java.util.Collections$SynchronizedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.Collections$SynchronizedMap.remove/r3, <java.util.Collections$SynchronizedMap: java.lang.Object remove(java.lang.Object)>
  java.util.Collections$SynchronizedMap.keySet/r3, <java.util.Collections$SynchronizedMap: java.util.Set keySet()>
  java.util.Collections$SynchronizedMap.entrySet/r3, <java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
  java.util.Collections$SynchronizedMap.values/r3, <java.util.Collections$SynchronizedMap: java.util.Collection values()>
  java.util.Collections$SynchronizedMap.toString/r2, <java.util.Collections$SynchronizedMap: java.lang.String toString()>
  java.util.Collections$SynchronizedSortedMap.comparator/r2, <java.util.Collections$SynchronizedSortedMap: java.util.Comparator comparator()>
  java.util.Collections$SynchronizedSortedMap.subMap/r4, <java.util.Collections$SynchronizedSortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
  java.util.Collections$SynchronizedSortedMap.headMap/r3, <java.util.Collections$SynchronizedSortedMap: java.util.SortedMap headMap(java.lang.Object)>
  java.util.Collections$SynchronizedSortedMap.tailMap/r3, <java.util.Collections$SynchronizedSortedMap: java.util.SortedMap tailMap(java.lang.Object)>
  java.util.Collections$SynchronizedSortedMap.firstKey/r2, <java.util.Collections$SynchronizedSortedMap: java.lang.Object firstKey()>
  java.util.Collections$SynchronizedSortedMap.lastKey/r2, <java.util.Collections$SynchronizedSortedMap: java.lang.Object lastKey()>
  <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>/r2, <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray()>
  <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>/r3, <java.util.Collections$SynchronizedCollection: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.Collections$SynchronizedCollection.toString/r2, <java.util.Collections$SynchronizedCollection: java.lang.String toString()>
  java.util.Collections$SynchronizedList.get/r2, <java.util.Collections$SynchronizedList: java.lang.Object get(int)>
  java.util.Collections$SynchronizedList.set/r3, <java.util.Collections$SynchronizedList: java.lang.Object set(int,java.lang.Object)>
  java.util.Collections$SynchronizedList.remove/r2, <java.util.Collections$SynchronizedList: java.lang.Object remove(int)>
  java.util.Collections$SynchronizedList.subList/r2, <java.util.Collections$SynchronizedList: java.util.List subList(int,int)>
  java.util.Collections$SynchronizedSortedSet.comparator/r2, <java.util.Collections$SynchronizedSortedSet: java.util.Comparator comparator()>
  java.util.Collections$SynchronizedSortedSet.subSet/r4, <java.util.Collections$SynchronizedSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
  java.util.Collections$SynchronizedSortedSet.headSet/r3, <java.util.Collections$SynchronizedSortedSet: java.util.SortedSet headSet(java.lang.Object)>
  java.util.Collections$SynchronizedSortedSet.tailSet/r3, <java.util.Collections$SynchronizedSortedSet: java.util.SortedSet tailSet(java.lang.Object)>
  java.util.Collections$SynchronizedSortedSet.first/r2, <java.util.Collections$SynchronizedSortedSet: java.lang.Object first()>
  java.util.Collections$SynchronizedSortedSet.last/r2, <java.util.Collections$SynchronizedSortedSet: java.lang.Object last()>
  java.util.AbstractSequentialList.get/$r4, <java.util.AbstractSequentialList: java.lang.Object get(int)>
  java.util.AbstractSequentialList.set/r3, <java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)>
  java.util.AbstractSequentialList.remove/r2, <java.util.AbstractSequentialList: java.lang.Object remove(int)>
  java.util.AbstractList$Itr.next/r1, <java.util.AbstractList$Itr: java.lang.Object next()>
  java.util.AbstractList$ListItr.previous/r2, <java.util.AbstractList$ListItr: java.lang.Object previous()>
  java.net.URLClassLoader.findClass/$r6, <java.net.URLClassLoader: java.lang.Class findClass(java.lang.String)>
  java.net.URLClassLoader.getPermissions/r2, <java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
  java.util.LinkedList.clone/r3, <java.util.LinkedList: java.lang.Object clone()>
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>/$r3, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
  <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>/$r4, <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>
  java.security.SecureClassLoader.getProtectionDomain/r2, <java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>
  java.net.URLClassLoader$1.run/$r10, <java.net.URLClassLoader$1: java.lang.Object run()>
  <java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>/r4, <java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
  <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>/n1, <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>
  <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>/r6, <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>
  <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>/$r8, <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.lang.String)>
  java.util.zip.ZipFile.getInflater/r3, <java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>
  java.util.zip.ZipFile.getInflater/r9, <java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/r2, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/r10, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>
  java.util.BitSet.clone/r3, <java.util.BitSet: java.lang.Object clone()>
  java.util.zip.ZipFile$2.nextElement/r4, <java.util.zip.ZipFile$2: java.lang.Object nextElement()>
  <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>/$r2, <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>/$r2, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>
  <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>/$r2, <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
  java.net.Socket.getLocalAddress/r4, <java.net.Socket: java.net.InetAddress getLocalAddress()>
  java.net.Socket.getInputStream/$r4, <java.net.Socket: java.io.InputStream getInputStream()>
  java.net.Socket.getOutputStream/$r4, <java.net.Socket: java.io.OutputStream getOutputStream()>
  java.net.PlainSocketImpl.acquireFD/r2, <java.net.PlainSocketImpl: java.io.FileDescriptor acquireFD()>
  java.net.Authenticator.requestPasswordAuthentication/r9, <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
  java.io.UnixFileSystem.listRoots/$r3, <java.io.UnixFileSystem: java.io.File[] listRoots()>
  java.io.UnixFileSystem.listRoots/$r6, <java.io.UnixFileSystem: java.io.File[] listRoots()>
  <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>/$r9, <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
  <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>/$r27, <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
  java.text.Collator.clone/$r3, <java.text.Collator: java.lang.Object clone()>
  java.text.RuleBasedCollator.class$/$r2, <java.text.RuleBasedCollator: java.lang.Class class$(java.lang.String)>
  java.text.Normalizer.clone/r1, <java.text.Normalizer: java.lang.Object clone()>
  java.text.CompactIntArray.clone/r1, <java.text.CompactIntArray: java.lang.Object clone()>
  java.text.CompactShortArray.clone/r1, <java.text.CompactShortArray: java.lang.Object clone()>
  java.text.CompactByteArray.clone/r1, <java.text.CompactByteArray: java.lang.Object clone()>
  java.text.StringCharacterIterator.clone/r1, <java.text.StringCharacterIterator: java.lang.Object clone()>
  <java.lang.String: java.lang.String substring(int,int)>/$r4, <java.lang.String: java.lang.String substring(int,int)>
  java.lang.StringBuffer.delete/r0, <java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>
  java.lang.StringBuffer.deleteCharAt/r0, <java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>
  java.lang.StringBuffer.replace/r0, <java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>
  <java.lang.StringBuffer: java.lang.String substring(int,int)>/$r4, <java.lang.StringBuffer: java.lang.String substring(int,int)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>/r0, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>
  java.util.Locale.getISO3Language/$r20, <java.util.Locale: java.lang.String getISO3Language()>
  java.util.Locale.getISO3Language/$stringconstant0, <java.util.Locale: java.lang.String getISO3Language()>
  java.util.Locale.getISO3Country/$r20, <java.util.Locale: java.lang.String getISO3Country()>
  java.util.Locale.getISO3Country/$stringconstant0, <java.util.Locale: java.lang.String getISO3Country()>
  <java.lang.System: java.lang.String getProperty(java.lang.String)>/$r6, <java.lang.System: java.lang.String getProperty(java.lang.String)>
  <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>/$r7, <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
  java.lang.System.setProperty/$r9, <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
  java.io.ObjectInputStream.readFields/r1, <java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>
  java.lang.FloatingDecimal.big5pow/$r12, <java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)>
  java.lang.FloatingDecimal.big5pow/$r15, <java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)>
  java.lang.FloatingDecimal.big5pow/$r20, <java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)>
  java.lang.FloatingDecimal.big5pow/$r27, <java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)>
  java.lang.FloatingDecimal.big5pow/$r30, <java.lang.FloatingDecimal: java.lang.FDBigInt big5pow(int)>
  java.lang.FloatingDecimal.doubleToBigInt/$r2, <java.lang.FloatingDecimal: java.lang.FDBigInt doubleToBigInt(double)>
  java.util.Properties.loadConvert/$r8, <java.util.Properties: java.lang.String loadConvert(java.lang.String)>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>/$r18, <java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
  java.io.FileInputStream.getFD/$r2, <java.io.FileInputStream: java.io.FileDescriptor getFD()>
  java.io.FileOutputStream.getFD/$r2, <java.io.FileOutputStream: java.io.FileDescriptor getFD()>
  java.util.Hashtable.put/r5, <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.ResourceBundle.getObject/r2, <java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)>
  <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>/$r4, <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
  <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>/r4, <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)>
  java.io.ObjectOutputStream.putFields/$r6, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>
  <java.text.Format: java.lang.Object parseObject(java.lang.String)>/r4, <java.text.Format: java.lang.Object parseObject(java.lang.String)>
  <java.util.StringTokenizer: java.lang.String nextToken()>/$r4, <java.util.StringTokenizer: java.lang.String nextToken()>
  <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/$r8, <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>
  java.io.ObjectInputStream$GetFieldImpl.checkField/r3, <java.io.ObjectInputStream$GetFieldImpl: java.io.ObjectStreamField checkField(java.lang.String,java.lang.Class)>
  java.lang.reflect.Proxy.getInvocationHandler/$r4, <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
  java.net.SocketPermission.parsePort/$r3, <java.net.SocketPermission: int[] parsePort(java.lang.String)>
  java.net.SocketPermission.parsePort/$r4, <java.net.SocketPermission: int[] parsePort(java.lang.String)>
  java.net.SocketPermission.parsePort/$r7, <java.net.SocketPermission: int[] parsePort(java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/r3, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/r12, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
  java.security.MessageDigest.clone/$r1, <java.security.MessageDigest: java.lang.Object clone()>
  java.util.Vector.firstElement/$r3, <java.util.Vector: java.lang.Object firstElement()>
  java.util.Vector.lastElement/$r3, <java.util.Vector: java.lang.Object lastElement()>
  java.util.Vector.get/$r3, <java.util.Vector: java.lang.Object get(int)>
  java.util.Vector.set/r2, <java.util.Vector: java.lang.Object set(int,java.lang.Object)>
  <java.util.Vector: java.lang.Object remove(int)>/r2, <java.util.Vector: java.lang.Object remove(int)>
  java.security.PermissionsEnumerator.nextElement/$r2, <java.security.PermissionsEnumerator: java.lang.Object nextElement()>
  java.util.zip.ZipInputStream.getUTF8String/$r7, <java.util.zip.ZipInputStream: java.lang.String getUTF8String(byte[],int,int)>
  java.net.InetAddress.getAllByName/r1, <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
  java.net.InetAddress.getAllByName/$r4, <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
  java.util.Stack.peek/$r2, <java.util.Stack: java.lang.Object peek()>
  java.lang.FDBigInt.sub/$r8, <java.lang.FDBigInt: java.lang.FDBigInt sub(java.lang.FDBigInt)>
  java.io.ObjectOutputStream$Stack.peek/$r2, <java.io.ObjectOutputStream$Stack: java.lang.Object peek()>
  <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r6, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r8, <java.text.NumberFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.NumberFormat: java.lang.Number parse(java.lang.String)>/r4, <java.text.NumberFormat: java.lang.Number parse(java.lang.String)>
  java.text.SimpleDateFormat.subFormat/r16, <java.text.SimpleDateFormat: java.lang.String subFormat(char,int,int,java.text.FieldPosition)>
  java.text.SimpleDateFormat.translatePattern/$r14, <java.text.SimpleDateFormat: java.lang.String translatePattern(java.lang.String,java.lang.String,java.lang.String)>
  <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r5, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r8, <java.text.DateFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.DateFormat: java.util.Date parse(java.lang.String)>/r4, <java.text.DateFormat: java.util.Date parse(java.lang.String)>
  java.text.Utility.RLEStringToShortArray/r1, <java.text.Utility: short[] RLEStringToShortArray(java.lang.String)>
  java.text.Utility.RLEStringToByteArray/r1, <java.text.Utility: byte[] RLEStringToByteArray(java.lang.String)>
  java.util.Hashtable$Entry.setValue/r2, <java.util.Hashtable$Entry: java.lang.Object setValue(java.lang.Object)>
  java.util.Hashtable$Enumerator.nextElement/$r6, <java.util.Hashtable$Enumerator: java.lang.Object nextElement()>
  java.util.Hashtable$Enumerator.next/$r3, <java.util.Hashtable$Enumerator: java.lang.Object next()>
  <java.util.AbstractList: java.util.ListIterator listIterator(int)>/$r6, <java.util.AbstractList: java.util.ListIterator listIterator(int)>
  java.security.Provider.entrySet/$r5, <java.security.Provider: java.util.Set entrySet()>
  java.security.Provider.entrySet/$r7, <java.security.Provider: java.util.Set entrySet()>
  java.security.MessageDigestSpi.clone/$r1, <java.security.MessageDigestSpi: java.lang.Object clone()>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/$r8, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/r35, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>
  java.security.Security.getFilterComponents/r12, <java.security.Security: java.lang.String[] getFilterComponents(java.lang.String,java.lang.String)>
  java.security.MessageDigest$Delegate.clone/r2, <java.security.MessageDigest$Delegate: java.lang.Object clone()>
  java.util.HashMap$HashIterator.next/$r8, <java.util.HashMap$HashIterator: java.lang.Object next()>
  java.math.BigInteger.randomBits/r1, <java.math.BigInteger: byte[] randomBits(int,java.util.Random)>
  java.math.BigInteger.probablePrime/$r2, <java.math.BigInteger: java.math.BigInteger probablePrime(int,java.util.Random)>
  java.math.BigInteger.pow/$r4, <java.math.BigInteger: java.math.BigInteger pow(int)>
  java.math.BigInteger.pow/$r7, <java.math.BigInteger: java.math.BigInteger pow(int)>
  java.math.BigInteger.mod/$r4, <java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>
  java.math.BigInteger.modPow/$r14, <java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modPow/$r17, <java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modPow/$r19, <java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modPow/$r23, <java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modPow/$r34, <java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modInverse/$r8, <java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>
  java.math.BigInteger.modInverse/$r12, <java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>
  java.math.BigInteger.modInverse/$r15, <java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>
  java.math.BigInteger.setBit/$r4, <java.math.BigInteger: java.math.BigInteger setBit(int)>
  java.math.BigInteger.clearBit/$r4, <java.math.BigInteger: java.math.BigInteger clearBit(int)>
  java.math.BigInteger.flipBit/$r4, <java.math.BigInteger: java.math.BigInteger flipBit(int)>
  java.util.Collections$CopiesList.get/$r8, <java.util.Collections$CopiesList: java.lang.Object get(int)>
  java.util.Collections$SingletonList.get/$r7, <java.util.Collections$SingletonList: java.lang.Object get(int)>
  java.util.SubList.listIterator/$r8, <java.util.SubList: java.util.ListIterator listIterator(int)>
  java.util.WeakHashMap$1.next/r1, <java.util.WeakHashMap$1: java.lang.Object next()>
  java.net.URLClassLoader.defineClass/$r14, <java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>
  java.util.LinkedList.getFirst/$r4, <java.util.LinkedList: java.lang.Object getFirst()>
  java.util.LinkedList.getLast/$r4, <java.util.LinkedList: java.lang.Object getLast()>
  java.util.LinkedList.entry/r2, <java.util.LinkedList: java.util.LinkedList$Entry entry(int)>
  java.math.MutableBigInteger.mutableModInverse/r8, <java.math.MutableBigInteger: java.math.MutableBigInteger mutableModInverse(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.mutableModInverse/$r10, <java.math.MutableBigInteger: java.math.MutableBigInteger mutableModInverse(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.mutableModInverse/$r13, <java.math.MutableBigInteger: java.math.MutableBigInteger mutableModInverse(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.modInverseMP2/r1, <java.math.MutableBigInteger: java.math.MutableBigInteger modInverseMP2(int)>
  java.math.MutableBigInteger.modInverseMP2/$r3, <java.math.MutableBigInteger: java.math.MutableBigInteger modInverseMP2(int)>
  java.math.MutableBigInteger.modInverseMP2/$r5, <java.math.MutableBigInteger: java.math.MutableBigInteger modInverseMP2(int)>
  java.math.MutableBigInteger.modInverse/$r17, <java.math.MutableBigInteger: java.math.MutableBigInteger modInverse(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.euclidModInverse/r3, <java.math.MutableBigInteger: java.math.MutableBigInteger euclidModInverse(int)>
  java.math.MutableBigInteger.euclidModInverse/r9, <java.math.MutableBigInteger: java.math.MutableBigInteger euclidModInverse(int)>
  java.util.Collections$5.next/$r2, <java.util.Collections$5: java.lang.Object next()>
  java.util.SubList$1.next/$r2, <java.util.SubList$1: java.lang.Object next()>
  java.util.SubList$1.previous/$r2, <java.util.SubList$1: java.lang.Object previous()>
  java.security.KeyStore.getKey/$r5, <java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>
  java.security.KeyStore.getCertificateChain/$r4, <java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>
  java.security.KeyStore.getCertificate/$r4, <java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>
  java.security.KeyStore.getCreationDate/$r4, <java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)>
  java.security.KeyStore.aliases/$r3, <java.security.KeyStore: java.util.Enumeration aliases()>
  java.security.KeyStore.getCertificateAlias/$r4, <java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
  java.net.URLClassLoader$3.nextElement/r1, <java.net.URLClassLoader$3: java.lang.Object nextElement()>
  java.util.zip.ZipFile.entries/$r2, <java.util.zip.ZipFile: java.util.Enumeration entries()>
  java.util.LinkedList$ListItr.next/$r8, <java.util.LinkedList$ListItr: java.lang.Object next()>
  java.util.LinkedList$ListItr.previous/$r6, <java.util.LinkedList$ListItr: java.lang.Object previous()>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/r3, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/r12, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
  <java.security.Signature: byte[] sign()>/$r1, <java.security.Signature: byte[] sign()>
  java.security.Signature.clone/$r1, <java.security.Signature: java.lang.Object clone()>
  java.security.SignatureSpi.clone/$r1, <java.security.SignatureSpi: java.lang.Object clone()>
  <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>/$r4, <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>
  java.security.Signature$Delegate.clone/r2, <java.security.Signature$Delegate: java.lang.Object clone()>
  <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>/$r4, <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>
  java.security.AlgorithmParameters.getParameterSpec/$r4, <java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>
  <java.security.AlgorithmParameters: byte[] getEncoded()>/$r3, <java.security.AlgorithmParameters: byte[] getEncoded()>
  <java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)>/$r4, <java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)>
  <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>/$r4, <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>
  java.net.PlainSocketImpl.getInputStream/$r5, <java.net.PlainSocketImpl: java.io.InputStream getInputStream()>
  java.net.PlainSocketImpl.getOutputStream/$r3, <java.net.PlainSocketImpl: java.io.OutputStream getOutputStream()>
  java.text.PatternEntry$Parser.next/$r53, <java.text.PatternEntry$Parser: java.text.PatternEntry next()>
  <java.lang.String: byte[] getBytes(java.lang.String)>/$r3, <java.lang.String: byte[] getBytes(java.lang.String)>
  <java.lang.String: byte[] getBytes()>/$r2, <java.lang.String: byte[] getBytes()>
  <java.lang.String: java.lang.String substring(int)>/$r1, <java.lang.String: java.lang.String substring(int)>
  java.lang.String.concat/r0, <java.lang.String: java.lang.String concat(java.lang.String)>
  java.lang.String.concat/$r3, <java.lang.String: java.lang.String concat(java.lang.String)>
  java.lang.String.replace/r0, <java.lang.String: java.lang.String replace(char,char)>
  java.lang.String.replace/$r4, <java.lang.String: java.lang.String replace(char,char)>
  <java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/r0, <java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
  <java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/$r6, <java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
  <java.lang.String: java.lang.String toLowerCase()>/$r2, <java.lang.String: java.lang.String toLowerCase()>
  <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/r0, <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
  <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/$r8, <java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
  <java.lang.String: java.lang.String toUpperCase()>/$r2, <java.lang.String: java.lang.String toUpperCase()>
  java.lang.String.trim/$r2, <java.lang.String: java.lang.String trim()>
  java.lang.String.toString/r0, <java.lang.String: java.lang.String toString()>
  java.lang.String.toCharArray/r1, <java.lang.String: char[] toCharArray()>
  java.lang.String.intern/@native-return, <java.lang.String: java.lang.String intern()>
  java.lang.Throwable.getMessage/$r1, <java.lang.Throwable: java.lang.String getMessage()>
  java.lang.Throwable.getLocalizedMessage/$r1, <java.lang.Throwable: java.lang.String getLocalizedMessage()>
  java.lang.Throwable.toString/$r8, <java.lang.Throwable: java.lang.String toString()>
  java.lang.Throwable.fillInStackTrace/@native-return, <java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
  java.lang.Class.toString/$r6, <java.lang.Class: java.lang.String toString()>
  java.lang.Class.newInstance/$r3, <java.lang.Class: java.lang.Object newInstance()>
  java.lang.Class.newInstance0/@native-return, <java.lang.Class: java.lang.Object newInstance0()>
  java.lang.Class.getName/@native-return, <java.lang.Class: java.lang.String getName()>
  java.lang.Class.getClassLoader/r1, <java.lang.Class: java.lang.ClassLoader getClassLoader()>
  java.lang.Class.getClassLoader0/@native-return, <java.lang.Class: java.lang.ClassLoader getClassLoader0()>
  java.lang.Class.getSuperclass/@native-return, <java.lang.Class: java.lang.Class getSuperclass()>
  java.lang.Class.getPackage/$r1, <java.lang.Class: java.lang.Package getPackage()>
  java.lang.Class.getInterfaces/@native-return, <java.lang.Class: java.lang.Class[] getInterfaces()>
  java.lang.Class.getComponentType/@native-return, <java.lang.Class: java.lang.Class getComponentType()>
  java.lang.Class.getSigners/@native-return, <java.lang.Class: java.lang.Object[] getSigners()>
  java.lang.Class.getDeclaringClass/@native-return, <java.lang.Class: java.lang.Class getDeclaringClass()>
  java.lang.Class.getClasses/r2, <java.lang.Class: java.lang.Class[] getClasses()>
  java.lang.Class.getFields/$r2, <java.lang.Class: java.lang.reflect.Field[] getFields()>
  java.lang.Class.getMethods/$r2, <java.lang.Class: java.lang.reflect.Method[] getMethods()>
  java.lang.Class.getConstructors/$r2, <java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
  java.lang.Class.getField/$r3, <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
  java.lang.Class.getMethod/$r4, <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
  java.lang.Class.getConstructor/$r3, <java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
  java.lang.Class.getDeclaredClasses/$r2, <java.lang.Class: java.lang.Class[] getDeclaredClasses()>
  java.lang.Class.getDeclaredFields/$r2, <java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
  java.lang.Class.getDeclaredMethods/$r2, <java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
  java.lang.Class.getDeclaredConstructors/$r2, <java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
  java.lang.Class.getDeclaredField/$r3, <java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
  java.lang.Class.getDeclaredMethod/$r4, <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
  java.lang.Class.getDeclaredConstructor/$r3, <java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
  java.lang.Class.getResourceAsStream/$r4, <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
  java.lang.Class.getResourceAsStream/$r5, <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
  java.lang.Class.getResource/$r4, <java.lang.Class: java.net.URL getResource(java.lang.String)>
  java.lang.Class.getResource/$r5, <java.lang.Class: java.net.URL getResource(java.lang.String)>
  java.lang.Class.getProtectionDomain/r2, <java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>
  java.lang.Class.getProtectionDomain0/@native-return, <java.lang.Class: java.security.ProtectionDomain getProtectionDomain0()>
  java.lang.Class.resolveName/r1, <java.lang.Class: java.lang.String resolveName(java.lang.String)>
  java.lang.Class.getFields0/@native-return, <java.lang.Class: java.lang.reflect.Field[] getFields0(int)>
  java.lang.Class.getMethods0/@native-return, <java.lang.Class: java.lang.reflect.Method[] getMethods0(int)>
  java.lang.Class.getConstructors0/@native-return, <java.lang.Class: java.lang.reflect.Constructor[] getConstructors0(int)>
  java.lang.Class.getField0/@native-return, <java.lang.Class: java.lang.reflect.Field getField0(java.lang.String,int)>
  java.lang.Class.getMethod0/@native-return, <java.lang.Class: java.lang.reflect.Method getMethod0(java.lang.String,java.lang.Class[],int)>
  java.lang.Class.getConstructor0/@native-return, <java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>
  java.lang.Class.getDeclaredClasses0/@native-return, <java.lang.Class: java.lang.Class[] getDeclaredClasses0()>
  <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>/$r3, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(char[])>/r0, <java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
  <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(char)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer append(char)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(int)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(int)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(long)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(long)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(float)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(float)>
  <java.lang.StringBuffer: java.lang.StringBuffer append(double)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer append(double)>
  <java.lang.StringBuffer: java.lang.String substring(int)>/$r1, <java.lang.StringBuffer: java.lang.String substring(int)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>/$r3, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>/r0, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>
  <java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>/$r2, <java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>
  java.lang.StringBuffer.reverse/r0, <java.lang.StringBuffer: java.lang.StringBuffer reverse()>
  java.lang.StringBuffer.toString/$r1, <java.lang.StringBuffer: java.lang.String toString()>
  java.lang.StringBuffer.getValue/$r1, <java.lang.StringBuffer: char[] getValue()>
  <java.lang.Integer: java.lang.String toString()>/$r1, <java.lang.Integer: java.lang.String toString()>
  java.lang.ThreadLocal.get/r3, <java.lang.ThreadLocal: java.lang.Object get()>
  java.lang.ThreadLocal.get/$r4, <java.lang.ThreadLocal: java.lang.Object get()>
  java.lang.ThreadLocal.getMap/$r2, <java.lang.ThreadLocal: java.lang.ThreadLocal$ThreadLocalMap getMap(java.lang.Thread)>
  java.io.ObjectStreamField.getName/$r1, <java.io.ObjectStreamField: java.lang.String getName()>
  java.io.ObjectStreamField.getType/$r3, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r14, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getTypeString/$r1, <java.io.ObjectStreamField: java.lang.String getTypeString()>
  java.io.ObjectStreamField.toString/$r8, <java.io.ObjectStreamField: java.lang.String toString()>
  java.io.ObjectStreamField.toString/$r14, <java.io.ObjectStreamField: java.lang.String toString()>
  java.io.ObjectStreamField.getField/$r1, <java.io.ObjectStreamField: java.lang.reflect.Field getField()>
  java.util.Locale.getLanguage/$r1, <java.util.Locale: java.lang.String getLanguage()>
  java.util.Locale.getCountry/$r1, <java.util.Locale: java.lang.String getCountry()>
  java.util.Locale.getVariant/$r1, <java.util.Locale: java.lang.String getVariant()>
  java.util.Locale.toString/$r13, <java.util.Locale: java.lang.String toString()>
  <java.util.Locale: java.lang.String getDisplayLanguage()>/$r2, <java.util.Locale: java.lang.String getDisplayLanguage()>
  <java.util.Locale: java.lang.String getDisplayCountry()>/$r2, <java.util.Locale: java.lang.String getDisplayCountry()>
  <java.util.Locale: java.lang.String getDisplayVariant()>/$r2, <java.util.Locale: java.lang.String getDisplayVariant()>
  <java.util.Locale: java.lang.String getDisplayName()>/$r2, <java.util.Locale: java.lang.String getDisplayName()>
  java.util.Locale.toLowerCase/$r3, <java.util.Locale: java.lang.String toLowerCase(java.lang.String)>
  java.util.Locale.toUpperCase/$r3, <java.util.Locale: java.lang.String toUpperCase(java.lang.String)>
  java.util.Locale.findStringMatch/$r7, <java.util.Locale: java.lang.String findStringMatch(java.lang.String[][],java.lang.String,java.lang.String)>
  java.util.Locale.findStringMatch/$r11, <java.util.Locale: java.lang.String findStringMatch(java.lang.String[][],java.lang.String,java.lang.String)>
  java.util.Locale.findStringMatch/$r18, <java.util.Locale: java.lang.String findStringMatch(java.lang.String[][],java.lang.String,java.lang.String)>
  java.util.Locale.findStringMatch/$stringconstant0, <java.util.Locale: java.lang.String findStringMatch(java.lang.String[][],java.lang.String,java.lang.String)>
  java.util.Locale.convertOldISOCodes/r3, <java.util.Locale: java.lang.String convertOldISOCodes(java.lang.String)>
  java.util.Locale.convertOldISOCodes/$stringconstant0, <java.util.Locale: java.lang.String convertOldISOCodes(java.lang.String)>
  java.util.Locale.convertOldISOCodes/$stringconstant1, <java.util.Locale: java.lang.String convertOldISOCodes(java.lang.String)>
  java.util.Locale.convertOldISOCodes/$stringconstant2, <java.util.Locale: java.lang.String convertOldISOCodes(java.lang.String)>
  <java.lang.Long: java.lang.String toString()>/$r1, <java.lang.Long: java.lang.String toString()>
  <java.lang.Float: java.lang.String toString()>/$r1, <java.lang.Float: java.lang.String toString()>
  <java.lang.Double: java.lang.String toString()>/$r1, <java.lang.Double: java.lang.String toString()>
  java.lang.Character.toString/$r3, <java.lang.Character: java.lang.String toString()>
  java.lang.ClassNotFoundException.getException/$r1, <java.lang.ClassNotFoundException: java.lang.Throwable getException()>
  <java.io.ObjectInputStream: java.lang.Object readObject()>/$r1, <java.io.ObjectInputStream: java.lang.Object readObject()>
  <java.io.ObjectInputStream: java.lang.Object readObject()>/$r2, <java.io.ObjectInputStream: java.lang.Object readObject()>
  java.io.ObjectInputStream.resolveClass/$r4, <java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
  java.io.ObjectInputStream.loadClass0/$r4, <java.io.ObjectInputStream: java.lang.Class loadClass0(java.lang.Class,java.lang.String)>
  java.io.ObjectInputStream.resolveObject/r1, <java.io.ObjectInputStream: java.lang.Object resolveObject(java.lang.Object)>
  java.io.ObjectInputStream.readClassDescriptor/r2, <java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>
  java.io.ObjectInputStream.readLine/$r2, <java.io.ObjectInputStream: java.lang.String readLine()>
  java.io.ObjectInputStream.readUTF/$r1, <java.io.ObjectInputStream: java.lang.String readUTF()>
  java.security.ProtectionDomain.getCodeSource/$r1, <java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>
  java.security.ProtectionDomain.getPermissions/$r1, <java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>
  java.security.ProtectionDomain.toString/$r9, <java.security.ProtectionDomain: java.lang.String toString()>
  <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>/$r2, <java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
  java.lang.ClassLoader.loadClassInternal/$r2, <java.lang.ClassLoader: java.lang.Class loadClassInternal(java.lang.String)>
  <java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>/$r2, <java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>
  <java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>/$r3, <java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>
  java.lang.ClassLoader.findSystemClass/$r3, <java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)>
  java.lang.ClassLoader.findSystemClass/$r4, <java.lang.ClassLoader: java.lang.Class findSystemClass(java.lang.String)>
  java.lang.ClassLoader.getParent/$r5, <java.lang.ClassLoader: java.lang.ClassLoader getParent()>
  java.lang.ClassLoader.findBootstrapClass0/$r2, <java.lang.ClassLoader: java.lang.Class findBootstrapClass0(java.lang.String)>
  java.lang.ClassLoader.defineClass0/@native-return, <java.lang.ClassLoader: java.lang.Class defineClass0(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
  java.lang.ClassLoader.findBootstrapClass/@native-return, <java.lang.ClassLoader: java.lang.Class findBootstrapClass(java.lang.String)>
  java.lang.ClassLoader.findLoadedClass/@native-return, <java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>
  java.lang.ClassLoader.getResource/r2, <java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
  java.lang.ClassLoader.getResources/$r8, <java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
  java.lang.ClassLoader.findResources/$r2, <java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>
  java.lang.Package.getName/$r1, <java.lang.Package: java.lang.String getName()>
  java.lang.Package.getSpecificationTitle/$r1, <java.lang.Package: java.lang.String getSpecificationTitle()>
  java.lang.Package.getSpecificationVersion/$r1, <java.lang.Package: java.lang.String getSpecificationVersion()>
  java.lang.Package.getSpecificationVendor/$r1, <java.lang.Package: java.lang.String getSpecificationVendor()>
  java.lang.Package.getImplementationTitle/$r1, <java.lang.Package: java.lang.String getImplementationTitle()>
  java.lang.Package.getImplementationVersion/$r1, <java.lang.Package: java.lang.String getImplementationVersion()>
  java.lang.Package.getImplementationVendor/$r1, <java.lang.Package: java.lang.String getImplementationVendor()>
  java.lang.Package.toString/$r17, <java.lang.Package: java.lang.String toString()>
  java.lang.reflect.Field.getDeclaringClass/$r1, <java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
  java.lang.reflect.Field.getName/$r1, <java.lang.reflect.Field: java.lang.String getName()>
  java.lang.reflect.Field.getType/$r1, <java.lang.reflect.Field: java.lang.Class getType()>
  java.lang.reflect.Field.toString/$r18, <java.lang.reflect.Field: java.lang.String toString()>
  java.lang.reflect.Field.get/@native-return, <java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
  java.lang.reflect.Method.getDeclaringClass/$r1, <java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
  java.lang.reflect.Method.getName/$r1, <java.lang.reflect.Method: java.lang.String getName()>
  java.lang.reflect.Method.getReturnType/$r1, <java.lang.reflect.Method: java.lang.Class getReturnType()>
  java.lang.reflect.Method.getParameterTypes/$r2, <java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
  java.lang.reflect.Method.getExceptionTypes/$r2, <java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
  java.lang.reflect.Method.invoke/@native-return, <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
  java.lang.reflect.Constructor.getDeclaringClass/$r1, <java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
  java.lang.reflect.Constructor.getName/$r2, <java.lang.reflect.Constructor: java.lang.String getName()>
  java.lang.reflect.Constructor.getParameterTypes/$r2, <java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
  java.lang.reflect.Constructor.getExceptionTypes/$r2, <java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>
  java.lang.reflect.Constructor.newInstance/@native-return, <java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>
  java.net.URL.getQuery/$r1, <java.net.URL: java.lang.String getQuery()>
  java.net.URL.getPath/$r1, <java.net.URL: java.lang.String getPath()>
  java.net.URL.getUserInfo/$r1, <java.net.URL: java.lang.String getUserInfo()>
  java.net.URL.getAuthority/$r1, <java.net.URL: java.lang.String getAuthority()>
  java.net.URL.getProtocol/$r1, <java.net.URL: java.lang.String getProtocol()>
  java.net.URL.getHost/$r1, <java.net.URL: java.lang.String getHost()>
  java.net.URL.getFile/$r1, <java.net.URL: java.lang.String getFile()>
  java.net.URL.getRef/$r1, <java.net.URL: java.lang.String getRef()>
  java.net.URL.toString/$r1, <java.net.URL: java.lang.String toString()>
  java.net.URL.toExternalForm/$r2, <java.net.URL: java.lang.String toExternalForm()>
  java.net.URL.openConnection/$r2, <java.net.URL: java.net.URLConnection openConnection()>
  java.net.URL.openStream/$r2, <java.net.URL: java.io.InputStream openStream()>
  <java.net.URL: java.lang.Object getContent()>/$r2, <java.net.URL: java.lang.Object getContent()>
  <java.net.URL: java.lang.Object getContent(java.lang.Class[])>/$r3, <java.net.URL: java.lang.Object getContent(java.lang.Class[])>
  java.security.CodeSource.getLocation/$r1, <java.security.CodeSource: java.net.URL getLocation()>
  java.security.CodeSource.getCertificates/$r4, <java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>
  java.security.CodeSource.toString/$r18, <java.security.CodeSource: java.lang.String toString()>
  java.io.ObjectStreamClass.getName/$r1, <java.io.ObjectStreamClass: java.lang.String getName()>
  java.io.ObjectStreamClass.forClass/$r1, <java.io.ObjectStreamClass: java.lang.Class forClass()>
  java.io.ObjectStreamClass.getFields/r1, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()>
  java.io.ObjectStreamClass.getFields/$r6, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()>
  java.io.ObjectStreamClass.getFieldsNoCopy/$r1, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFieldsNoCopy()>
  <java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>/$r7, <java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)>
  <java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String,java.lang.Class)>/$r5, <java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String,java.lang.Class)>
  java.io.ObjectStreamClass.toString/$r9, <java.io.ObjectStreamClass: java.lang.String toString()>
  java.io.ObjectStreamClass.getSuperclass/$r1, <java.io.ObjectStreamClass: java.io.ObjectStreamClass getSuperclass()>
  java.io.ObjectStreamClass.localClassDescriptor/$r1, <java.io.ObjectStreamClass: java.io.ObjectStreamClass localClassDescriptor()>
  java.lang.Class$1.run/$r8, <java.lang.Class$1: java.lang.Object run()>
  <java.security.Permissions: java.util.Enumeration elements()>/$r1, <java.security.Permissions: java.util.Enumeration elements()>
  <java.security.Permissions: java.util.Enumeration elements(java.security.Permission)>/$r3, <java.security.Permissions: java.util.Enumeration elements(java.security.Permission)>
  java.security.Permissions.getUnresolvedPermissions/r17, <java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>
  java.security.Permission.getName/$r1, <java.security.Permission: java.lang.String getName()>
  java.security.Permission.toString/$r11, <java.security.Permission: java.lang.String toString()>
  java.security.Permission.toString/$r23, <java.security.Permission: java.lang.String toString()>
  java.lang.SecurityManager.getClassContext/@native-return, <java.lang.SecurityManager: java.lang.Class[] getClassContext()>
  java.lang.SecurityManager.currentClassLoader/r1, <java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()>
  java.lang.SecurityManager.currentClassLoader0/@native-return, <java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader0()>
  java.lang.SecurityManager.currentLoadedClass/r1, <java.lang.SecurityManager: java.lang.Class currentLoadedClass()>
  java.lang.SecurityManager.getSecurityContext/$r1, <java.lang.SecurityManager: java.lang.Object getSecurityContext()>
  java.lang.SecurityManager.currentLoadedClass0/@native-return, <java.lang.SecurityManager: java.lang.Class currentLoadedClass0()>
  java.lang.SecurityManager.getThreadGroup/$r2, <java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()>
  java.security.AllPermission.getActions/$stringconstant0, <java.security.AllPermission: java.lang.String getActions()>
  java.security.AllPermission.newPermissionCollection/$r1, <java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>
  java.lang.ThreadLocal$ThreadLocalMap.get/$r6, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object get(java.lang.ThreadLocal)>
  java.lang.ThreadLocal$ThreadLocalMap.get/$r7, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object get(java.lang.ThreadLocal)>
  java.lang.ThreadLocal$ThreadLocalMap.getAfterMiss/$r5, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object getAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>
  java.lang.ThreadLocal$ThreadLocalMap.getAfterMiss/$r6, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object getAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>
  java.lang.ThreadLocal$ThreadLocalMap.getAfterMiss/r7, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object getAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)>
  java.lang.ThreadLocal$ThreadLocalMap.replaceStaleEntry/r2, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int,boolean)>
  java.lang.Thread.getName/$r2, <java.lang.Thread: java.lang.String getName()>
  java.lang.Thread.getThreadGroup/$r1, <java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
  java.lang.Thread.toString/$r13, <java.lang.Thread: java.lang.String toString()>
  java.lang.Thread.toString/$r23, <java.lang.Thread: java.lang.String toString()>
  java.lang.Thread.getContextClassLoader/$r7, <java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
  java.lang.FloatingDecimal.toString/$r11, <java.lang.FloatingDecimal: java.lang.String toString()>
  java.lang.FloatingDecimal.toJavaFormatString/$r10, <java.lang.FloatingDecimal: java.lang.String toJavaFormatString()>
  java.util.Properties.setProperty/$r3, <java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>
  java.util.Properties.saveConvert/$r25, <java.util.Properties: java.lang.String saveConvert(java.lang.String,boolean)>
  <java.util.Properties: java.lang.String getProperty(java.lang.String)>/$r7, <java.util.Properties: java.lang.String getProperty(java.lang.String)>
  <java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>/$r4, <java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>
  java.util.Properties.propertyNames/$r3, <java.util.Properties: java.util.Enumeration propertyNames()>
  <java.util.PropertyPermission: java.lang.String getActions()>/$r3, <java.util.PropertyPermission: java.lang.String getActions()>
  java.util.PropertyPermission.newPermissionCollection/$r1, <java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>
  java.lang.Runtime.execInternal/@native-return, <java.lang.Runtime: java.lang.Process execInternal(java.lang.String[],java.lang.String[],java.lang.String)>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String)>/$r2, <java.lang.Runtime: java.lang.Process exec(java.lang.String)>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>/$r3, <java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>/$r10, <java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String[])>/$r2, <java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
  <java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>/$r3, <java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>
  java.lang.Runtime.getLocalizedInputStream/r1, <java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)>
  java.lang.Runtime.getLocalizedOutputStream/r1, <java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)>
  java.lang.Boolean.toString/$r1, <java.lang.Boolean: java.lang.String toString()>
  <java.lang.Short: java.lang.String toString()>/$r1, <java.lang.Short: java.lang.String toString()>
  <java.lang.Byte: java.lang.String toString()>/$r1, <java.lang.Byte: java.lang.String toString()>
  java.util.MissingResourceException.getClassName/$r1, <java.util.MissingResourceException: java.lang.String getClassName()>
  java.util.MissingResourceException.getKey/$r1, <java.util.MissingResourceException: java.lang.String getKey()>
  java.util.Hashtable.keys/$r1, <java.util.Hashtable: java.util.Enumeration keys()>
  java.util.Hashtable.elements/$r1, <java.util.Hashtable: java.util.Enumeration elements()>
  java.util.Hashtable.get/$r5, <java.util.Hashtable: java.lang.Object get(java.lang.Object)>
  java.util.Hashtable.remove/r5, <java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
  java.util.Hashtable.toString/$r18, <java.util.Hashtable: java.lang.String toString()>
  java.util.Hashtable.getEnumeration/$r1, <java.util.Hashtable: java.util.Enumeration getEnumeration(int)>
  java.util.Hashtable.getEnumeration/$r2, <java.util.Hashtable: java.util.Enumeration getEnumeration(int)>
  java.util.Hashtable.getIterator/$r1, <java.util.Hashtable: java.util.Iterator getIterator(int)>
  java.util.Hashtable.getIterator/$r2, <java.util.Hashtable: java.util.Iterator getIterator(int)>
  java.util.Hashtable.keySet/$r4, <java.util.Hashtable: java.util.Set keySet()>
  java.util.Hashtable.entrySet/$r4, <java.util.Hashtable: java.util.Set entrySet()>
  java.util.Hashtable.values/$r4, <java.util.Hashtable: java.util.Collection values()>
  java.util.ResourceBundle.getString/$r3, <java.util.ResourceBundle: java.lang.String getString(java.lang.String)>
  java.util.ResourceBundle.getStringArray/$r3, <java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)>
  java.util.ResourceBundle.getLocale/$r1, <java.util.ResourceBundle: java.util.Locale getLocale()>
  java.text.MessageFormat.getLocale/$r1, <java.text.MessageFormat: java.util.Locale getLocale()>
  java.text.MessageFormat.toPattern/$r117, <java.text.MessageFormat: java.lang.String toPattern()>
  <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)>/$r4, <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>/$r5, <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>/r3, <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
  <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>/r4, <java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)>
  java.text.MessageFormat.parseObject/$r3, <java.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
  java.text.MessageFormat.clone/r1, <java.text.MessageFormat: java.lang.Object clone()>
  <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,int)>/r2, <java.text.MessageFormat: java.lang.StringBuffer format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,int)>
  java.text.MessageFormat.getIntegerFormat/r2, <java.text.MessageFormat: java.text.NumberFormat getIntegerFormat(java.util.Locale)>
  java.io.ObjectOutputStream.replaceObject/r1, <java.io.ObjectOutputStream: java.lang.Object replaceObject(java.lang.Object)>
  java.io.ObjectOutputStream.lookupReplace/$r4, <java.io.ObjectOutputStream: java.lang.Object lookupReplace(java.lang.Object)>
  <java.text.Format: java.lang.String format(java.lang.Object)>/$r5, <java.text.Format: java.lang.String format(java.lang.Object)>
  <java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>/$r2, <java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>
  java.util.StringTokenizer.nextElement/$r1, <java.util.StringTokenizer: java.lang.Object nextElement()>
  java.lang.Character$Subset.toString/$r1, <java.lang.Character$Subset: java.lang.String toString()>
  java.io.InvalidClassException.getMessage/$r2, <java.io.InvalidClassException: java.lang.String getMessage()>
  java.io.InvalidClassException.getMessage/$r9, <java.io.InvalidClassException: java.lang.String getMessage()>
  java.io.DataInputStream.readLine/$r8, <java.io.DataInputStream: java.lang.String readLine()>
  <java.io.DataInputStream: java.lang.String readUTF()>/$r1, <java.io.DataInputStream: java.lang.String readUTF()>
  <java.util.ArrayList: java.lang.Object[] toArray()>/r1, <java.util.ArrayList: java.lang.Object[] toArray()>
  <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.ArrayList.get/$r2, <java.util.ArrayList: java.lang.Object get(int)>
  java.util.ArrayList.set/r2, <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
  java.util.ArrayList.remove/r1, <java.util.ArrayList: java.lang.Object remove(int)>
  java.lang.reflect.InvocationTargetException.getTargetException/$r1, <java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
  java.io.ObjectInputStream$GetFieldImpl.getObjectStreamClass/$r1, <java.io.ObjectInputStream$GetFieldImpl: java.io.ObjectStreamClass getObjectStreamClass()>
  <java.io.ObjectInputStream$GetFieldImpl: java.lang.Object get(java.lang.String,java.lang.Object)>/r2, <java.io.ObjectInputStream$GetFieldImpl: java.lang.Object get(java.lang.String,java.lang.Object)>
  <java.io.ObjectInputStream$GetFieldImpl: java.lang.Object get(java.lang.String,java.lang.Object)>/$r9, <java.io.ObjectInputStream$GetFieldImpl: java.lang.Object get(java.lang.String,java.lang.Object)>
  java.io.WriteAbortedException.getMessage/$r2, <java.io.WriteAbortedException: java.lang.String getMessage()>
  java.io.WriteAbortedException.getMessage/$r10, <java.io.WriteAbortedException: java.lang.String getMessage()>
  java.security.BasicPermission.getActions/$stringconstant0, <java.security.BasicPermission: java.lang.String getActions()>
  java.security.BasicPermission.newPermissionCollection/$r1, <java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>
  java.security.cert.Certificate.getType/$r1, <java.security.cert.Certificate: java.lang.String getType()>
  <java.net.SocketPermission: java.lang.String getActions()>/$r3, <java.net.SocketPermission: java.lang.String getActions()>
  java.net.SocketPermission.newPermissionCollection/$r1, <java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>
  java.security.cert.CertificateFactory.getProvider/$r1, <java.security.cert.CertificateFactory: java.security.Provider getProvider()>
  java.security.cert.CertificateFactory.getType/$r1, <java.security.cert.CertificateFactory: java.lang.String getType()>
  java.security.cert.CertificateFactory.generateCertificate/$r3, <java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>
  java.security.cert.CertificateFactory.generateCertificates/$r3, <java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>
  java.security.cert.CertificateFactory.generateCRL/$r3, <java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>
  java.security.cert.CertificateFactory.generateCRLs/$r3, <java.security.cert.CertificateFactory: java.util.Collection generateCRLs(java.io.InputStream)>
  java.security.DigestOutputStream.getMessageDigest/$r1, <java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()>
  java.security.DigestOutputStream.toString/$r6, <java.security.DigestOutputStream: java.lang.String toString()>
  java.lang.ref.SoftReference.get/r1, <java.lang.ref.SoftReference: java.lang.Object get()>
  java.io.ByteArrayOutputStream.toByteArray/r1, <java.io.ByteArrayOutputStream: byte[] toByteArray()>
  <java.io.ByteArrayOutputStream: java.lang.String toString()>/$r1, <java.io.ByteArrayOutputStream: java.lang.String toString()>
  <java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>/$r2, <java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>
  <java.io.ByteArrayOutputStream: java.lang.String toString(int)>/$r1, <java.io.ByteArrayOutputStream: java.lang.String toString(int)>
  java.security.MessageDigest.getProvider/$r1, <java.security.MessageDigest: java.security.Provider getProvider()>
  <java.security.MessageDigest: byte[] digest()>/r1, <java.security.MessageDigest: byte[] digest()>
  <java.security.MessageDigest: byte[] digest(byte[])>/$r2, <java.security.MessageDigest: byte[] digest(byte[])>
  java.security.MessageDigest.toString/$r14, <java.security.MessageDigest: java.lang.String toString()>
  java.security.MessageDigest.getAlgorithm/$r1, <java.security.MessageDigest: java.lang.String getAlgorithm()>
  java.util.Vector.elements/$r1, <java.util.Vector: java.util.Enumeration elements()>
  <java.util.Vector: java.lang.Object[] toArray()>/r1, <java.util.Vector: java.lang.Object[] toArray()>
  <java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.Vector.toString/$r1, <java.util.Vector: java.lang.String toString()>
  java.util.Vector.subList/$r2, <java.util.Vector: java.util.List subList(int,int)>
  java.security.PermissionsHash.elements/$r2, <java.security.PermissionsHash: java.util.Enumeration elements()>
  java.security.UnresolvedPermission.getActions/$stringconstant0, <java.security.UnresolvedPermission: java.lang.String getActions()>
  java.security.UnresolvedPermission.toString/$r12, <java.security.UnresolvedPermission: java.lang.String toString()>
  java.security.UnresolvedPermission.newPermissionCollection/$r1, <java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>
  java.security.UnresolvedPermissionCollection.getUnresolvedPermissions/$r6, <java.security.UnresolvedPermissionCollection: java.util.Vector getUnresolvedPermissions(java.security.Permission)>
  java.security.PermissionsEnumerator.getNextEnumWithMore/r2, <java.security.PermissionsEnumerator: java.util.Enumeration getNextEnumWithMore()>
  java.util.jar.Manifest.getMainAttributes/$r1, <java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>
  java.util.jar.Manifest.getEntries/$r1, <java.util.jar.Manifest: java.util.Map getEntries()>
  java.util.jar.Manifest.getAttributes/$r4, <java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>
  java.util.jar.Manifest.parseName/$r2, <java.util.jar.Manifest: java.lang.String parseName(byte[],int)>
  java.util.jar.Manifest.clone/$r1, <java.util.jar.Manifest: java.lang.Object clone()>
  java.util.jar.Attributes$Name.toString/$r1, <java.util.jar.Attributes$Name: java.lang.String toString()>
  java.util.HashMap.get/$r5, <java.util.HashMap: java.lang.Object get(java.lang.Object)>
  java.util.HashMap.get/$r8, <java.util.HashMap: java.lang.Object get(java.lang.Object)>
  java.util.HashMap.put/r5, <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.HashMap.put/r9, <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.HashMap.remove/r5, <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
  java.util.HashMap.remove/r18, <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
  java.util.HashMap.keySet/$r3, <java.util.HashMap: java.util.Set keySet()>
  java.util.HashMap.values/$r3, <java.util.HashMap: java.util.Collection values()>
  java.util.HashMap.entrySet/$r3, <java.util.HashMap: java.util.Set entrySet()>
  java.util.HashMap.getHashIterator/$r1, <java.util.HashMap: java.util.Iterator getHashIterator(int)>
  java.util.HashMap.getHashIterator/$r2, <java.util.HashMap: java.util.Iterator getHashIterator(int)>
  java.util.jar.JarInputStream.getBytes/$r5, <java.util.jar.JarInputStream: byte[] getBytes(java.io.InputStream)>
  java.util.jar.JarInputStream.getManifest/$r1, <java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()>
  java.util.jar.JarInputStream.getNextEntry/r1, <java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()>
  java.util.jar.JarInputStream.getNextJarEntry/$r2, <java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>
  java.util.jar.JarInputStream.createZipEntry/r3, <java.util.jar.JarInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
  java.util.jar.Attributes.get/$r3, <java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>
  <java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>/$r4, <java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>
  <java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>/$r3, <java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>
  java.util.jar.Attributes.put/$r6, <java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.jar.Attributes.putValue/$r5, <java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>
  java.util.jar.Attributes.remove/$r3, <java.util.jar.Attributes: java.lang.Object remove(java.lang.Object)>
  java.util.jar.Attributes.keySet/$r2, <java.util.jar.Attributes: java.util.Set keySet()>
  java.util.jar.Attributes.values/$r2, <java.util.jar.Attributes: java.util.Collection values()>
  java.util.jar.Attributes.entrySet/$r2, <java.util.jar.Attributes: java.util.Set entrySet()>
  java.util.jar.Attributes.clone/$r1, <java.util.jar.Attributes: java.lang.Object clone()>
  java.util.zip.ZipInputStream.getNextEntry/$r7, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
  java.util.zip.ZipInputStream.createZipEntry/$r2, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
  java.lang.ThreadGroup.getName/$r1, <java.lang.ThreadGroup: java.lang.String getName()>
  java.lang.ThreadGroup.getParent/$r3, <java.lang.ThreadGroup: java.lang.ThreadGroup getParent()>
  java.lang.ThreadGroup.toString/$r11, <java.lang.ThreadGroup: java.lang.String toString()>
  <java.net.InetAddress: java.lang.String getHostName()>/$r1, <java.net.InetAddress: java.lang.String getHostName()>
  java.net.InetAddress.getAddress/r1, <java.net.InetAddress: byte[] getAddress()>
  java.net.InetAddress.getHostAddress/$r9, <java.net.InetAddress: java.lang.String getHostAddress()>
  java.net.InetAddress.toString/$r7, <java.net.InetAddress: java.lang.String toString()>
  java.lang.SecurityManager$2.run/$r1, <java.lang.SecurityManager$2: java.lang.Object run()>
  java.lang.SecurityManager$1.run/$r1, <java.lang.SecurityManager$1: java.lang.Object run()>
  <java.io.FilePermission: java.lang.String getActions()>/$r3, <java.io.FilePermission: java.lang.String getActions()>
  java.io.FilePermission.newPermissionCollection/$r1, <java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>
  java.io.File.getName/$r3, <java.io.File: java.lang.String getName()>
  java.io.File.getName/$r5, <java.io.File: java.lang.String getName()>
  java.io.File.getParent/$r4, <java.io.File: java.lang.String getParent()>
  java.io.File.getParent/$r6, <java.io.File: java.lang.String getParent()>
  java.io.File.getParentFile/$r2, <java.io.File: java.io.File getParentFile()>
  java.io.File.getPath/$r1, <java.io.File: java.lang.String getPath()>
  java.io.File.getAbsolutePath/$r2, <java.io.File: java.lang.String getAbsolutePath()>
  java.io.File.getAbsoluteFile/$r1, <java.io.File: java.io.File getAbsoluteFile()>
  java.io.File.getCanonicalPath/$r4, <java.io.File: java.lang.String getCanonicalPath()>
  java.io.File.getCanonicalFile/$r1, <java.io.File: java.io.File getCanonicalFile()>
  java.io.File.toURL/$r8, <java.io.File: java.net.URL toURL()>
  <java.io.File: java.lang.String[] list()>/$r4, <java.io.File: java.lang.String[] list()>
  <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/r2, <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>
  <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>/$r9, <java.io.File: java.lang.String[] list(java.io.FilenameFilter)>
  <java.io.File: java.io.File[] listFiles()>/r2, <java.io.File: java.io.File[] listFiles()>
  <java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>/$r11, <java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>
  <java.io.File: java.io.File[] listFiles(java.io.FileFilter)>/$r11, <java.io.File: java.io.File[] listFiles(java.io.FileFilter)>
  java.io.File.toString/$r1, <java.io.File: java.lang.String toString()>
  java.security.AccessControlContext.getDomainCombiner/$r3, <java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()>
  java.security.AccessControlContext.combineWithPrivilegedContext/r0, <java.security.AccessControlContext: java.security.AccessControlContext combineWithPrivilegedContext()>
  java.security.AccessControlContext.combineWithPrivilegedContext/r1, <java.security.AccessControlContext: java.security.AccessControlContext combineWithPrivilegedContext()>
  java.security.AccessControlContext.combineWithPrivilegedContext/$r8, <java.security.AccessControlContext: java.security.AccessControlContext combineWithPrivilegedContext()>
  java.security.AccessControlContext.combineWithPrivilegedContext/$r32, <java.security.AccessControlContext: java.security.AccessControlContext combineWithPrivilegedContext()>
  java.security.AccessControlContext.optimize/r0, <java.security.AccessControlContext: java.security.AccessControlContext optimize()>
  java.security.AccessControlContext.optimize/r1, <java.security.AccessControlContext: java.security.AccessControlContext optimize()>
  java.security.AccessControlContext.optimize/$r5, <java.security.AccessControlContext: java.security.AccessControlContext optimize()>
  java.security.AccessControlContext.optimize/$r10, <java.security.AccessControlContext: java.security.AccessControlContext optimize()>
  java.security.AccessControlContext.optimize/$r34, <java.security.AccessControlContext: java.security.AccessControlContext optimize()>
  java.security.AccessControlContext.goCombiner/$r13, <java.security.AccessControlContext: java.security.AccessControlContext goCombiner(java.security.ProtectionDomain[],java.security.AccessControlContext,boolean)>
  java.security.PrivilegedActionException.getException/$r1, <java.security.PrivilegedActionException: java.lang.Exception getException()>
  java.security.PrivilegedActionException.toString/$r10, <java.security.PrivilegedActionException: java.lang.String toString()>
  java.security.AccessControlException.getPermission/$r1, <java.security.AccessControlException: java.security.Permission getPermission()>
  java.util.Stack.push/r1, <java.util.Stack: java.lang.Object push(java.lang.Object)>
  java.util.Stack.pop/r1, <java.util.Stack: java.lang.Object pop()>
  java.lang.ClassLoader$4.run/$r1, <java.lang.ClassLoader$4: java.lang.Object run()>
  java.lang.ClassLoader$3.run/$r4, <java.lang.ClassLoader$3: java.lang.Object run()>
  java.lang.ClassLoader$2.nextElement/$r4, <java.lang.ClassLoader$2: java.lang.Object nextElement()>
  java.util.HashSet.iterator/$r3, <java.util.HashSet: java.util.Iterator iterator()>
  java.security.AllPermissionCollection.elements/$r1, <java.security.AllPermissionCollection: java.util.Enumeration elements()>
  java.net.URLStreamHandler.toExternalForm/$r18, <java.net.URLStreamHandler: java.lang.String toExternalForm(java.net.URL)>
  java.net.URLConnection.getURL/$r1, <java.net.URLConnection: java.net.URL getURL()>
  java.net.URLConnection.getContentType/$r1, <java.net.URLConnection: java.lang.String getContentType()>
  java.net.URLConnection.getContentEncoding/$r1, <java.net.URLConnection: java.lang.String getContentEncoding()>
  <java.net.URLConnection: java.lang.Object getContent()>/$r3, <java.net.URLConnection: java.lang.Object getContent()>
  <java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>/$r4, <java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>
  java.net.URLConnection.getPermission/$r1, <java.net.URLConnection: java.security.Permission getPermission()>
  java.net.URLConnection.toString/$r8, <java.net.URLConnection: java.lang.String toString()>
  java.net.URLConnection.stripOffParameters/r1, <java.net.URLConnection: java.lang.String stripOffParameters(java.lang.String)>
  java.net.URLConnection.stripOffParameters/$r2, <java.net.URLConnection: java.lang.String stripOffParameters(java.lang.String)>
  java.net.URLConnection.typeToPackageName/$r4, <java.net.URLConnection: java.lang.String typeToPackageName(java.lang.String)>
  java.net.URLConnection.getContentHandlerPkgPrefixes/$r10, <java.net.URLConnection: java.lang.String getContentHandlerPkgPrefixes()>
  java.lang.ref.Reference.get/$r1, <java.lang.ref.Reference: java.lang.Object get()>
  <java.lang.FDBigInt: java.lang.FDBigInt mult(int)>/$r4, <java.lang.FDBigInt: java.lang.FDBigInt mult(int)>
  <java.lang.FDBigInt: java.lang.FDBigInt mult(int)>/$r5, <java.lang.FDBigInt: java.lang.FDBigInt mult(int)>
  <java.lang.FDBigInt: java.lang.FDBigInt mult(java.lang.FDBigInt)>/$r5, <java.lang.FDBigInt: java.lang.FDBigInt mult(java.lang.FDBigInt)>
  java.lang.FDBigInt.add/$r6, <java.lang.FDBigInt: java.lang.FDBigInt add(java.lang.FDBigInt)>
  java.lang.FDBigInt.add/$r7, <java.lang.FDBigInt: java.lang.FDBigInt add(java.lang.FDBigInt)>
  java.lang.FDBigInt.toString/$r23, <java.lang.FDBigInt: java.lang.String toString()>
  java.util.PropertyPermissionCollection.elements/$r2, <java.util.PropertyPermissionCollection: java.util.Enumeration elements()>
  <java.io.BufferedReader: java.lang.String readLine()>/$r1, <java.io.BufferedReader: java.lang.String readLine()>
  java.util.Date.toLocaleString/$r2, <java.util.Date: java.lang.String toLocaleString()>
  java.util.Date.toGMTString/$r9, <java.util.Date: java.lang.String toGMTString()>
  java.io.ObjectOutputStream$Stack.push/r1, <java.io.ObjectOutputStream$Stack: java.lang.Object push(java.lang.Object)>
  java.io.ObjectOutputStream$Stack.pop/r1, <java.io.ObjectOutputStream$Stack: java.lang.Object pop()>
  java.io.ObjectOutputStream$ReplaceTable.lookup/$r4, <java.io.ObjectOutputStream$ReplaceTable: java.lang.Object lookup(java.lang.Object)>
  java.text.FieldPosition.toString/$r12, <java.text.FieldPosition: java.lang.String toString()>
  java.text.ParsePosition.toString/$r10, <java.text.ParsePosition: java.lang.String toString()>
  java.text.NumberFormat.parseObject/$r3, <java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
  <java.text.NumberFormat: java.lang.String format(double)>/$r4, <java.text.NumberFormat: java.lang.String format(double)>
  <java.text.NumberFormat: java.lang.String format(long)>/$r4, <java.text.NumberFormat: java.lang.String format(long)>
  java.text.NumberFormat.clone/r1, <java.text.NumberFormat: java.lang.Object clone()>
  java.text.SimpleDateFormat.get2DigitYearStart/$r1, <java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()>
  java.text.SimpleDateFormat.format/r2, <java.text.SimpleDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>
  java.text.SimpleDateFormat.zeroPaddingNumber/$r4, <java.text.SimpleDateFormat: java.lang.String zeroPaddingNumber(long,int,int)>
  java.text.SimpleDateFormat.toPattern/$r1, <java.text.SimpleDateFormat: java.lang.String toPattern()>
  java.text.SimpleDateFormat.toLocalizedPattern/$r5, <java.text.SimpleDateFormat: java.lang.String toLocalizedPattern()>
  java.text.SimpleDateFormat.getDateFormatSymbols/$r3, <java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()>
  java.text.SimpleDateFormat.clone/r1, <java.text.SimpleDateFormat: java.lang.Object clone()>
  java.text.ChoiceFormat.toPattern/$r31, <java.text.ChoiceFormat: java.lang.String toPattern()>
  java.text.ChoiceFormat.getLimits/$r1, <java.text.ChoiceFormat: double[] getLimits()>
  java.text.ChoiceFormat.getFormats/$r1, <java.text.ChoiceFormat: java.lang.Object[] getFormats()>
  <java.text.ChoiceFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>/$r3, <java.text.ChoiceFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>
  <java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>/$r7, <java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>
  java.text.ChoiceFormat.parse/$r7, <java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
  java.text.ChoiceFormat.clone/r1, <java.text.ChoiceFormat: java.lang.Object clone()>
  <java.text.DateFormat: java.lang.String format(java.util.Date)>/$r5, <java.text.DateFormat: java.lang.String format(java.util.Date)>
  java.text.DateFormat.parseObject/$r3, <java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>
  java.text.DateFormat.getCalendar/$r1, <java.text.DateFormat: java.util.Calendar getCalendar()>
  java.text.DateFormat.getNumberFormat/$r1, <java.text.DateFormat: java.text.NumberFormat getNumberFormat()>
  java.text.DateFormat.getTimeZone/$r2, <java.text.DateFormat: java.util.TimeZone getTimeZone()>
  java.text.DateFormat.clone/r1, <java.text.DateFormat: java.lang.Object clone()>
  java.text.DecimalFormat.subformat/r1, <java.text.DecimalFormat: java.lang.StringBuffer subformat(java.lang.StringBuffer,java.text.FieldPosition,boolean,boolean)>
  java.text.DecimalFormat.parse/$r15, <java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
  java.text.DecimalFormat.parse/r16, <java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>
  java.text.DecimalFormat.getPositivePrefix/$r1, <java.text.DecimalFormat: java.lang.String getPositivePrefix()>
  java.text.DecimalFormat.getNegativePrefix/$r1, <java.text.DecimalFormat: java.lang.String getNegativePrefix()>
  java.text.DecimalFormat.getPositiveSuffix/$r1, <java.text.DecimalFormat: java.lang.String getPositiveSuffix()>
  java.text.DecimalFormat.getNegativeSuffix/$r1, <java.text.DecimalFormat: java.lang.String getNegativeSuffix()>
  <java.text.DecimalFormat: java.lang.String toPattern()>/$r1, <java.text.DecimalFormat: java.lang.String toPattern()>
  java.text.DecimalFormat.toLocalizedPattern/$r1, <java.text.DecimalFormat: java.lang.String toLocalizedPattern()>
  java.text.DecimalFormat.expandAffix/$r13, <java.text.DecimalFormat: java.lang.String expandAffix(java.lang.String,java.lang.StringBuffer)>
  <java.text.DecimalFormat: java.lang.String toPattern(boolean)>/$r60, <java.text.DecimalFormat: java.lang.String toPattern(boolean)>
  java.util.ResourceBundle$1.run/$r4, <java.util.ResourceBundle$1: java.lang.Object run()>
  java.util.ResourceBundle$1.run/$r6, <java.util.ResourceBundle$1: java.lang.Object run()>
  java.util.PropertyResourceBundle.handleGetObject/r2, <java.util.PropertyResourceBundle: java.lang.Object handleGetObject(java.lang.String)>
  java.util.PropertyResourceBundle.getKeys/r7, <java.util.PropertyResourceBundle: java.util.Enumeration getKeys()>
  java.util.zip.ZipEntry.getName/$r1, <java.util.zip.ZipEntry: java.lang.String getName()>
  java.util.zip.ZipEntry.getExtra/$r1, <java.util.zip.ZipEntry: byte[] getExtra()>
  java.util.zip.ZipEntry.getComment/$r1, <java.util.zip.ZipEntry: java.lang.String getComment()>
  java.util.zip.ZipEntry.toString/$r1, <java.util.zip.ZipEntry: java.lang.String toString()>
  java.text.resources.LocaleData$1.run/$r1, <java.text.resources.LocaleData$1: java.lang.Object run()>
  java.util.Hashtable$Entry.clone/$r1, <java.util.Hashtable$Entry: java.lang.Object clone()>
  java.util.Hashtable$Entry.getKey/$r1, <java.util.Hashtable$Entry: java.lang.Object getKey()>
  java.util.Hashtable$Entry.getValue/$r1, <java.util.Hashtable$Entry: java.lang.Object getValue()>
  java.util.Hashtable$Entry.toString/$r9, <java.util.Hashtable$Entry: java.lang.String toString()>
  java.util.Hashtable$KeySet.iterator/$r2, <java.util.Hashtable$KeySet: java.util.Iterator iterator()>
  java.util.Hashtable$EntrySet.iterator/$r2, <java.util.Hashtable$EntrySet: java.util.Iterator iterator()>
  java.util.Hashtable$ValueCollection.iterator/$r2, <java.util.Hashtable$ValueCollection: java.util.Iterator iterator()>
  java.util.AbstractList.iterator/$r1, <java.util.AbstractList: java.util.Iterator iterator()>
  <java.util.AbstractList: java.util.ListIterator listIterator()>/$r1, <java.util.AbstractList: java.util.ListIterator listIterator()>
  java.util.AbstractList.subList/$r1, <java.util.AbstractList: java.util.List subList(int,int)>
  java.util.WeakHashMap.get/$r4, <java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
  java.util.WeakHashMap.put/$r6, <java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.WeakHashMap.remove/$r4, <java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
  java.util.WeakHashMap.entrySet/$r3, <java.util.WeakHashMap: java.util.Set entrySet()>
  java.security.BasicPermissionCollection.elements/$r2, <java.security.BasicPermissionCollection: java.util.Enumeration elements()>
  java.net.SocketPermissionCollection.elements/$r2, <java.net.SocketPermissionCollection: java.util.Enumeration elements()>
  java.security.Provider.getName/$r1, <java.security.Provider: java.lang.String getName()>
  java.security.Provider.getInfo/$r1, <java.security.Provider: java.lang.String getInfo()>
  java.security.Provider.toString/$r6, <java.security.Provider: java.lang.String toString()>
  java.security.Provider.keySet/$r2, <java.security.Provider: java.util.Set keySet()>
  java.security.Provider.values/$r2, <java.security.Provider: java.util.Collection values()>
  java.security.Provider.put/$r8, <java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.security.Provider.remove/$r7, <java.security.Provider: java.lang.Object remove(java.lang.Object)>
  java.security.cert.CRL.getType/$r1, <java.security.cert.CRL: java.lang.String getType()>
  java.util.Arrays$ArrayList.toArray/$r3, <java.util.Arrays$ArrayList: java.lang.Object[] toArray()>
  java.util.Arrays$ArrayList.get/$r2, <java.util.Arrays$ArrayList: java.lang.Object get(int)>
  java.util.Arrays$ArrayList.set/r2, <java.util.Arrays$ArrayList: java.lang.Object set(int,java.lang.Object)>
  java.lang.ref.ReferenceQueue.reallyPoll/r1, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference reallyPoll()>
  <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>/$r1, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
  <java.security.MessageDigest$Delegate: byte[] engineDigest()>/$r2, <java.security.MessageDigest$Delegate: byte[] engineDigest()>
  <java.util.AbstractCollection: java.lang.Object[] toArray()>/r1, <java.util.AbstractCollection: java.lang.Object[] toArray()>
  <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.AbstractCollection.toString/$r10, <java.util.AbstractCollection: java.lang.String toString()>
  java.util.AbstractMap.get/$r7, <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
  java.util.AbstractMap.get/$r11, <java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
  java.util.AbstractMap.remove/r11, <java.util.AbstractMap: java.lang.Object remove(java.lang.Object)>
  java.util.AbstractMap.keySet/$r3, <java.util.AbstractMap: java.util.Set keySet()>
  java.util.AbstractMap.values/$r3, <java.util.AbstractMap: java.util.Collection values()>
  java.util.AbstractMap.toString/$r18, <java.util.AbstractMap: java.lang.String toString()>
  java.util.HashMap$Entry.clone/$r1, <java.util.HashMap$Entry: java.lang.Object clone()>
  java.util.HashMap$Entry.getKey/$r1, <java.util.HashMap$Entry: java.lang.Object getKey()>
  java.util.HashMap$Entry.getValue/$r1, <java.util.HashMap$Entry: java.lang.Object getValue()>
  java.util.HashMap$Entry.setValue/r2, <java.util.HashMap$Entry: java.lang.Object setValue(java.lang.Object)>
  java.util.HashMap$Entry.toString/$r7, <java.util.HashMap$Entry: java.lang.String toString()>
  java.util.HashMap$1.iterator/$r2, <java.util.HashMap$1: java.util.Iterator iterator()>
  java.util.HashMap$2.iterator/$r2, <java.util.HashMap$2: java.util.Iterator iterator()>
  java.util.HashMap$3.iterator/$r2, <java.util.HashMap$3: java.util.Iterator iterator()>
  java.util.jar.JarEntry.getAttributes/$r1, <java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()>
  java.util.jar.JarEntry.getCertificates/$r1, <java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>
  java.util.jar.JarVerifier.getCerts/$r4, <java.util.jar.JarVerifier: java.security.cert.Certificate[] getCerts(java.lang.String)>
  java.net.InetAddressImpl.getLocalHostName/@native-return, <java.net.InetAddressImpl: java.lang.String getLocalHostName()>
  java.net.InetAddressImpl.lookupAllHostAddr/@native-return, <java.net.InetAddressImpl: byte[][] lookupAllHostAddr(java.lang.String)>
  java.net.InetAddressImpl.getHostByAddr/@native-return, <java.net.InetAddressImpl: java.lang.String getHostByAddr(int)>
  java.io.FilePermissionCollection.elements/$r2, <java.io.FilePermissionCollection: java.util.Enumeration elements()>
  java.net.JarURLConnection.getJarFileURL/$r1, <java.net.JarURLConnection: java.net.URL getJarFileURL()>
  java.net.JarURLConnection.getEntryName/$r1, <java.net.JarURLConnection: java.lang.String getEntryName()>
  java.net.JarURLConnection.getManifest/$r2, <java.net.JarURLConnection: java.util.jar.Manifest getManifest()>
  java.net.JarURLConnection.getJarEntry/$r3, <java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()>
  java.net.JarURLConnection.getAttributes/$r2, <java.net.JarURLConnection: java.util.jar.Attributes getAttributes()>
  java.net.JarURLConnection.getMainAttributes/$r2, <java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()>
  java.net.JarURLConnection.getCertificates/$r2, <java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()>
  java.security.AllPermissionCollection$1.nextElement/$r1, <java.security.AllPermissionCollection$1: java.lang.Object nextElement()>
  <java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])>/r3, <java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])>
  java.net.UnknownContentHandler.getContent/$r2, <java.net.UnknownContentHandler: java.lang.Object getContent(java.net.URLConnection)>
  java.net.URLConnection$1.getContentTypeFor/$r3, <java.net.URLConnection$1: java.lang.String getContentTypeFor(java.lang.String)>
  java.util.Calendar.getTime/$r1, <java.util.Calendar: java.util.Date getTime()>
  java.util.Calendar.getTimeZone/$r1, <java.util.Calendar: java.util.TimeZone getTimeZone()>
  java.util.Calendar.toString/$r31, <java.util.Calendar: java.lang.String toString()>
  java.util.TimeZone.getID/$r1, <java.util.TimeZone: java.lang.String getID()>
  <java.util.TimeZone: java.lang.String getDisplayName()>/$r2, <java.util.TimeZone: java.lang.String getDisplayName()>
  <java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)>/$r2, <java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)>
  <java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>/$r2, <java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>
  java.util.GregorianCalendar.getGregorianChange/$r1, <java.util.GregorianCalendar: java.util.Date getGregorianChange()>
  java.text.DateFormatSymbols.getEras/$r2, <java.text.DateFormatSymbols: java.lang.String[] getEras()>
  java.text.DateFormatSymbols.getMonths/$r2, <java.text.DateFormatSymbols: java.lang.String[] getMonths()>
  java.text.DateFormatSymbols.getShortMonths/$r2, <java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
  java.text.DateFormatSymbols.getWeekdays/$r2, <java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
  java.text.DateFormatSymbols.getShortWeekdays/$r2, <java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
  java.text.DateFormatSymbols.getAmPmStrings/$r2, <java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
  java.text.DateFormatSymbols.getZoneStrings/r1, <java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>
  java.text.DateFormatSymbols.getLocalPatternChars/$r1, <java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()>
  java.text.DateFormatSymbols.getLocaleElements/$r2, <java.text.DateFormatSymbols: java.util.ResourceBundle getLocaleElements(java.util.Locale)>
  java.text.DateFormatSymbols.getZoneData/$r2, <java.text.DateFormatSymbols: java.util.ResourceBundle getZoneData(java.util.Locale)>
  java.text.DateFormatSymbols.cacheLookup/r2, <java.text.DateFormatSymbols: java.util.ResourceBundle[] cacheLookup(java.util.Locale)>
  java.text.DateFormatSymbols.loadZoneStrings/r5, <java.text.DateFormatSymbols: java.lang.String[][] loadZoneStrings(java.util.Locale,java.util.ResourceBundle)>
  java.text.DateFormatSymbols.duplicate/r2, <java.text.DateFormatSymbols: java.lang.String[] duplicate(java.lang.String[])>
  java.util.SimpleTimeZone.clone/$r1, <java.util.SimpleTimeZone: java.lang.Object clone()>
  java.util.SimpleTimeZone.toString/$r41, <java.util.SimpleTimeZone: java.lang.String toString()>
  java.util.SimpleTimeZone.packRules/r1, <java.util.SimpleTimeZone: byte[] packRules()>
  java.util.SimpleTimeZone.packTimes/r1, <java.util.SimpleTimeZone: int[] packTimes()>
  <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>/r0, <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>/r1, <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>/$r3, <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>/$r9, <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>/$r16, <java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>/r0, <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>/$r3, <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>/$r4, <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>/$r10, <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>/$r17, <java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>
  java.math.BigInteger.multiply/$r3, <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
  java.math.BigInteger.multiply/$r9, <java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
  java.math.BigInteger.multiplyToLen/r3, <java.math.BigInteger: int[] multiplyToLen(int[],int,int[],int,int[])>
  java.math.BigInteger.square/$r2, <java.math.BigInteger: java.math.BigInteger square()>
  java.math.BigInteger.square/$r5, <java.math.BigInteger: java.math.BigInteger square()>
  java.math.BigInteger.divide/$r12, <java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>
  java.math.BigInteger.divideAndRemainder/r2, <java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>
  java.math.BigInteger.remainder/$r12, <java.math.BigInteger: java.math.BigInteger remainder(java.math.BigInteger)>
  java.math.BigInteger.gcd/$r5, <java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>
  java.math.BigInteger.gcd/$r6, <java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>
  java.math.BigInteger.gcd/$r9, <java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>
  java.math.BigInteger.abs/$r1, <java.math.BigInteger: java.math.BigInteger abs()>
  java.math.BigInteger.negate/$r1, <java.math.BigInteger: java.math.BigInteger negate()>
  java.math.BigInteger.oddModPow/r0, <java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.oddModPow/$r17, <java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.oddModPow/$r48, <java.math.BigInteger: java.math.BigInteger oddModPow(java.math.BigInteger,java.math.BigInteger)>
  java.math.BigInteger.modPow2/r2, <java.math.BigInteger: java.math.BigInteger modPow2(java.math.BigInteger,int)>
  java.math.BigInteger.mod2/r0, <java.math.BigInteger: java.math.BigInteger mod2(int)>
  java.math.BigInteger.mod2/$r5, <java.math.BigInteger: java.math.BigInteger mod2(int)>
  java.math.BigInteger.shiftLeft/r0, <java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
  java.math.BigInteger.shiftLeft/$r1, <java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
  java.math.BigInteger.shiftLeft/$r2, <java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
  java.math.BigInteger.shiftLeft/$r10, <java.math.BigInteger: java.math.BigInteger shiftLeft(int)>
  java.math.BigInteger.shiftRight/r0, <java.math.BigInteger: java.math.BigInteger shiftRight(int)>
  java.math.BigInteger.shiftRight/$r1, <java.math.BigInteger: java.math.BigInteger shiftRight(int)>
  java.math.BigInteger.shiftRight/$r3, <java.math.BigInteger: java.math.BigInteger shiftRight(int)>
  java.math.BigInteger.shiftRight/$r12, <java.math.BigInteger: java.math.BigInteger shiftRight(int)>
  java.math.BigInteger.javaIncrement/r1, <java.math.BigInteger: int[] javaIncrement(int[])>
  java.math.BigInteger.and/$r3, <java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>
  java.math.BigInteger.or/$r3, <java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>
  java.math.BigInteger.xor/$r3, <java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>
  java.math.BigInteger.not/$r2, <java.math.BigInteger: java.math.BigInteger not()>
  java.math.BigInteger.andNot/$r3, <java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>
  java.math.BigInteger.min/$r2, <java.math.BigInteger: java.math.BigInteger min(java.math.BigInteger)>
  java.math.BigInteger.max/$r2, <java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>
  <java.math.BigInteger: java.lang.String toString(int)>/$r34, <java.math.BigInteger: java.lang.String toString(int)>
  <java.math.BigInteger: java.lang.String toString(int)>/$stringconstant0, <java.math.BigInteger: java.lang.String toString(int)>
  <java.math.BigInteger: java.lang.String toString()>/$r1, <java.math.BigInteger: java.lang.String toString()>
  java.math.BigInteger.toByteArray/r1, <java.math.BigInteger: byte[] toByteArray()>
  java.math.BigInteger.writeReplace/r0, <java.math.BigInteger: java.lang.Object writeReplace()>
  java.math.BigInteger.magSerializedForm/r1, <java.math.BigInteger: byte[] magSerializedForm()>
  java.text.DecimalFormatSymbols.getInfinity/$r1, <java.text.DecimalFormatSymbols: java.lang.String getInfinity()>
  java.text.DecimalFormatSymbols.getNaN/$r1, <java.text.DecimalFormatSymbols: java.lang.String getNaN()>
  java.text.DecimalFormatSymbols.getCurrencySymbol/$r1, <java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()>
  java.text.DecimalFormatSymbols.getInternationalCurrencySymbol/$r1, <java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()>
  java.text.DigitList.toString/$r7, <java.text.DigitList: java.lang.String toString()>
  java.text.DigitList.toString/$stringconstant0, <java.text.DigitList: java.lang.String toString()>
  java.util.PropertyResourceBundle$1.nextElement/r1, <java.util.PropertyResourceBundle$1: java.lang.Object nextElement()>
  java.util.Collections$SingletonMap.get/$r3, <java.util.Collections$SingletonMap: java.lang.Object get(java.lang.Object)>
  java.util.Collections$SingletonMap.keySet/$r4, <java.util.Collections$SingletonMap: java.util.Set keySet()>
  java.util.Collections$SingletonMap.entrySet/$r6, <java.util.Collections$SingletonMap: java.util.Set entrySet()>
  java.util.Collections$SingletonMap.values/$r4, <java.util.Collections$SingletonMap: java.util.Collection values()>
  <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>/$r2, <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray()>
  <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>/$r3, <java.util.Collections$UnmodifiableCollection: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.Collections$UnmodifiableCollection.toString/$r2, <java.util.Collections$UnmodifiableCollection: java.lang.String toString()>
  java.util.Collections$UnmodifiableCollection.iterator/$r1, <java.util.Collections$UnmodifiableCollection: java.util.Iterator iterator()>
  java.util.Collections$UnmodifiableMap.get/$r3, <java.util.Collections$UnmodifiableMap: java.lang.Object get(java.lang.Object)>
  java.util.Collections$UnmodifiableMap.keySet/$r5, <java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
  java.util.Collections$UnmodifiableMap.entrySet/$r5, <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
  java.util.Collections$UnmodifiableMap.values/$r5, <java.util.Collections$UnmodifiableMap: java.util.Collection values()>
  java.util.Collections$UnmodifiableMap.toString/$r2, <java.util.Collections$UnmodifiableMap: java.lang.String toString()>
  java.util.Collections$EmptyMap.keySet/$r1, <java.util.Collections$EmptyMap: java.util.Set keySet()>
  java.util.Collections$EmptyMap.values/$r1, <java.util.Collections$EmptyMap: java.util.Collection values()>
  java.util.Collections$EmptyMap.entrySet/$r1, <java.util.Collections$EmptyMap: java.util.Set entrySet()>
  java.util.Collections$UnmodifiableSortedSet.comparator/$r2, <java.util.Collections$UnmodifiableSortedSet: java.util.Comparator comparator()>
  java.util.Collections$UnmodifiableSortedSet.subSet/$r3, <java.util.Collections$UnmodifiableSortedSet: java.util.SortedSet subSet(java.lang.Object,java.lang.Object)>
  java.util.Collections$UnmodifiableSortedSet.headSet/$r2, <java.util.Collections$UnmodifiableSortedSet: java.util.SortedSet headSet(java.lang.Object)>
  java.util.Collections$UnmodifiableSortedSet.tailSet/$r2, <java.util.Collections$UnmodifiableSortedSet: java.util.SortedSet tailSet(java.lang.Object)>
  java.util.Collections$UnmodifiableSortedSet.first/$r2, <java.util.Collections$UnmodifiableSortedSet: java.lang.Object first()>
  java.util.Collections$UnmodifiableSortedSet.last/$r2, <java.util.Collections$UnmodifiableSortedSet: java.lang.Object last()>
  java.util.Collections$SynchronizedCollection.iterator/$r2, <java.util.Collections$SynchronizedCollection: java.util.Iterator iterator()>
  java.util.Collections$EmptySet.iterator/$r1, <java.util.Collections$EmptySet: java.util.Iterator iterator()>
  <java.util.Collections$SynchronizedList: java.util.ListIterator listIterator()>/$r2, <java.util.Collections$SynchronizedList: java.util.ListIterator listIterator()>
  <java.util.Collections$SynchronizedList: java.util.ListIterator listIterator(int)>/$r2, <java.util.Collections$SynchronizedList: java.util.ListIterator listIterator(int)>
  java.util.Collections$SingletonSet.iterator/$r1, <java.util.Collections$SingletonSet: java.util.Iterator iterator()>
  java.util.Collections$6.nextElement/$r2, <java.util.Collections$6: java.lang.Object nextElement()>
  java.util.Collections$1.next/$r2, <java.util.Collections$1: java.lang.Object next()>
  java.util.Collections$UnmodifiableSortedMap.comparator/$r2, <java.util.Collections$UnmodifiableSortedMap: java.util.Comparator comparator()>
  java.util.Collections$UnmodifiableSortedMap.subMap/$r3, <java.util.Collections$UnmodifiableSortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>
  java.util.Collections$UnmodifiableSortedMap.headMap/$r2, <java.util.Collections$UnmodifiableSortedMap: java.util.SortedMap headMap(java.lang.Object)>
  java.util.Collections$UnmodifiableSortedMap.tailMap/$r2, <java.util.Collections$UnmodifiableSortedMap: java.util.SortedMap tailMap(java.lang.Object)>
  java.util.Collections$UnmodifiableSortedMap.firstKey/$r2, <java.util.Collections$UnmodifiableSortedMap: java.lang.Object firstKey()>
  java.util.Collections$UnmodifiableSortedMap.lastKey/$r2, <java.util.Collections$UnmodifiableSortedMap: java.lang.Object lastKey()>
  java.util.Collections$UnmodifiableList.get/$r2, <java.util.Collections$UnmodifiableList: java.lang.Object get(int)>
  <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator()>/$r1, <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator()>
  <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>/$r1, <java.util.Collections$UnmodifiableList: java.util.ListIterator listIterator(int)>
  java.util.Collections$UnmodifiableList.subList/$r1, <java.util.Collections$UnmodifiableList: java.util.List subList(int,int)>
  java.util.AbstractSequentialList.iterator/$r1, <java.util.AbstractSequentialList: java.util.Iterator iterator()>
  java.util.SubList.set/$r3, <java.util.SubList: java.lang.Object set(int,java.lang.Object)>
  java.util.SubList.get/$r2, <java.util.SubList: java.lang.Object get(int)>
  java.util.SubList.remove/r1, <java.util.SubList: java.lang.Object remove(int)>
  java.util.SubList.iterator/$r1, <java.util.SubList: java.util.Iterator iterator()>
  java.util.SubList.subList/$r1, <java.util.SubList: java.util.List subList(int,int)>
  java.util.WeakHashMap$EntrySet.iterator/$r1, <java.util.WeakHashMap$EntrySet: java.util.Iterator iterator()>
  java.util.WeakHashMap$Entry.getKey/$r1, <java.util.WeakHashMap$Entry: java.lang.Object getKey()>
  java.util.WeakHashMap$Entry.getValue/$r2, <java.util.WeakHashMap$Entry: java.lang.Object getValue()>
  java.util.WeakHashMap$Entry.setValue/$r3, <java.util.WeakHashMap$Entry: java.lang.Object setValue(java.lang.Object)>
  java.security.Security$2.run/$r3, <java.security.Security$2: java.lang.Object run()>
  java.util.AbstractMap$3.iterator/$r1, <java.util.AbstractMap$3: java.util.Iterator iterator()>
  java.util.AbstractMap$1.iterator/$r1, <java.util.AbstractMap$1: java.util.Iterator iterator()>
  java.security.Policy$1.run/$r1, <java.security.Policy$1: java.lang.Object run()>
  java.net.URLClassLoader.getURLs/$r2, <java.net.URLClassLoader: java.net.URL[] getURLs()>
  java.net.URLClassLoader.definePackage/$r31, <java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  java.net.URLClassLoader.findResource/$r8, <java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>
  java.net.URLClassLoader.findResources/$r4, <java.net.URLClassLoader: java.util.Enumeration findResources(java.lang.String)>
  java.net.HttpURLConnection.getRequestMethod/$r1, <java.net.HttpURLConnection: java.lang.String getRequestMethod()>
  java.net.HttpURLConnection.getResponseMessage/$r1, <java.net.HttpURLConnection: java.lang.String getResponseMessage()>
  java.net.HttpURLConnection.getPermission/r2, <java.net.HttpURLConnection: java.security.Permission getPermission()>
  java.util.jar.JarFile.getManifest/$r19, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  java.util.jar.JarFile.getMetaInfEntryNames/@native-return, <java.util.jar.JarFile: java.lang.String[] getMetaInfEntryNames()>
  java.util.jar.JarFile.getJarEntry/$r3, <java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>
  java.util.jar.JarFile.getEntry/$r3, <java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
  java.util.jar.JarFile.entries/$r2, <java.util.jar.JarFile: java.util.Enumeration entries()>
  java.util.jar.JarFile.getBytes/r2, <java.util.jar.JarFile: byte[] getBytes(java.util.zip.ZipEntry)>
  java.util.jar.JarFile.getInputStream/$r4, <java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
  java.util.jar.JarFile.getInputStream/$r6, <java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
  java.util.jar.JarFile.getInputStream/$r7, <java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
  java.util.LinkedList.removeFirst/r1, <java.util.LinkedList: java.lang.Object removeFirst()>
  java.util.LinkedList.removeLast/r1, <java.util.LinkedList: java.lang.Object removeLast()>
  java.util.LinkedList.get/$r2, <java.util.LinkedList: java.lang.Object get(int)>
  java.util.LinkedList.set/r3, <java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
  <java.util.LinkedList: java.lang.Object remove(int)>/$r2, <java.util.LinkedList: java.lang.Object remove(int)>
  java.util.LinkedList.listIterator/$r1, <java.util.LinkedList: java.util.ListIterator listIterator(int)>
  java.util.LinkedList.addBefore/r4, <java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>
  <java.util.LinkedList: java.lang.Object[] toArray()>/r1, <java.util.LinkedList: java.lang.Object[] toArray()>
  <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
  java.math.MutableBigInteger.toIntArray/r1, <java.math.MutableBigInteger: int[] toIntArray()>
  java.math.MutableBigInteger.toString/$r3, <java.math.MutableBigInteger: java.lang.String toString()>
  java.math.MutableBigInteger.hybridGCD/r2, <java.math.MutableBigInteger: java.math.MutableBigInteger hybridGCD(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.hybridGCD/$r8, <java.math.MutableBigInteger: java.math.MutableBigInteger hybridGCD(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.binaryGCD/r2, <java.math.MutableBigInteger: java.math.MutableBigInteger binaryGCD(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.binaryGCD/r4, <java.math.MutableBigInteger: java.math.MutableBigInteger binaryGCD(java.math.MutableBigInteger)>
  java.math.BitSieve.retrieve/r2, <java.math.BitSieve: java.math.BigInteger retrieve(java.math.BigInteger,int)>
  java.util.Collections$SingletonMap$ImmutableEntry.getKey/$r1, <java.util.Collections$SingletonMap$ImmutableEntry: java.lang.Object getKey()>
  java.util.Collections$SingletonMap$ImmutableEntry.getValue/$r1, <java.util.Collections$SingletonMap$ImmutableEntry: java.lang.Object getValue()>
  java.util.Collections$SingletonMap$ImmutableEntry.toString/$r7, <java.util.Collections$SingletonMap$ImmutableEntry: java.lang.String toString()>
  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator/$r1, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.util.Iterator iterator()>
  <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/r1, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>
  <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/r1, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>
  <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/r2, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>
  java.util.Collections$2.next/$r2, <java.util.Collections$2: java.lang.Object next()>
  java.util.Collections$2.previous/$r2, <java.util.Collections$2: java.lang.Object previous()>
  java.util.AbstractMap$4.next/$r4, <java.util.AbstractMap$4: java.lang.Object next()>
  java.util.AbstractMap$2.next/$r4, <java.util.AbstractMap$2: java.lang.Object next()>
  <java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)>/$r3, <java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)>
  java.security.IdentityScope.toString/$r7, <java.security.IdentityScope: java.lang.String toString()>
  java.security.KeyStore.getProvider/$r1, <java.security.KeyStore: java.security.Provider getProvider()>
  java.security.KeyStore.getType/$r1, <java.security.KeyStore: java.lang.String getType()>
  java.security.Identity.getName/$r1, <java.security.Identity: java.lang.String getName()>
  java.security.Identity.getScope/$r1, <java.security.Identity: java.security.IdentityScope getScope()>
  java.security.Identity.getPublicKey/$r1, <java.security.Identity: java.security.PublicKey getPublicKey()>
  java.security.Identity.getInfo/$r1, <java.security.Identity: java.lang.String getInfo()>
  java.security.Identity.certificates/r1, <java.security.Identity: java.security.Certificate[] certificates()>
  java.security.Identity.certificates/$r3, <java.security.Identity: java.security.Certificate[] certificates()>
  java.security.Identity.fullName/r1, <java.security.Identity: java.lang.String fullName()>
  <java.security.Identity: java.lang.String toString()>/r1, <java.security.Identity: java.lang.String toString()>
  <java.security.Identity: java.lang.String toString(boolean)>/r1, <java.security.Identity: java.lang.String toString(boolean)>
  java.security.Identity.printKeys/r3, <java.security.Identity: java.lang.String printKeys()>
  java.security.Identity.printCertificates/r8, <java.security.Identity: java.lang.String printCertificates()>
  java.security.Identity.printCertificates/$stringconstant0, <java.security.Identity: java.lang.String printCertificates()>
  java.security.SecureClassLoader.defineClass/$r4, <java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>
  java.security.SecureClassLoader.defineClass/$r6, <java.security.SecureClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>
  java.security.SecureClassLoader.getPermissions/r3, <java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>
  java.net.URLClassLoader$6.run/$r1, <java.net.URLClassLoader$6: java.lang.Object run()>
  java.net.URLClassLoader$7.run/$r1, <java.net.URLClassLoader$7: java.lang.Object run()>
  java.net.URLClassLoader$2.run/$r4, <java.net.URLClassLoader$2: java.lang.Object run()>
  <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/$r3, <java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
  java.util.zip.ZipFile.getName/$r1, <java.util.zip.ZipFile: java.lang.String getName()>
  java.util.jar.JarFile$JarFileEntry.getAttributes/$r4, <java.util.jar.JarFile$JarFileEntry: java.util.jar.Attributes getAttributes()>
  java.util.jar.JarFile$JarFileEntry.getCertificates/$r10, <java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>
  java.util.jar.JarFile$1.nextElement/$r4, <java.util.jar.JarFile$1: java.lang.Object nextElement()>
  java.math.SignedMutableBigInteger.toString/$r3, <java.math.SignedMutableBigInteger: java.lang.String toString()>
  java.util.Collections$3.next/$r1, <java.util.Collections$3: java.lang.Object next()>
  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey/$r2, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>
  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue/$r2, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>
  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString/$r2, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.String toString()>
  java.security.Signature.getProvider/$r1, <java.security.Signature: java.security.Provider getProvider()>
  java.security.Signature.getAlgorithm/$r1, <java.security.Signature: java.lang.String getAlgorithm()>
  java.security.Signature.toString/$r7, <java.security.Signature: java.lang.String toString()>
  java.security.Signature.getParameter/$r2, <java.security.Signature: java.lang.Object getParameter(java.lang.String)>
  java.io.StreamTokenizer.toString/$r13, <java.io.StreamTokenizer: java.lang.String toString()>
  java.security.KeyStore$1.run/$r1, <java.security.KeyStore$1: java.lang.Object run()>
  java.security.IdentityScope$1.run/$r1, <java.security.IdentityScope$1: java.lang.Object run()>
  java.util.BitSet.toString/$r8, <java.util.BitSet: java.lang.String toString()>
  java.security.Signer.getPrivateKey/$r1, <java.security.Signer: java.security.PrivateKey getPrivateKey()>
  java.security.Signer.printKeys/r4, <java.security.Signer: java.lang.String printKeys()>
  java.security.Signer.toString/$r5, <java.security.Signer: java.lang.String toString()>
  java.security.KeyPair.getPublic/$r1, <java.security.KeyPair: java.security.PublicKey getPublic()>
  java.security.KeyPair.getPrivate/$r1, <java.security.KeyPair: java.security.PrivateKey getPrivate()>
  java.net.URLClassLoader$4.run/$r5, <java.net.URLClassLoader$4: java.lang.Object run()>
  java.net.FactoryURLClassLoader.loadClass/$r5, <java.net.FactoryURLClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
  java.security.SecureRandom.getSecureRandomSpi/$r1, <java.security.SecureRandom: java.security.SecureRandomSpi getSecureRandomSpi()>
  java.security.SecureRandom.getProvider/$r1, <java.security.SecureRandom: java.security.Provider getProvider()>
  java.security.SecureRandom.generateSeed/$r2, <java.security.SecureRandom: byte[] generateSeed(int)>
  <java.security.Signature$Delegate: byte[] engineSign()>/$r2, <java.security.Signature$Delegate: byte[] engineSign()>
  java.security.Signature$Delegate.engineGetParameter/$r3, <java.security.Signature$Delegate: java.lang.Object engineGetParameter(java.lang.String)>
  java.lang.ExceptionInInitializerError.getException/$r1, <java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>
  java.security.AlgorithmParameters.getAlgorithm/$r1, <java.security.AlgorithmParameters: java.lang.String getAlgorithm()>
  java.security.AlgorithmParameters.getProvider/$r1, <java.security.AlgorithmParameters: java.security.Provider getProvider()>
  java.security.AlgorithmParameters.toString/$r2, <java.security.AlgorithmParameters: java.lang.String toString()>
  java.security.spec.X509EncodedKeySpec.getEncoded/$r1, <java.security.spec.X509EncodedKeySpec: byte[] getEncoded()>
  java.security.spec.X509EncodedKeySpec.getFormat/$stringconstant0, <java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()>
  java.security.KeyFactory.getProvider/$r1, <java.security.KeyFactory: java.security.Provider getProvider()>
  java.security.KeyFactory.getAlgorithm/$r1, <java.security.KeyFactory: java.lang.String getAlgorithm()>
  java.security.KeyFactory.generatePublic/$r3, <java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>
  java.security.KeyFactory.generatePrivate/$r3, <java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>
  java.security.KeyFactory.getKeySpec/$r4, <java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)>
  java.security.KeyFactory.translateKey/$r3, <java.security.KeyFactory: java.security.Key translateKey(java.security.Key)>
  java.security.spec.EncodedKeySpec.getEncoded/$r3, <java.security.spec.EncodedKeySpec: byte[] getEncoded()>
  java.net.Socket.getInetAddress/$r2, <java.net.Socket: java.net.InetAddress getInetAddress()>
  java.net.Socket.toString/$r13, <java.net.Socket: java.lang.String toString()>
  java.net.ServerSocket.getInetAddress/$r2, <java.net.ServerSocket: java.net.InetAddress getInetAddress()>
  java.net.ServerSocket.accept/r2, <java.net.ServerSocket: java.net.Socket accept()>
  java.net.ServerSocket.toString/$r13, <java.net.ServerSocket: java.lang.String toString()>
  java.net.PasswordAuthentication.getUserName/$r1, <java.net.PasswordAuthentication: java.lang.String getUserName()>
  java.net.PasswordAuthentication.getPassword/$r1, <java.net.PasswordAuthentication: char[] getPassword()>
  java.net.SocketImpl.getFileDescriptor/$r1, <java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()>
  java.net.SocketImpl.getInetAddress/$r1, <java.net.SocketImpl: java.net.InetAddress getInetAddress()>
  java.net.SocketImpl.toString/$r10, <java.net.SocketImpl: java.lang.String toString()>
  java.net.PlainSocketImpl.getOption/r1, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.getOption/$r3, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.getOption/$r4, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.getOption/$r7, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.getOption/r8, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.getOption/r14, <java.net.PlainSocketImpl: java.lang.Object getOption(int)>
  java.net.PlainSocketImpl.makeCommandPacket/$r9, <java.net.PlainSocketImpl: byte[] makeCommandPacket(int,java.net.InetAddress,int)>
  java.net.Socket$1.run/$r3, <java.net.Socket$1: java.lang.Object run()>
  java.net.Socket$2.run/$r3, <java.net.Socket$2: java.lang.Object run()>
  java.net.Authenticator.getRequestingSite/$r1, <java.net.Authenticator: java.net.InetAddress getRequestingSite()>
  java.net.Authenticator.getRequestingProtocol/$r1, <java.net.Authenticator: java.lang.String getRequestingProtocol()>
  java.net.Authenticator.getRequestingPrompt/$r1, <java.net.Authenticator: java.lang.String getRequestingPrompt()>
  java.net.Authenticator.getRequestingScheme/$r1, <java.net.Authenticator: java.lang.String getRequestingScheme()>
  java.net.PlainSocketImpl$2.run/$r2, <java.net.PlainSocketImpl$2: java.lang.Object run()>
  java.net.PlainSocketImpl$3.run/$r2, <java.net.PlainSocketImpl$3: java.lang.Object run()>
  java.net.PlainSocketImpl$1.run/$r2, <java.net.PlainSocketImpl$1: java.lang.Object run()>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>/r1, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>/$r7, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>/$stringconstant0, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String,int,int)>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>/r1, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>/$r2, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>/$r3, <java.io.UnixFileSystem: java.lang.String normalize(java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>/r1, <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>/r2, <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>/$r6, <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>/$r10, <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>/$r15, <java.io.UnixFileSystem: java.lang.String resolve(java.lang.String,java.lang.String)>
  java.io.UnixFileSystem.getDefaultParent/$stringconstant0, <java.io.UnixFileSystem: java.lang.String getDefaultParent()>
  <java.io.UnixFileSystem: java.lang.String resolve(java.io.File)>/$r2, <java.io.UnixFileSystem: java.lang.String resolve(java.io.File)>
  <java.io.UnixFileSystem: java.lang.String resolve(java.io.File)>/$r5, <java.io.UnixFileSystem: java.lang.String resolve(java.io.File)>
  java.io.UnixFileSystem.canonicalize/@native-return, <java.io.UnixFileSystem: java.lang.String canonicalize(java.lang.String)>
  java.io.UnixFileSystem.list/@native-return, <java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>
  java.text.CollationKey.getSourceString/$r1, <java.text.CollationKey: java.lang.String getSourceString()>
  java.text.CollationKey.toByteArray/r2, <java.text.CollationKey: byte[] toByteArray()>
  java.text.RuleBasedCollator.getRules/$r2, <java.text.RuleBasedCollator: java.lang.String getRules()>
  <java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>/$r2, <java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)>
  <java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)>/$r2, <java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)>
  java.text.RuleBasedCollator.getCollationKey/$r53, <java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
  java.text.RuleBasedCollator.clone/r2, <java.text.RuleBasedCollator: java.lang.Object clone()>
  java.text.RuleBasedCollator.clone/$r5, <java.text.RuleBasedCollator: java.lang.Object clone()>
  java.text.RuleBasedCollator.getTables/$r1, <java.text.RuleBasedCollator: java.text.RBCollationTables getTables()>
  java.text.RBCollationTables.getRules/$r1, <java.text.RBCollationTables: java.lang.String getRules()>
  <java.text.RBCollationTables: java.util.Vector getContractValues(char)>/$r2, <java.text.RBCollationTables: java.util.Vector getContractValues(char)>
  <java.text.RBCollationTables: java.util.Vector getContractValues(int)>/$r3, <java.text.RBCollationTables: java.util.Vector getContractValues(int)>
  java.text.RBCollationTables.getExpandValueList/$r3, <java.text.RBCollationTables: int[] getExpandValueList(int)>
  java.text.Normalizer.getText/$r1, <java.text.Normalizer: java.text.CharacterIterator getText()>
  java.text.CompactIntArray.getIndexArray/$r1, <java.text.CompactIntArray: short[] getIndexArray()>
  java.text.CompactIntArray.getStringArray/$r1, <java.text.CompactIntArray: int[] getStringArray()>
  java.text.IntHashtable.clone/r1, <java.text.IntHashtable: java.lang.Object clone()>
  <java.text.RBTableBuilder: java.util.Vector getContractValues(char)>/$r2, <java.text.RBTableBuilder: java.util.Vector getContractValues(char)>
  <java.text.RBTableBuilder: java.util.Vector getContractValues(int)>/$r3, <java.text.RBTableBuilder: java.util.Vector getContractValues(int)>
  java.text.CompactShortArray.getIndexArray/$r1, <java.text.CompactShortArray: short[] getIndexArray()>
  java.text.CompactShortArray.getStringArray/$r1, <java.text.CompactShortArray: short[] getStringArray()>
  java.text.CompactShortArray.getIterator/$r1, <java.text.CompactShortArray: java.text.CompactShortArray$Iterator getIterator()>
  java.text.CompactByteArray.getIndexArray/$r1, <java.text.CompactByteArray: short[] getIndexArray()>
  java.text.CompactByteArray.getStringArray/$r1, <java.text.CompactByteArray: byte[] getStringArray()>
  java.text.CompactByteArray.getArray/$r1, <java.text.CompactByteArray: byte[] getArray()>
  java.text.Normalizer$DecompIterator.decomposition/$r2, <java.text.Normalizer$DecompIterator: java.lang.String decomposition()>
  <java.text.MergeCollation: java.lang.String getPattern()>/$r1, <java.text.MergeCollation: java.lang.String getPattern()>
  <java.text.MergeCollation: java.lang.String getPattern(boolean)>/$r16, <java.text.MergeCollation: java.lang.String getPattern(boolean)>
  java.text.MergeCollation.findLastWithNoExtension/r1, <java.text.MergeCollation: java.text.PatternEntry findLastWithNoExtension(int)>
  <java.text.MergeCollation: java.lang.String emitPattern()>/$r1, <java.text.MergeCollation: java.lang.String emitPattern()>
  <java.text.MergeCollation: java.lang.String emitPattern(boolean)>/$r7, <java.text.MergeCollation: java.lang.String emitPattern(boolean)>
  java.text.MergeCollation.getItemAt/$r3, <java.text.MergeCollation: java.text.PatternEntry getItemAt(int)>
  java.text.PatternEntry.toString/$r3, <java.text.PatternEntry: java.lang.String toString()>
  java.text.PatternEntry.getExtension/$r1, <java.text.PatternEntry: java.lang.String getExtension()>
  java.text.PatternEntry.getChars/$r1, <java.text.PatternEntry: java.lang.String getChars()>
  java.lang.String.getCTBConverter/r3, <java.lang.String: sun.io.CharToByteConverter getCTBConverter(java.lang.String)>
  java.lang.String.getCTBConverter/r10, <java.lang.String: sun.io.CharToByteConverter getCTBConverter(java.lang.String)>
  <java.lang.String: java.lang.String valueOf(java.lang.Object)>/$r1, <java.lang.String: java.lang.String valueOf(java.lang.Object)>
  <java.lang.String: java.lang.String valueOf(char[])>/$r1, <java.lang.String: java.lang.String valueOf(char[])>
  <java.lang.String: java.lang.String valueOf(char[],int,int)>/$r1, <java.lang.String: java.lang.String valueOf(char[],int,int)>
  <java.lang.String: java.lang.String copyValueOf(char[],int,int)>/$r1, <java.lang.String: java.lang.String copyValueOf(char[],int,int)>
  <java.lang.String: java.lang.String copyValueOf(char[])>/$r1, <java.lang.String: java.lang.String copyValueOf(char[])>
  <java.lang.String: java.lang.String valueOf(boolean)>/$r0, <java.lang.String: java.lang.String valueOf(boolean)>
  <java.lang.String: java.lang.String valueOf(char)>/$r2, <java.lang.String: java.lang.String valueOf(char)>
  <java.lang.String: java.lang.String valueOf(int)>/$r0, <java.lang.String: java.lang.String valueOf(int)>
  <java.lang.String: java.lang.String valueOf(long)>/$r0, <java.lang.String: java.lang.String valueOf(long)>
  <java.lang.String: java.lang.String valueOf(float)>/$r0, <java.lang.String: java.lang.String valueOf(float)>
  <java.lang.String: java.lang.String valueOf(double)>/$r0, <java.lang.String: java.lang.String valueOf(double)>
  <java.lang.Class: java.lang.Class forName(java.lang.String)>/$r2, <java.lang.Class: java.lang.Class forName(java.lang.String)>
  <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>/$r5, <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>
  java.lang.Class.forName0/@native-return, <java.lang.Class: java.lang.Class forName0(java.lang.String,boolean,java.lang.ClassLoader)>
  java.lang.Class.getPrimitiveClass/@native-return, <java.lang.Class: java.lang.Class getPrimitiveClass(java.lang.String)>
  <java.lang.Integer: java.lang.String toString(int,int)>/$r1, <java.lang.Integer: java.lang.String toString(int,int)>
  <java.lang.Integer: java.lang.String toString(int,int)>/$r4, <java.lang.Integer: java.lang.String toString(int,int)>
  java.lang.Integer.toOctalString/$r0, <java.lang.Integer: java.lang.String toOctalString(int)>
  java.lang.Integer.toBinaryString/$r0, <java.lang.Integer: java.lang.String toBinaryString(int)>
  java.lang.Integer.toUnsignedString/$r2, <java.lang.Integer: java.lang.String toUnsignedString(int,int)>
  <java.lang.Integer: java.lang.String toString(int)>/$r4, <java.lang.Integer: java.lang.String toString(int)>
  <java.lang.Integer: java.lang.String toString(int)>/$stringconstant0, <java.lang.Integer: java.lang.String toString(int)>
  <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>/$r1, <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
  <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>/$r1, <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
  <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>/$r1, <java.lang.Integer: java.lang.Integer getInteger(java.lang.String)>
  <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>/$r2, <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>
  java.lang.ThreadLocal.createInheritedMap/$r1, <java.lang.ThreadLocal: java.lang.ThreadLocal$ThreadLocalMap createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap)>
  java.io.ObjectStreamField.constructSearchKey/$r2, <java.io.ObjectStreamField: java.io.ObjectStreamField constructSearchKey(java.lang.String,java.lang.Class)>
  java.util.Locale.getDefault/$r0, <java.util.Locale: java.util.Locale getDefault()>
  java.util.Locale.getAvailableLocales/$r0, <java.util.Locale: java.util.Locale[] getAvailableLocales()>
  java.util.Locale.getISOCountries/r8, <java.util.Locale: java.lang.String[] getISOCountries()>
  java.util.Locale.getISOLanguages/r8, <java.util.Locale: java.lang.String[] getISOLanguages()>
  java.util.Locale.getLanguagesForCountry/r16, <java.util.Locale: java.lang.String[] getLanguagesForCountry(java.lang.String)>
  java.util.Locale.formatList/$r7, <java.util.Locale: java.lang.String formatList(java.lang.String[],java.lang.String[])>
  java.util.Locale.formatList/$r16, <java.util.Locale: java.lang.String formatList(java.lang.String[],java.lang.String[])>
  java.util.Locale.composeList/r1, <java.util.Locale: java.lang.String[] composeList(java.text.MessageFormat,java.lang.String[])>
  java.util.Locale.composeList/$r8, <java.util.Locale: java.lang.String[] composeList(java.text.MessageFormat,java.lang.String[])>
  <java.lang.Long: java.lang.String toString(long,int)>/$r3, <java.lang.Long: java.lang.String toString(long,int)>
  java.lang.Long.toHexString/$r0, <java.lang.Long: java.lang.String toHexString(long)>
  java.lang.Long.toOctalString/$r0, <java.lang.Long: java.lang.String toOctalString(long)>
  java.lang.Long.toBinaryString/$r0, <java.lang.Long: java.lang.String toBinaryString(long)>
  java.lang.Long.toUnsignedString/$r2, <java.lang.Long: java.lang.String toUnsignedString(long,int)>
  <java.lang.Long: java.lang.String toString(long)>/$r0, <java.lang.Long: java.lang.String toString(long)>
  <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>/$r1, <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>
  <java.lang.Long: java.lang.Long valueOf(java.lang.String)>/$r1, <java.lang.Long: java.lang.Long valueOf(java.lang.String)>
  <java.lang.Long: java.lang.Long getLong(java.lang.String)>/$r1, <java.lang.Long: java.lang.Long getLong(java.lang.String)>
  <java.lang.Long: java.lang.Long getLong(java.lang.String,long)>/$r2, <java.lang.Long: java.lang.Long getLong(java.lang.String,long)>
  <java.lang.Float: java.lang.String toString(float)>/$r1, <java.lang.Float: java.lang.String toString(float)>
  java.lang.Float.valueOf/$r1, <java.lang.Float: java.lang.Float valueOf(java.lang.String)>
  java.lang.System.getSecurityManager/$r0, <java.lang.System: java.lang.SecurityManager getSecurityManager()>
  java.lang.System.initProperties/@native-return, <java.lang.System: java.util.Properties initProperties(java.util.Properties)>
  java.lang.System.getProperties/$r2, <java.lang.System: java.util.Properties getProperties()>
  java.lang.System.mapLibraryName/@native-return, <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
  java.lang.System.getCallerClass/@native-return, <java.lang.System: java.lang.Class getCallerClass()>
  <java.lang.Double: java.lang.String toString(double)>/$r1, <java.lang.Double: java.lang.String toString(double)>
  java.lang.Double.valueOf/$r1, <java.lang.Double: java.lang.Double valueOf(java.lang.String)>
  java.lang.String$CachedConverter.access$100/$r1, <java.lang.String$CachedConverter: java.lang.Object access$100(java.lang.String$CachedConverter)>
  java.io.ObjectInputStream.latestUserDefinedLoader/@native-return, <java.io.ObjectInputStream: java.lang.ClassLoader latestUserDefinedLoader()>
  java.io.ObjectInputStream.allocateNewObject/@native-return, <java.io.ObjectInputStream: java.lang.Object allocateNewObject(java.lang.Class,java.lang.Class)>
  java.io.ObjectInputStream.allocateNewArray/@native-return, <java.io.ObjectInputStream: java.lang.Object allocateNewArray(java.lang.Class,int)>
  java.io.ObjectInputStream.access$000/$r1, <java.io.ObjectInputStream: java.lang.Object access$000(java.io.ObjectInputStream,boolean)>
  java.lang.ClassLoader.getSystemResource/$r2, <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
  java.lang.ClassLoader.getSystemResource/$r3, <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
  java.lang.ClassLoader.getBootstrapResource/$r3, <java.lang.ClassLoader: java.net.URL getBootstrapResource(java.lang.String)>
  java.lang.ClassLoader.getSystemResources/$r2, <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
  java.lang.ClassLoader.getSystemResources/$r3, <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
  java.lang.ClassLoader.getBootstrapResources/$r3, <java.lang.ClassLoader: java.util.Enumeration getBootstrapResources(java.lang.String)>
  java.lang.ClassLoader.getBootstrapClassPath/$r2, <java.lang.ClassLoader: sun.misc.URLClassPath getBootstrapClassPath()>
  java.lang.ClassLoader.getSystemClassLoader/$r8, <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
  java.lang.ClassLoader.getCallerClassLoader/@native-return, <java.lang.ClassLoader: java.lang.ClassLoader getCallerClassLoader()>
  java.lang.ClassLoader.getGetClassLoaderPerm/$r2, <java.lang.ClassLoader: java.lang.RuntimePermission getGetClassLoaderPerm()>
  java.lang.ClassLoader.initializePath/r3, <java.lang.ClassLoader: java.lang.String[] initializePath(java.lang.String)>
  java.lang.ClassLoader.access$000/$r0, <java.lang.ClassLoader: java.util.Vector access$000()>
  java.lang.ClassLoader.access$100/$r0, <java.lang.ClassLoader: java.util.Stack access$100()>
  <java.lang.Package: java.lang.Package getPackage(java.lang.String)>/$r2, <java.lang.Package: java.lang.Package getPackage(java.lang.String)>
  <java.lang.Package: java.lang.Package getPackage(java.lang.String)>/$r3, <java.lang.Package: java.lang.Package getPackage(java.lang.String)>
  java.lang.Package.getPackages/$r1, <java.lang.Package: java.lang.Package[] getPackages()>
  java.lang.Package.getPackages/$r2, <java.lang.Package: java.lang.Package[] getPackages()>
  <java.lang.Package: java.lang.Package getPackage(java.lang.Class)>/$r4, <java.lang.Package: java.lang.Package getPackage(java.lang.Class)>
  <java.lang.Package: java.lang.Package getPackage(java.lang.Class)>/$r5, <java.lang.Package: java.lang.Package getPackage(java.lang.Class)>
  java.lang.Package.defineSystemPackage/$r4, <java.lang.Package: java.lang.Package defineSystemPackage(java.lang.String,java.lang.String)>
  java.lang.Package.getSystemPackage0/@native-return, <java.lang.Package: java.lang.String getSystemPackage0(java.lang.String)>
  java.lang.Package.getSystemPackages0/@native-return, <java.lang.Package: java.lang.String[] getSystemPackages0()>
  java.lang.Package.access$000/$r0, <java.lang.Package: java.util.Map access$000()>
  java.lang.Package.access$100/$r1, <java.lang.Package: java.util.jar.Manifest access$100(java.lang.String)>
  java.lang.Package.access$200/$r0, <java.lang.Package: java.util.Map access$200()>
  java.lang.Package.access$400/$r0, <java.lang.Package: java.util.Map access$400()>
  java.lang.reflect.Method.copy/r0, <java.lang.reflect.Method: java.lang.Class[] copy(java.lang.Class[])>
  java.lang.reflect.Method.copy/r1, <java.lang.reflect.Method: java.lang.Class[] copy(java.lang.Class[])>
  java.io.ObjectStreamClass.lookup/r1, <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>
  <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.Class)>/r1, <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.Class)>
  <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.reflect.Method)>/$r12, <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.reflect.Method)>
  <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.reflect.Constructor)>/$r9, <java.io.ObjectStreamClass: java.lang.String getSignature(java.lang.reflect.Constructor)>
  java.io.ObjectStreamClass.findDescriptorFor/r3, <java.io.ObjectStreamClass: java.io.ObjectStreamClass findDescriptorFor(java.lang.Class)>
  java.io.ObjectStreamClass.access$002/r1, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$002(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>
  java.io.ObjectStreamClass.access$000/$r1, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$000(java.io.ObjectStreamClass)>
  java.io.ObjectStreamClass.access$300/$r0, <java.io.ObjectStreamClass: java.lang.Class[] access$300()>
  java.io.ObjectStreamClass.access$400/$r3, <java.io.ObjectStreamClass: java.lang.reflect.Method access$400(java.io.ObjectStreamClass,java.lang.String,java.lang.Class[],int,int)>
  java.io.ObjectStreamClass.access$700/$r0, <java.io.ObjectStreamClass: java.lang.Class[] access$700()>
  java.io.ObjectStreamClass.access$800/$r0, <java.io.ObjectStreamClass: java.lang.Class[] access$800()>
  java.lang.SecurityManager.getRootGroup/r1, <java.lang.SecurityManager: java.lang.ThreadGroup getRootGroup()>
  java.lang.SecurityManager.getPackages/r1, <java.lang.SecurityManager: java.lang.String[] getPackages(java.lang.String)>
  <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>/@native-return, <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
  <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>/@native-return, <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction,java.security.AccessControlContext)>
  <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>/@native-return, <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>
  <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>/@native-return, <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction,java.security.AccessControlContext)>
  java.security.AccessController.getStackAccessControlContext/@native-return, <java.security.AccessController: java.security.AccessControlContext getStackAccessControlContext()>
  java.security.AccessController.getInheritedAccessControlContext/@native-return, <java.security.AccessController: java.security.AccessControlContext getInheritedAccessControlContext()>
  java.security.AccessController.getContext/$r1, <java.security.AccessController: java.security.AccessControlContext getContext()>
  java.security.AccessController.getContext/$r2, <java.security.AccessController: java.security.AccessControlContext getContext()>
  java.lang.ThreadLocal$ThreadLocalMap.access$000/$r2, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.Object access$000(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal)>
  java.lang.Thread.currentThread/@native-return, <java.lang.Thread: java.lang.Thread currentThread()>
  java.lang.FloatingDecimal.multPow52/r0, <java.lang.FloatingDecimal: java.lang.FDBigInt multPow52(java.lang.FDBigInt,int,int)>
  java.lang.FloatingDecimal.constructPow52/r1, <java.lang.FloatingDecimal: java.lang.FDBigInt constructPow52(int,int)>
  <java.util.PropertyPermission: java.lang.String getActions(int)>/$r5, <java.util.PropertyPermission: java.lang.String getActions(int)>
  java.lang.Runtime.getRuntime/$r0, <java.lang.Runtime: java.lang.Runtime getRuntime()>
  java.lang.Boolean.valueOf/$r1, <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
  <java.lang.Short: java.lang.String toString(short)>/$r0, <java.lang.Short: java.lang.String toString(short)>
  <java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>/$r1, <java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>
  <java.lang.Short: java.lang.Short valueOf(java.lang.String)>/$r1, <java.lang.Short: java.lang.Short valueOf(java.lang.String)>
  <java.lang.Byte: java.lang.String toString(byte)>/$r0, <java.lang.Byte: java.lang.String toString(byte)>
  <java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>/$r1, <java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>
  <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>/$r1, <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
  java.util.Hashtable.access$100/$r1, <java.util.Hashtable: java.util.Iterator access$100(java.util.Hashtable,int)>
  java.util.Hashtable.access$400/$r1, <java.util.Hashtable: java.util.Hashtable$Entry[] access$400(java.util.Hashtable)>
  java.util.ResourceBundle.getLoader/r2, <java.util.ResourceBundle: java.lang.ClassLoader getLoader()>
  java.util.ResourceBundle.getClassContext/@native-return, <java.util.ResourceBundle: java.lang.Class[] getClassContext()>
  <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>/$r3, <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>
  <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>/$r3, <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
  java.util.ResourceBundle.propagate/r3, <java.util.ResourceBundle: java.lang.Object propagate(java.lang.ClassLoader,java.util.Vector,java.util.Vector,java.lang.Object)>
  java.util.ResourceBundle.calculateBundleNames/r3, <java.util.ResourceBundle: java.util.Vector calculateBundleNames(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>/$r4, <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
  java.io.ObjectOutputStream.getObjectFieldValue/@native-return, <java.io.ObjectOutputStream: java.lang.Object getObjectFieldValue(java.lang.Object,long)>
  java.text.resources.LocaleData.getAvailableLocales/r2, <java.text.resources.LocaleData: java.util.Locale[] getAvailableLocales(java.lang.String)>
  java.text.resources.LocaleData.getClassList/r31, <java.text.resources.LocaleData: java.lang.String[] getClassList(java.lang.String,java.lang.String)>
  java.text.resources.LocaleData.midString/r3, <java.text.resources.LocaleData: java.lang.String midString(java.lang.String,java.lang.String,java.lang.String)>
  java.text.resources.LocaleData.access$000/$r2, <java.text.resources.LocaleData: java.lang.String[] access$000(java.lang.String,java.lang.String)>
  java.lang.Character$UnicodeBlock.of/$r3, <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(char)>
  java.lang.reflect.Proxy.defineClass0/@native-return, <java.lang.reflect.Proxy: java.lang.Class defineClass0(java.lang.ClassLoader,java.lang.String,byte[],int,int)>
  java.lang.reflect.Modifier.toString/$r15, <java.lang.reflect.Modifier: java.lang.String toString(int)>
  java.lang.reflect.Modifier.toString/$stringconstant12, <java.lang.reflect.Modifier: java.lang.String toString(int)>
  java.net.SocketPermission.getHost/r0, <java.net.SocketPermission: java.lang.String getHost(java.lang.String)>
  java.net.SocketPermission.getHost/$stringconstant1, <java.net.SocketPermission: java.lang.String getHost(java.lang.String)>
  <java.net.SocketPermission: java.lang.String getActions(int)>/$r9, <java.net.SocketPermission: java.lang.String getActions(int)>
  java.security.cert.CertificateFactory.access$000/$r0, <java.security.cert.CertificateFactory: java.lang.Class[] access$000()>
  java.security.cert.CertificateFactory.access$100/$r0, <java.security.cert.CertificateFactory: java.lang.Class access$100()>
  java.util.Arrays.asList/$r1, <java.util.Arrays: java.util.List asList(java.lang.Object[])>
  java.io.ObjectStreamClass$MethodSignature.removePrivateAndSort/r1, <java.io.ObjectStreamClass$MethodSignature: java.io.ObjectStreamClass$MethodSignature[] removePrivateAndSort(java.lang.reflect.Member[])>
  java.security.MessageDigest.access$000/$r1, <java.security.MessageDigest: java.lang.String access$000(java.security.MessageDigest)>
  java.security.MessageDigest.access$102/r1, <java.security.MessageDigest: java.security.Provider access$102(java.security.MessageDigest,java.security.Provider)>
  java.security.MessageDigest.access$100/$r1, <java.security.MessageDigest: java.security.Provider access$100(java.security.MessageDigest)>
  java.util.HashMap.access$000/$r1, <java.util.HashMap: java.util.Iterator access$000(java.util.HashMap,int)>
  java.util.HashMap.access$200/$r1, <java.util.HashMap: java.util.HashMap$Entry[] access$200(java.util.HashMap)>
  java.net.InetAddress.getByName/$r2, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/$r4, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/$r6, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/$r8, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/$r10, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/$r12, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  java.net.InetAddress.getByName/r14, <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
  <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String)>/$r1, <java.net.InetAddress: java.net.InetAddress[] getAllByName0(java.lang.String)>
  <java.io.FilePermission: java.lang.String getActions(int)>/$r9, <java.io.FilePermission: java.lang.String getActions(int)>
  java.io.FilePermission.access$000/$r1, <java.io.FilePermission: java.lang.String access$000(java.io.FilePermission)>
  java.io.File.listRoots/$r1, <java.io.File: java.io.File[] listRoots()>
  java.io.File.generateFile/$r5, <java.io.File: java.io.File generateFile(java.lang.String,java.lang.String,java.io.File)>
  java.io.File.getTempDir/$r5, <java.io.File: java.lang.String getTempDir()>
  <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>/$r2, <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>
  java.security.AccessControlContext.getDebug/$r0, <java.security.AccessControlContext: sun.security.util.Debug getDebug()>
  java.security.AccessControlContext.getDebug/$r2, <java.security.AccessControlContext: sun.security.util.Debug getDebug()>
  java.lang.ClassLoader$NativeLibrary.getFromClass/$r3, <java.lang.ClassLoader$NativeLibrary: java.lang.Class getFromClass()>
  java.lang.ClassLoader$NativeLibrary.access$200/$r1, <java.lang.ClassLoader$NativeLibrary: java.lang.Class access$200(java.lang.ClassLoader$NativeLibrary)>
  java.net.URLConnection.getFileNameMap/$r2, <java.net.URLConnection: java.net.FileNameMap getFileNameMap()>
  java.net.URLConnection.guessContentTypeFromName/r2, <java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant0, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant1, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant2, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant3, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant4, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant5, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant6, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant7, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant8, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant9, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant10, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant11, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant12, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant13, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant14, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.guessContentTypeFromStream/$stringconstant15, <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>
  java.net.URLConnection.access$000/$r0, <java.net.URLConnection: java.net.FileNameMap access$000()>
  java.lang.ThreadLocal$ThreadLocalMap$Entry.access$500/$r1, <java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object access$500(java.lang.ThreadLocal$ThreadLocalMap$Entry)>
  java.lang.ThreadLocal$ThreadLocalMap$Entry.access$502/r1, <java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object access$502(java.lang.ThreadLocal$ThreadLocalMap$Entry,java.lang.Object)>
  java.lang.ref.Reference.access$100/$r0, <java.lang.ref.Reference: java.lang.ref.Reference$Lock access$100()>
  java.lang.ref.Reference.access$200/$r0, <java.lang.ref.Reference: java.lang.ref.Reference access$200()>
  java.lang.ref.Reference.access$202/r0, <java.lang.ref.Reference: java.lang.ref.Reference access$202(java.lang.ref.Reference)>
  <java.text.NumberFormat: java.text.NumberFormat getInstance()>/$r1, <java.text.NumberFormat: java.text.NumberFormat getInstance()>
  <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>/$r1, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>
  <java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>/$r1, <java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>
  <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>/$r1, <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>
  <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()>/$r1, <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()>
  <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>/$r1, <java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
  <java.text.NumberFormat: java.text.NumberFormat getPercentInstance()>/$r1, <java.text.NumberFormat: java.text.NumberFormat getPercentInstance()>
  <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>/$r1, <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>
  <java.text.NumberFormat: java.text.NumberFormat getScientificInstance()>/$r1, <java.text.NumberFormat: java.text.NumberFormat getScientificInstance()>
  <java.text.NumberFormat: java.text.NumberFormat getScientificInstance(java.util.Locale)>/$r1, <java.text.NumberFormat: java.text.NumberFormat getScientificInstance(java.util.Locale)>
  java.text.NumberFormat.getAvailableLocales/$r0, <java.text.NumberFormat: java.util.Locale[] getAvailableLocales()>
  <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>/$r7, <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale,int)>
  <java.text.DateFormat: java.text.DateFormat getTimeInstance()>/$r1, <java.text.DateFormat: java.text.DateFormat getTimeInstance()>
  <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>/$r1, <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>
  <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>/$r1, <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
  <java.text.DateFormat: java.text.DateFormat getDateInstance()>/$r1, <java.text.DateFormat: java.text.DateFormat getDateInstance()>
  <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>/$r1, <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
  <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>/$r1, <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
  <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>/$r1, <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>
  <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>/$r1, <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
  <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>/$r1, <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
  java.text.DateFormat.getInstance/$r0, <java.text.DateFormat: java.text.DateFormat getInstance()>
  java.text.DateFormat.getAvailableLocales/$r0, <java.text.DateFormat: java.util.Locale[] getAvailableLocales()>
  <java.text.Utility: java.lang.String arrayToRLEString(short[])>/$r5, <java.text.Utility: java.lang.String arrayToRLEString(short[])>
  <java.text.Utility: java.lang.String arrayToRLEString(byte[])>/$r6, <java.text.Utility: java.lang.String arrayToRLEString(byte[])>
  java.text.Utility.formatForSource/$r23, <java.text.Utility: java.lang.String formatForSource(java.lang.String)>
  java.util.PropertyResourceBundle.access$000/$r1, <java.util.PropertyResourceBundle: java.util.Properties access$000(java.util.PropertyResourceBundle)>
  <java.util.Collections: java.lang.Object min(java.util.Collection)>/r2, <java.util.Collections: java.lang.Object min(java.util.Collection)>
  <java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)>/r3, <java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)>
  <java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)>/$r5, <java.util.Collections: java.lang.Object min(java.util.Collection,java.util.Comparator)>
  <java.util.Collections: java.lang.Object max(java.util.Collection)>/r2, <java.util.Collections: java.lang.Object max(java.util.Collection)>
  <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>/r3, <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>
  <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>/$r5, <java.util.Collections: java.lang.Object max(java.util.Collection,java.util.Comparator)>
  java.util.Collections.unmodifiableCollection/$r1, <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
  java.util.Collections.unmodifiableSet/$r1, <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
  java.util.Collections.unmodifiableSortedSet/$r1, <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>
  java.util.Collections.unmodifiableList/$r1, <java.util.Collections: java.util.List unmodifiableList(java.util.List)>
  java.util.Collections.unmodifiableMap/$r1, <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
  java.util.Collections.unmodifiableSortedMap/$r1, <java.util.Collections: java.util.SortedMap unmodifiableSortedMap(java.util.SortedMap)>
  <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)>/$r1, <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection)>
  <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection,java.lang.Object)>/$r2, <java.util.Collections: java.util.Collection synchronizedCollection(java.util.Collection,java.lang.Object)>
  <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>/$r1, <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>
  <java.util.Collections: java.util.Set synchronizedSet(java.util.Set,java.lang.Object)>/$r2, <java.util.Collections: java.util.Set synchronizedSet(java.util.Set,java.lang.Object)>
  java.util.Collections.synchronizedSortedSet/$r1, <java.util.Collections: java.util.SortedSet synchronizedSortedSet(java.util.SortedSet)>
  <java.util.Collections: java.util.List synchronizedList(java.util.List)>/$r1, <java.util.Collections: java.util.List synchronizedList(java.util.List)>
  <java.util.Collections: java.util.List synchronizedList(java.util.List,java.lang.Object)>/$r2, <java.util.Collections: java.util.List synchronizedList(java.util.List,java.lang.Object)>
  java.util.Collections.synchronizedMap/$r1, <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
  java.util.Collections.synchronizedSortedMap/$r1, <java.util.Collections: java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)>
  java.util.Collections.singleton/$r1, <java.util.Collections: java.util.Set singleton(java.lang.Object)>
  java.util.Collections.singletonList/$r1, <java.util.Collections: java.util.List singletonList(java.lang.Object)>
  java.util.Collections.singletonMap/$r2, <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
  java.util.Collections.nCopies/$r1, <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>
  java.util.Collections.reverseOrder/$r0, <java.util.Collections: java.util.Comparator reverseOrder()>
  java.util.Collections.enumeration/$r1, <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>
  <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>/$r1, <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
  <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>/$r2, <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
  java.lang.reflect.Array.get/@native-return, <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
  java.lang.reflect.Array.newArray/@native-return, <java.lang.reflect.Array: java.lang.Object newArray(java.lang.Class,int)>
  java.lang.reflect.Array.multiNewArray/@native-return, <java.lang.reflect.Array: java.lang.Object multiNewArray(java.lang.Class,int[])>
  java.util.WeakHashMap.access$200/$r1, <java.util.WeakHashMap: java.util.Map access$200(java.util.WeakHashMap)>
  java.security.Security.securityPropFile/$r3, <java.security.Security: java.io.File securityPropFile(java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r2, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r12, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>
  <java.security.Security: java.lang.String getProviderProperty(java.lang.String,java.security.Provider)>/r2, <java.security.Security: java.lang.String getProviderProperty(java.lang.String,java.security.Provider)>
  java.security.Security.getStandardName/$r9, <java.security.Security: java.lang.String getStandardName(java.lang.String,java.lang.String,java.security.Provider)>
  java.security.Security.getAlgorithmProperty/$r9, <java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)>
  <java.security.Security: java.security.Provider[] getProviders()>/r1, <java.security.Security: java.security.Provider[] getProviders()>
  java.security.Security.getProvider/r3, <java.security.Security: java.security.Provider getProvider(java.lang.String)>
  <java.security.Security: java.security.Provider[] getProviders(java.lang.String)>/$r7, <java.security.Security: java.security.Provider[] getProviders(java.lang.String)>
  <java.security.Security: java.security.Provider[] getProviders(java.util.Map)>/r1, <java.security.Security: java.security.Provider[] getProviders(java.util.Map)>
  <java.security.Security: java.security.Provider[] getProviders(java.util.Map)>/r15, <java.security.Security: java.security.Provider[] getProviders(java.util.Map)>
  java.security.Security.getProperty/r4, <java.security.Security: java.lang.String getProperty(java.lang.String)>
  java.security.Security.getAllQualifyingCandidates/r9, <java.security.Security: java.util.HashSet getAllQualifyingCandidates(java.lang.String,java.lang.String,java.security.Provider[])>
  java.security.Security.getAllQualifyingCandidates/$r18, <java.security.Security: java.util.HashSet getAllQualifyingCandidates(java.lang.String,java.lang.String,java.security.Provider[])>
  java.security.Security.getProvidersNotUsingCache/r4, <java.security.Security: java.util.HashSet getProvidersNotUsingCache(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.HashSet,java.security.Provider[])>
  java.io.FileSystem.getFileSystem/@native-return, <java.io.FileSystem: java.io.FileSystem getFileSystem()>
  java.security.Policy.getPolicy/$r2, <java.security.Policy: java.security.Policy getPolicy()>
  <java.util.Calendar: java.util.Calendar getInstance()>/$r0, <java.util.Calendar: java.util.Calendar getInstance()>
  <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>/$r1, <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
  <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>/$r1, <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>
  <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>/$r2, <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>
  java.util.Calendar.getAvailableLocales/$r0, <java.util.Calendar: java.util.Locale[] getAvailableLocales()>
  java.util.TimeZone.getTimeZone/r1, <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
  <java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>/r2, <java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>
  <java.util.TimeZone: java.lang.String[] getAvailableIDs()>/r3, <java.util.TimeZone: java.lang.String[] getAvailableIDs()>
  java.util.TimeZone.getSystemTimeZoneID/@native-return, <java.util.TimeZone: java.lang.String getSystemTimeZoneID(java.lang.String,java.lang.String)>
  java.util.TimeZone.getDefault/$r16, <java.util.TimeZone: java.util.TimeZone getDefault()>
  java.lang.Shutdown$WrappedHook.access$100/$r1, <java.lang.Shutdown$WrappedHook: java.lang.Thread access$100(java.lang.Shutdown$WrappedHook)>
  java.math.BigInteger.smallPrime/r2, <java.math.BigInteger: java.math.BigInteger smallPrime(int,int,java.util.Random)>
  java.math.BigInteger.largePrime/r4, <java.math.BigInteger: java.math.BigInteger largePrime(int,int,java.util.Random)>
  java.math.BigInteger.lucasLehmerSequence/r3, <java.math.BigInteger: java.math.BigInteger lucasLehmerSequence(int,java.math.BigInteger,java.math.BigInteger)>
  <java.math.BigInteger: java.math.BigInteger valueOf(long)>/$r0, <java.math.BigInteger: java.math.BigInteger valueOf(long)>
  <java.math.BigInteger: java.math.BigInteger valueOf(long)>/$r2, <java.math.BigInteger: java.math.BigInteger valueOf(long)>
  <java.math.BigInteger: java.math.BigInteger valueOf(long)>/$r4, <java.math.BigInteger: java.math.BigInteger valueOf(long)>
  <java.math.BigInteger: java.math.BigInteger valueOf(long)>/$r5, <java.math.BigInteger: java.math.BigInteger valueOf(long)>
  <java.math.BigInteger: java.math.BigInteger valueOf(int[])>/$r1, <java.math.BigInteger: java.math.BigInteger valueOf(int[])>
  <java.math.BigInteger: int[] add(int[],int[])>/r3, <java.math.BigInteger: int[] add(int[],int[])>
  <java.math.BigInteger: int[] subtract(int[],int[])>/r2, <java.math.BigInteger: int[] subtract(int[],int[])>
  java.math.BigInteger.squareToLen/r1, <java.math.BigInteger: int[] squareToLen(int[],int,int[])>
  java.math.BigInteger.leftShift/r0, <java.math.BigInteger: int[] leftShift(int[],int,int)>
  java.math.BigInteger.leftShift/r1, <java.math.BigInteger: int[] leftShift(int[],int,int)>
  java.math.BigInteger.leftShift/r2, <java.math.BigInteger: int[] leftShift(int[],int,int)>
  java.math.BigInteger.montReduce/r0, <java.math.BigInteger: int[] montReduce(int[],int[],int,int)>
  java.math.BigInteger.stripLeadingZeroInts/r1, <java.math.BigInteger: int[] stripLeadingZeroInts(int[])>
  java.math.BigInteger.trustedStripLeadingZeroInts/r0, <java.math.BigInteger: int[] trustedStripLeadingZeroInts(int[])>
  java.math.BigInteger.trustedStripLeadingZeroInts/r1, <java.math.BigInteger: int[] trustedStripLeadingZeroInts(int[])>
  java.math.BigInteger.stripLeadingZeroBytes/r1, <java.math.BigInteger: int[] stripLeadingZeroBytes(byte[])>
  <java.math.BigInteger: int[] makePositive(byte[])>/r1, <java.math.BigInteger: int[] makePositive(byte[])>
  <java.math.BigInteger: int[] makePositive(int[])>/r1, <java.math.BigInteger: int[] makePositive(int[])>
  java.util.Collections$SingletonSet.access$500/$r1, <java.util.Collections$SingletonSet: java.lang.Object access$500(java.util.Collections$SingletonSet)>
  java.util.Collections$UnmodifiableList.access$000/$r1, <java.util.Collections$UnmodifiableList: java.util.List access$000(java.util.Collections$UnmodifiableList)>
  java.util.SubList.access$100/$r1, <java.util.SubList: java.util.AbstractList access$100(java.util.SubList)>
  <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey create(java.lang.Object)>/$r1, <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey create(java.lang.Object)>
  <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey create(java.lang.Object,java.lang.ref.ReferenceQueue)>/$r2, <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey create(java.lang.Object,java.lang.ref.ReferenceQueue)>
  java.util.WeakHashMap$WeakKey.access$000/$r1, <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey access$000(java.lang.Object)>
  java.util.WeakHashMap$WeakKey.access$100/$r2, <java.util.WeakHashMap$WeakKey: java.util.WeakHashMap$WeakKey access$100(java.lang.Object,java.lang.ref.ReferenceQueue)>
  java.util.AbstractMap$3.access$100/$r1, <java.util.AbstractMap$3: java.util.AbstractMap access$100(java.util.AbstractMap$3)>
  java.util.AbstractMap$1.access$000/$r1, <java.util.AbstractMap$1: java.util.AbstractMap access$000(java.util.AbstractMap$1)>
  <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>/r3, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>
  <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>/r2, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>
  java.net.URLClassLoader.access$000/$r1, <java.net.URLClassLoader: sun.misc.URLClassPath access$000(java.net.URLClassLoader)>
  java.net.URLClassLoader.access$100/$r3, <java.net.URLClassLoader: java.lang.Class access$100(java.net.URLClassLoader,java.lang.String,sun.misc.Resource)>
  java.net.URLClassLoader.access$300/$r1, <java.net.URLClassLoader: java.security.AccessControlContext access$300(java.net.URLClassLoader)>
  java.util.jar.JarFile.access$000/$r1, <java.util.jar.JarFile: java.util.jar.JarVerifier access$000(java.util.jar.JarFile)>
  java.util.LinkedList.access$000/$r1, <java.util.LinkedList: java.util.LinkedList$Entry access$000(java.util.LinkedList)>
  java.util.LinkedList.access$300/$r3, <java.util.LinkedList: java.util.LinkedList$Entry access$300(java.util.LinkedList,java.lang.Object,java.util.LinkedList$Entry)>
  java.util.TimeZoneData.get/$r3, <java.util.TimeZoneData: java.util.TimeZone get(java.lang.String)>
  java.math.MutableBigInteger.modInverseBP2/$r3, <java.math.MutableBigInteger: java.math.MutableBigInteger modInverseBP2(java.math.MutableBigInteger,int)>
  java.math.MutableBigInteger.fixup/r0, <java.math.MutableBigInteger: java.math.MutableBigInteger fixup(java.math.MutableBigInteger,java.math.MutableBigInteger,int)>
  java.security.IdentityScope.getSystemScope/$r1, <java.security.IdentityScope: java.security.IdentityScope getSystemScope()>
  java.security.KeyStore.getDefaultType/r1, <java.security.KeyStore: java.lang.String getDefaultType()>
  java.net.URLClassLoader$3.access$200/$r1, <java.net.URLClassLoader$3: java.util.Enumeration access$200(java.net.URLClassLoader$3)>
  java.util.zip.ZipFile.access$500/$r1, <java.util.zip.ZipFile: java.lang.String access$500(java.util.zip.ZipFile)>
  java.security.Signature.access$000/$r1, <java.security.Signature: java.lang.String access$000(java.security.Signature)>
  java.security.Signature.access$102/r1, <java.security.Signature: java.security.Provider access$102(java.security.Signature,java.security.Provider)>
  java.security.Signature.access$100/$r1, <java.security.Signature: java.security.Provider access$100(java.security.Signature)>
  java.security.SecureRandom.getSeed/$r3, <java.security.SecureRandom: byte[] getSeed(int)>
  java.security.SecureRandom.longToByteArray/r0, <java.security.SecureRandom: byte[] longToByteArray(long)>
  java.security.SecureRandom.getPrngAlgorithm/$r5, <java.security.SecureRandom: java.lang.String getPrngAlgorithm()>
  java.lang.ref.Finalizer.access$000/$r0, <java.lang.ref.Finalizer: java.lang.ref.ReferenceQueue access$000()>
  java.lang.ref.Finalizer.access$200/$r0, <java.lang.ref.Finalizer: java.lang.Object access$200()>
  java.lang.ref.Finalizer.access$300/$r0, <java.lang.ref.Finalizer: java.lang.ref.Finalizer access$300()>
  java.lang.ref.Finalizer.access$302/r0, <java.lang.ref.Finalizer: java.lang.ref.Finalizer access$302(java.lang.ref.Finalizer)>
  java.lang.ref.Finalizer.access$400/$r1, <java.lang.ref.Finalizer: java.lang.ref.Finalizer access$400(java.lang.ref.Finalizer)>
  <java.text.Collator: java.text.Collator getInstance()>/$r1, <java.text.Collator: java.text.Collator getInstance()>
  java.text.Collator.getAvailableLocales/$r0, <java.text.Collator: java.util.Locale[] getAvailableLocales()>
  java.text.RBCollationTables.access$202/r1, <java.text.RBCollationTables: java.text.CompactIntArray access$202(java.text.RBCollationTables,java.text.CompactIntArray)>
  java.text.RBCollationTables.access$302/r1, <java.text.RBCollationTables: java.util.Vector access$302(java.text.RBCollationTables,java.util.Vector)>
  java.text.RBCollationTables.access$402/r1, <java.text.RBCollationTables: java.util.Vector access$402(java.text.RBCollationTables,java.util.Vector)>
  java.text.RBCollationTables.access$502/r1, <java.text.RBCollationTables: java.text.IntHashtable access$502(java.text.RBCollationTables,java.text.IntHashtable)>
  <java.text.Normalizer: java.lang.String decompose(java.lang.String)>/$r1, <java.text.Normalizer: java.lang.String decompose(java.lang.String)>
  <java.text.Normalizer: java.lang.String compose(java.lang.String)>/$r3, <java.text.Normalizer: java.lang.String compose(java.lang.String)>
  <java.text.Normalizer: java.lang.String decompose(java.lang.String,int)>/r0, <java.text.Normalizer: java.lang.String decompose(java.lang.String,int)>
  <java.text.Normalizer: java.lang.String decompose(java.lang.String,int)>/$r7, <java.text.Normalizer: java.lang.String decompose(java.lang.String,int)>
  java.text.Normalizer.getDecompositions/$r0, <java.text.Normalizer: java.text.Normalizer$DecompIterator getDecompositions(int)>
  java.text.Normalizer.access$200/$r0, <java.text.Normalizer: java.lang.String access$200()>
  java.text.Normalizer.access$300/$r0, <java.text.Normalizer: java.text.CompactShortArray access$300()>
  java.text.CompactShortArray.access$000/$r1, <java.text.CompactShortArray: short[] access$000(java.text.CompactShortArray)>
