  <java.lang.String: void <init>(java.lang.String)>/$r3, <java.lang.String: void <init>(java.lang.String)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(java.lang.String)>
  <java.lang.String: void <init>(java.lang.String)>/$r6, <java.lang.String: void <init>(java.lang.String)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(java.lang.String)>
  <java.lang.String: void <init>()>/$r1, <java.lang.String: void <init>()>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>()>
  <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>/$r7, <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>
  <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>/r12, <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(byte[],int,int,sun.io.ByteToCharConverter)>
  <java.lang.String: void <init>(java.lang.StringBuffer)>/$r4, <java.lang.String: void <init>(java.lang.StringBuffer)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(java.lang.StringBuffer)>
  <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/$stringconstant4, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/r3, <java.util.Locale: java.lang.String country>, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/$stringconstant3, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>/r3, <java.util.Locale: java.lang.String variant>, <java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/$stringconstant4, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/r3, <java.util.Locale: java.lang.String country>, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
  <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/$stringconstant3, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>/r3, <java.util.Locale: java.lang.String variant>, <java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r52, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.io.IOException abortIOException>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r56, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.ClassNotFoundException abortClassNotFoundException>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r1, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.Object currentObject>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r2, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/$r66, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/$r71, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/$r76, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/$r81, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: java.lang.Object readObject(boolean)>
  java.io.ObjectInputStream.inputClassDescriptor/r5, java.io.ObjectInputStream.inputClassDescriptor/r2, <java.io.ObjectStreamClass: java.lang.ClassNotFoundException pendingException>, <java.io.ObjectInputStream: java.io.ObjectStreamClass inputClassDescriptor()>
  java.io.ObjectInputStream.inputProxyClassDescriptor/r5, java.io.ObjectInputStream.inputProxyClassDescriptor/r2, <java.io.ObjectStreamClass: java.lang.ClassNotFoundException pendingException>, <java.io.ObjectInputStream: java.io.ObjectStreamClass inputProxyClassDescriptor()>
  java.io.ObjectInputStream.inputObject/$r18, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.lang.Object currentObject>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r74, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.lang.Object currentObject>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r8, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r102, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r10, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r104, java.io.ObjectInputStream.inputObject/r0, <java.io.ObjectInputStream: java.lang.Class currentClass>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.inputObject/$r60, java.io.ObjectInputStream.inputObject/$r59, <java.io.ObjectStreamClass: java.lang.Class[] ancestors>, <java.io.ObjectInputStream: int inputObject(boolean)>
  java.io.ObjectInputStream.readUTFBody/$r2, java.io.ObjectInputStream.readUTFBody/r0, <java.io.ObjectInputStream: char[] cdata>, <java.io.ObjectInputStream: java.lang.String readUTFBody(long)>
  java.io.ObjectInputStream.inputClassFields/$r12, java.io.ObjectInputStream.inputClassFields/r0, <java.io.ObjectInputStream: byte[] data>, <java.io.ObjectInputStream: void inputClassFields(java.lang.Object,java.lang.Class,java.io.ObjectStreamField[])>
  java.lang.ClassLoader.getDefaultDomain/$r14, java.lang.ClassLoader.getDefaultDomain/r0, <java.lang.ClassLoader: java.security.ProtectionDomain defaultDomain>, <java.lang.ClassLoader: java.security.ProtectionDomain getDefaultDomain()>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r5, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String protocol>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r13, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String protocol>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r16, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r17, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String file>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r32, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String ref>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r3, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.net.URLStreamHandler handler>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r14, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String authority>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/$r15, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String userInfo>, <java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r1, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String protocol>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r2, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r3, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String file>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r4, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String ref>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/$r13, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String query>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r3, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/$r14, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/$r8, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String authority>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r1, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String protocol>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r2, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$r11, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String file>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r7, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String ref>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r6, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String query>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r5, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r3, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String authority>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r4, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/r0, <java.net.URL: java.lang.String userInfo>, <java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
  java.security.CodeSource.readObject/$r9, java.security.CodeSource.readObject/r0, <java.security.CodeSource: java.security.cert.Certificate[] certs>, <java.security.CodeSource: void readObject(java.io.ObjectInputStream)>
  java.io.ObjectStreamClass.init/$r3, java.io.ObjectStreamClass.init/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields>, <java.io.ObjectStreamClass: void init()>
  java.io.ObjectStreamClass.computeFieldInfo/$r22, java.io.ObjectStreamClass.computeFieldInfo/r0, <java.io.ObjectStreamClass: long[] primFieldIDs>, <java.io.ObjectStreamClass: void computeFieldInfo()>
  java.io.ObjectStreamClass.computeFieldInfo/$r23, java.io.ObjectStreamClass.computeFieldInfo/r0, <java.io.ObjectStreamClass: char[] primFieldTypecodes>, <java.io.ObjectStreamClass: void computeFieldInfo()>
  java.io.ObjectStreamClass.computeFieldInfo/$r24, java.io.ObjectStreamClass.computeFieldInfo/r0, <java.io.ObjectStreamClass: long[] objFieldIDs>, <java.io.ObjectStreamClass: void computeFieldInfo()>
  java.io.ObjectStreamClass.computeFieldInfo/$r25, java.io.ObjectStreamClass.computeFieldInfo/r0, <java.io.ObjectStreamClass: java.lang.Class[] objFieldTypes>, <java.io.ObjectStreamClass: void computeFieldInfo()>
  java.io.ObjectStreamClass.read/$r9, java.io.ObjectStreamClass.read/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields>, <java.io.ObjectStreamClass: void read(java.io.ObjectInputStream)>
  java.util.Hashtable.clone/$r4, java.util.Hashtable.clone/r1, <java.util.Hashtable: java.util.Hashtable$Entry[] table>, <java.util.Hashtable: java.lang.Object clone()>
  java.text.MessageFormat.setFormats/$r4, java.text.MessageFormat.setFormats/r0, <java.text.MessageFormat: java.text.Format[] formats>, <java.text.MessageFormat: void setFormats(java.text.Format[])>
  java.io.ObjectOutputStream.writeObject/r3, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/$r10, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/$r13, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/$r18, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/$r27, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/r24, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.IOException abortIOException>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/$r30, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.io.IOException abortIOException>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.writeObject/r2, java.io.ObjectOutputStream.writeObject/r0, <java.io.ObjectOutputStream: java.lang.Object currentObject>, <java.io.ObjectOutputStream: void writeObject(java.lang.Object)>
  java.io.ObjectOutputStream.outputObject/r19, java.io.ObjectOutputStream.outputObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void outputObject(java.lang.Object)>
  java.io.ObjectOutputStream.outputObject/$r24, java.io.ObjectOutputStream.outputObject/r0, <java.io.ObjectOutputStream: java.io.ObjectStreamClass currentClassDesc>, <java.io.ObjectOutputStream: void outputObject(java.lang.Object)>
  java.io.ObjectOutputStream.outputObject/r1, java.io.ObjectOutputStream.outputObject/r0, <java.io.ObjectOutputStream: java.lang.Object currentObject>, <java.io.ObjectOutputStream: void outputObject(java.lang.Object)>
  java.io.ObjectOutputStream.outputClassFields/$r9, java.io.ObjectOutputStream.outputClassFields/r0, <java.io.ObjectOutputStream: byte[] data>, <java.io.ObjectOutputStream: void outputClassFields(java.lang.Object,java.lang.Class,java.io.ObjectStreamField[])>
  java.io.ObjectOutputStream.outputClassFields/$r11, java.io.ObjectOutputStream.outputClassFields/r0, <java.io.ObjectOutputStream: byte[] data>, <java.io.ObjectOutputStream: void outputClassFields(java.lang.Object,java.lang.Class,java.io.ObjectStreamField[])>
  java.util.ArrayList.clone/$r3, java.util.ArrayList.clone/r1, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: java.lang.Object clone()>
  <java.io.Writer: void write(int)>/$r4, <java.io.Writer: void write(int)>/r0, <java.io.Writer: char[] writeBuffer>, <java.io.Writer: void write(int)>
  <java.io.Writer: void write(java.lang.String,int,int)>/$r6, <java.io.Writer: void write(java.lang.String,int,int)>/r0, <java.io.Writer: char[] writeBuffer>, <java.io.Writer: void write(java.lang.String,int,int)>
  java.net.SocketPermission.init/$r7, java.net.SocketPermission.init/r0, <java.net.SocketPermission: int[] portrange>, <java.net.SocketPermission: void init(java.lang.String,int)>
  java.net.SocketPermission.init/$r14, java.net.SocketPermission.init/r0, <java.net.SocketPermission: int[] portrange>, <java.net.SocketPermission: void init(java.lang.String,int)>
  java.net.SocketPermission.init/$r16, java.net.SocketPermission.init/r0, <java.net.SocketPermission: java.lang.String cname>, <java.net.SocketPermission: void init(java.lang.String,int)>
  java.net.SocketPermission.init/$stringconstant5, java.net.SocketPermission.init/r0, <java.net.SocketPermission: java.lang.String cname>, <java.net.SocketPermission: void init(java.lang.String,int)>
  java.net.SocketPermission.init/$r18, java.net.SocketPermission.init/r0, <java.net.SocketPermission: java.net.InetAddress[] addresses>, <java.net.SocketPermission: void init(java.lang.String,int)>
  java.net.SocketPermission.getCanonName/$r7, java.net.SocketPermission.getCanonName/r0, <java.net.SocketPermission: java.lang.String cname>, <java.net.SocketPermission: void getCanonName()>
  java.net.SocketPermission.getCanonName/$r13, java.net.SocketPermission.getCanonName/r0, <java.net.SocketPermission: java.lang.String cname>, <java.net.SocketPermission: void getCanonName()>
  java.net.SocketPermission.getIP/$r5, java.net.SocketPermission.getIP/r0, <java.net.SocketPermission: java.net.InetAddress[] addresses>, <java.net.SocketPermission: void getIP()>
  java.io.ObjectStreamClass$2.run/$r63, java.io.ObjectStreamClass$2.run/$r60, <java.io.ObjectStreamClass: java.lang.reflect.Method readObjectMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  java.io.ObjectStreamClass$2.run/$r36, java.io.ObjectStreamClass$2.run/$r33, <java.io.ObjectStreamClass: java.lang.reflect.Method readResolveMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  java.io.ObjectStreamClass$2.run/$r48, java.io.ObjectStreamClass$2.run/$r45, <java.io.ObjectStreamClass: java.lang.reflect.Method readResolveMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  java.io.ObjectStreamClass$2.run/$r20, java.io.ObjectStreamClass$2.run/$r18, <java.io.ObjectStreamClass: java.lang.reflect.Method writeReplaceMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  java.io.ObjectStreamClass$2.run/$r32, java.io.ObjectStreamClass$2.run/$r29, <java.io.ObjectStreamClass: java.lang.reflect.Method writeReplaceMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  java.io.ObjectStreamClass$2.run/$r56, java.io.ObjectStreamClass$2.run/$r53, <java.io.ObjectStreamClass: java.lang.reflect.Method writeObjectMethod>, <java.io.ObjectStreamClass$2: java.lang.Object run()>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r6, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/r2, <java.security.MessageDigest: java.security.Provider provider>, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/$r12, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/r10, <java.security.MessageDigest: java.security.Provider provider>, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
  java.util.Vector.clone/$r3, java.util.Vector.clone/r1, <java.util.Vector: java.lang.Object[] elementData>, <java.util.Vector: java.lang.Object clone()>
  java.security.UnresolvedPermission.readObject/$r11, java.security.UnresolvedPermission.readObject/r0, <java.security.UnresolvedPermission: java.security.cert.Certificate[] certs>, <java.security.UnresolvedPermission: void readObject(java.io.ObjectInputStream)>
  java.util.HashMap.clone/$r4, java.util.HashMap.clone/r1, <java.util.HashMap: java.util.HashMap$Entry[] table>, <java.util.HashMap: java.lang.Object clone()>
  java.util.zip.ZipInputStream.readLOC/r20, java.util.zip.ZipInputStream.readLOC/r3, <java.util.zip.ZipEntry: byte[] extra>, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry readLOC()>
  <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/r3, <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/r0, <java.lang.ThreadGroup: java.lang.ThreadGroup[] groups>, <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>
  <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/$r7, <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>/r0, <java.lang.ThreadGroup: java.lang.ThreadGroup[] groups>, <java.lang.ThreadGroup: void add(java.lang.ThreadGroup)>
  <java.lang.ThreadGroup: void add(java.lang.Thread)>/r3, <java.lang.ThreadGroup: void add(java.lang.Thread)>/r0, <java.lang.ThreadGroup: java.lang.Thread[] threads>, <java.lang.ThreadGroup: void add(java.lang.Thread)>
  <java.lang.ThreadGroup: void add(java.lang.Thread)>/$r7, <java.lang.ThreadGroup: void add(java.lang.Thread)>/r0, <java.lang.ThreadGroup: java.lang.Thread[] threads>, <java.lang.ThreadGroup: void add(java.lang.Thread)>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r4, <java.net.InetAddress: java.lang.String getHostName(boolean)>/r0, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r9, <java.net.InetAddress: java.lang.String getHostName(boolean)>/r0, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r13, <java.net.InetAddress: java.lang.String getHostName(boolean)>/r0, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  <java.net.InetAddress: java.lang.String getHostName(boolean)>/$r16, <java.net.InetAddress: java.lang.String getHostName(boolean)>/r0, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: java.lang.String getHostName(boolean)>
  <java.net.InetAddress: void cacheAddress(java.lang.String,java.lang.Object,long)>/r1, <java.net.InetAddress: void cacheAddress(java.lang.String,java.lang.Object,long)>/r3, <java.net.InetAddress$CacheEntry: java.lang.Object address>, <java.net.InetAddress: void cacheAddress(java.lang.String,java.lang.Object,long)>
  java.net.InetAddress.<clinit>/$r59, java.net.InetAddress.<clinit>/$r57, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: void <clinit>()>
  java.util.HashSet.clone/$r5, java.util.HashSet.clone/r1, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: java.lang.Object clone()>
  java.net.URLStreamHandler.getHostAddress/$r7, java.net.URLStreamHandler.getHostAddress/r1, <java.net.URL: java.net.InetAddress hostAddress>, <java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)>
  java.util.Date.clone/$r7, java.util.Date.clone/r1, <java.util.Date: java.util.Calendar cal>, <java.util.Date: java.lang.Object clone()>
  java.io.Reader.skip/$r6, java.io.Reader.skip/r0, <java.io.Reader: char[] skipBuffer>, <java.io.Reader: long skip(long)>
  java.text.ChoiceFormat.applyPattern/$r29, java.text.ChoiceFormat.applyPattern/r0, <java.text.ChoiceFormat: double[] choiceLimits>, <java.text.ChoiceFormat: void applyPattern(java.lang.String)>
  java.text.ChoiceFormat.applyPattern/$r31, java.text.ChoiceFormat.applyPattern/r0, <java.text.ChoiceFormat: java.lang.String[] choiceFormats>, <java.text.ChoiceFormat: void applyPattern(java.lang.String)>
  java.text.DecimalFormat.setDecimalFormatSymbols/$r4, java.text.DecimalFormat.setDecimalFormatSymbols/r0, <java.text.DecimalFormat: java.text.DecimalFormatSymbols symbols>, <java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>
  java.text.DecimalFormat.clone/$r5, java.text.DecimalFormat.clone/r1, <java.text.DecimalFormat: java.text.DecimalFormatSymbols symbols>, <java.text.DecimalFormat: java.lang.Object clone()>
  java.util.zip.ZipEntry.clone/$r5, java.util.zip.ZipEntry.clone/r1, <java.util.zip.ZipEntry: byte[] extra>, <java.util.zip.ZipEntry: java.lang.Object clone()>
  java.util.Hashtable$Enumerator.remove/$r17, java.util.Hashtable$Enumerator.remove/r4, <java.util.Hashtable$Entry: java.util.Hashtable$Entry next>, <java.util.Hashtable$Enumerator: void remove()>
  java.lang.ref.ReferenceQueue.enqueue/$r8, java.lang.ref.ReferenceQueue.enqueue/r1, <java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>, <java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>
  java.lang.ref.ReferenceQueue.enqueue/$r11, java.lang.ref.ReferenceQueue.enqueue/r1, <java.lang.ref.Reference: java.lang.ref.Reference next>, <java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>
  java.lang.ref.ReferenceQueue.enqueue/r1, java.lang.ref.ReferenceQueue.enqueue/r0, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>, <java.lang.ref.ReferenceQueue: boolean enqueue(java.lang.ref.Reference)>
  java.util.jar.JarVerifier.processEntry/$r11, java.util.jar.JarVerifier.processEntry/r2, <java.util.jar.JarEntry: java.security.cert.Certificate[] certs>, <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
  java.util.jar.JarVerifier.processEntry/$r27, java.util.jar.JarVerifier.processEntry/r0, <java.util.jar.JarVerifier: java.util.ArrayList certCache>, <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
  java.util.jar.JarVerifier.processEntry/$r31, java.util.jar.JarVerifier.processEntry/r0, <java.util.jar.JarVerifier: sun.security.util.ManifestDigester manDig>, <java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>
  java.lang.ref.Reference$ReferenceHandler.run/r2, java.lang.ref.Reference$ReferenceHandler.run/r2, <java.lang.ref.Reference: java.lang.ref.Reference next>, <java.lang.ref.Reference$ReferenceHandler: void run()>
  java.util.Calendar.clone/$r3, java.util.Calendar.clone/r1, <java.util.Calendar: int[] fields>, <java.util.Calendar: java.lang.Object clone()>
  java.util.Calendar.clone/$r4, java.util.Calendar.clone/r1, <java.util.Calendar: boolean[] isSet>, <java.util.Calendar: java.lang.Object clone()>
  java.util.Calendar.clone/$r5, java.util.Calendar.clone/r1, <java.util.Calendar: int[] stamp>, <java.util.Calendar: java.lang.Object clone()>
  java.util.Calendar.clone/$r14, java.util.Calendar.clone/r1, <java.util.Calendar: java.util.TimeZone zone>, <java.util.Calendar: java.lang.Object clone()>
  java.util.TimeZone.clone/$r3, java.util.TimeZone.clone/r1, <java.util.TimeZone: java.lang.String ID>, <java.util.TimeZone: java.lang.Object clone()>
  java.util.Collections$SynchronizedMap.keySet/$r2, java.util.Collections$SynchronizedMap.keySet/r0, <java.util.Collections$SynchronizedMap: java.util.Set keySet>, <java.util.Collections$SynchronizedMap: java.util.Set keySet()>
  java.util.Collections$SynchronizedMap.entrySet/$r2, java.util.Collections$SynchronizedMap.entrySet/r0, <java.util.Collections$SynchronizedMap: java.util.Set entrySet>, <java.util.Collections$SynchronizedMap: java.util.Set entrySet()>
  java.util.Collections$SynchronizedMap.values/$r2, java.util.Collections$SynchronizedMap.values/r0, <java.util.Collections$SynchronizedMap: java.util.Collection values>, <java.util.Collections$SynchronizedMap: java.util.Collection values()>
  java.net.HttpURLConnection.getResponseCode/$r9, java.net.HttpURLConnection.getResponseCode/r0, <java.net.HttpURLConnection: java.lang.String responseMessage>, <java.net.HttpURLConnection: int getResponseCode()>
  java.util.LinkedList.clone/$r6, java.util.LinkedList.clone/r3, <java.util.LinkedList: java.util.LinkedList$Entry header>, <java.util.LinkedList: java.lang.Object clone()>
  java.util.LinkedList.clone/$r8, java.util.LinkedList.clone/$r9, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: java.lang.Object clone()>
  java.util.LinkedList.clone/$r8, java.util.LinkedList.clone/$r7, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: java.lang.Object clone()>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/$r6, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/r2, <java.security.Signature: java.security.Provider provider>, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/$r12, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>/r10, <java.security.Signature: java.security.Provider provider>, <java.security.Signature: java.security.Signature getInstance(java.lang.String)>
  java.util.BitSet.clone/$r7, java.util.BitSet.clone/r3, <java.util.BitSet: long[] bits>, <java.util.BitSet: java.lang.Object clone()>
  java.security.Signer.setKeyPair/r3, java.security.Signer.setKeyPair/r0, <java.security.Signer: java.security.PrivateKey privateKey>, <java.security.Signer: void setKeyPair(java.security.KeyPair)>
  <java.security.SecureRandom: void <init>()>/$r3, <java.security.SecureRandom: void <init>()>/r0, <java.security.SecureRandom: java.security.SecureRandomSpi secureRandomSpi>, <java.security.SecureRandom: void <init>()>
  <java.security.SecureRandom: void <init>()>/$r5, <java.security.SecureRandom: void <init>()>/r0, <java.security.SecureRandom: java.security.SecureRandomSpi secureRandomSpi>, <java.security.SecureRandom: void <init>()>
  <java.security.SecureRandom: void <init>()>/$r4, <java.security.SecureRandom: void <init>()>/r0, <java.security.SecureRandom: java.security.Provider provider>, <java.security.SecureRandom: void <init>()>
  <java.security.SecureRandom: void <init>()>/$r6, <java.security.SecureRandom: void <init>()>/r0, <java.security.SecureRandom: java.security.Provider provider>, <java.security.SecureRandom: void <init>()>
  <java.security.SecureRandom: void <init>(byte[])>/$r4, <java.security.SecureRandom: void <init>(byte[])>/r0, <java.security.SecureRandom: java.security.SecureRandomSpi secureRandomSpi>, <java.security.SecureRandom: void <init>(byte[])>
  <java.security.SecureRandom: void <init>(byte[])>/$r7, <java.security.SecureRandom: void <init>(byte[])>/r0, <java.security.SecureRandom: java.security.SecureRandomSpi secureRandomSpi>, <java.security.SecureRandom: void <init>(byte[])>
  <java.security.SecureRandom: void <init>(byte[])>/$r5, <java.security.SecureRandom: void <init>(byte[])>/r0, <java.security.SecureRandom: java.security.Provider provider>, <java.security.SecureRandom: void <init>(byte[])>
  <java.security.SecureRandom: void <init>(byte[])>/$r8, <java.security.SecureRandom: void <init>(byte[])>/r0, <java.security.SecureRandom: java.security.Provider provider>, <java.security.SecureRandom: void <init>(byte[])>
  java.lang.ref.Finalizer.add/$r2, java.lang.ref.Finalizer.add/r0, <java.lang.ref.Finalizer: java.lang.ref.Finalizer next>, <java.lang.ref.Finalizer: void add()>
  java.lang.ref.Finalizer.add/r0, java.lang.ref.Finalizer.add/$r5, <java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>, <java.lang.ref.Finalizer: void add()>
  java.lang.ref.Finalizer.remove/r0, java.lang.ref.Finalizer.remove/r0, <java.lang.ref.Finalizer: java.lang.ref.Finalizer next>, <java.lang.ref.Finalizer: void remove()>
  java.lang.ref.Finalizer.remove/$r12, java.lang.ref.Finalizer.remove/$r11, <java.lang.ref.Finalizer: java.lang.ref.Finalizer next>, <java.lang.ref.Finalizer: void remove()>
  java.lang.ref.Finalizer.remove/r0, java.lang.ref.Finalizer.remove/r0, <java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>, <java.lang.ref.Finalizer: void remove()>
  java.lang.ref.Finalizer.remove/$r9, java.lang.ref.Finalizer.remove/$r8, <java.lang.ref.Finalizer: java.lang.ref.Finalizer prev>, <java.lang.ref.Finalizer: void remove()>
  <java.io.PipedInputStream: void receive(int)>/$r7, <java.io.PipedInputStream: void receive(int)>/r0, <java.io.PipedInputStream: java.lang.Thread writeSide>, <java.io.PipedInputStream: void receive(int)>
  <java.io.PipedInputStream: int read()>/$r7, <java.io.PipedInputStream: int read()>/r0, <java.io.PipedInputStream: java.lang.Thread readSide>, <java.io.PipedInputStream: int read()>
  java.net.ServerSocket.implAccept/r2, java.net.ServerSocket.implAccept/r1, <java.net.Socket: java.net.SocketImpl impl>, <java.net.ServerSocket: void implAccept(java.net.Socket)>
  java.net.ServerSocket.implAccept/$r5, java.net.ServerSocket.implAccept/r2, <java.net.SocketImpl: java.net.InetAddress address>, <java.net.ServerSocket: void implAccept(java.net.Socket)>
  java.net.ServerSocket.implAccept/$r6, java.net.ServerSocket.implAccept/r2, <java.net.SocketImpl: java.io.FileDescriptor fd>, <java.net.ServerSocket: void implAccept(java.net.Socket)>
  <java.net.PlainSocketImpl: void connect(java.net.InetAddress,int)>/r1, <java.net.PlainSocketImpl: void connect(java.net.InetAddress,int)>/r0, <java.net.SocketImpl: java.net.InetAddress address>, <java.net.PlainSocketImpl: void connect(java.net.InetAddress,int)>
  java.net.PlainSocketImpl.doConnect/$r6, java.net.PlainSocketImpl.doConnect/r0, <java.net.SocketImpl: java.io.FileDescriptor fd>, <java.net.PlainSocketImpl: void doConnect(java.net.InetAddress,int)>
  java.net.Authenticator.requestPasswordAuthentication/r0, java.net.Authenticator.requestPasswordAuthentication/r7, <java.net.Authenticator: java.net.InetAddress requestingSite>, <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
  java.net.Authenticator.requestPasswordAuthentication/r1, java.net.Authenticator.requestPasswordAuthentication/r7, <java.net.Authenticator: java.lang.String requestingProtocol>, <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
  java.net.Authenticator.requestPasswordAuthentication/r2, java.net.Authenticator.requestPasswordAuthentication/r7, <java.net.Authenticator: java.lang.String requestingPrompt>, <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
  java.net.Authenticator.requestPasswordAuthentication/r3, java.net.Authenticator.requestPasswordAuthentication/r7, <java.net.Authenticator: java.lang.String requestingScheme>, <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)>
  java.text.Normalizer.clone/$r7, java.text.Normalizer.clone/r1, <java.text.Normalizer: java.text.CharacterIterator str>, <java.text.Normalizer: java.lang.Object clone()>
  java.text.Normalizer.clone/$r9, java.text.Normalizer.clone/r1, <java.text.Normalizer: java.lang.StringBuffer parsedStr>, <java.text.Normalizer: java.lang.Object clone()>
  java.text.CompactIntArray.clone/$r5, java.text.CompactIntArray.clone/r1, <java.text.CompactIntArray: int[] values>, <java.text.CompactIntArray: java.lang.Object clone()>
  java.text.CompactIntArray.clone/$r8, java.text.CompactIntArray.clone/r1, <java.text.CompactIntArray: short[] indices>, <java.text.CompactIntArray: java.lang.Object clone()>
  java.text.CompactIntArray.clone/$r12, java.text.CompactIntArray.clone/r1, <java.text.CompactIntArray: int[] hashes>, <java.text.CompactIntArray: java.lang.Object clone()>
  java.text.CompactShortArray.clone/$r5, java.text.CompactShortArray.clone/r1, <java.text.CompactShortArray: short[] values>, <java.text.CompactShortArray: java.lang.Object clone()>
  java.text.CompactShortArray.clone/$r8, java.text.CompactShortArray.clone/r1, <java.text.CompactShortArray: short[] indices>, <java.text.CompactShortArray: java.lang.Object clone()>
  java.text.CompactByteArray.clone/$r5, java.text.CompactByteArray.clone/r1, <java.text.CompactByteArray: byte[] values>, <java.text.CompactByteArray: java.lang.Object clone()>
  java.text.CompactByteArray.clone/$r8, java.text.CompactByteArray.clone/r1, <java.text.CompactByteArray: short[] indices>, <java.text.CompactByteArray: java.lang.Object clone()>
  java.text.CompactByteArray.clone/$r12, java.text.CompactByteArray.clone/r1, <java.text.CompactByteArray: int[] hashes>, <java.text.CompactByteArray: java.lang.Object clone()>
  <java.lang.String: void <init>(char[],int,int)>/$r5, <java.lang.String: void <init>(char[],int,int)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(char[],int,int)>
  <java.lang.String: void <init>(byte[],int,int,int)>/r2, <java.lang.String: void <init>(byte[],int,int,int)>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(byte[],int,int,int)>
  java.lang.StringBuffer.setLength/$r5, java.lang.StringBuffer.setLength/r0, <java.lang.StringBuffer: char[] value>, <java.lang.StringBuffer: void setLength(int)>
  java.io.ObjectInputStream.readFields/r1, java.io.ObjectInputStream.readFields/r0, <java.io.ObjectInputStream: java.lang.Object currentGetFields>, <java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>
  java.io.ObjectInputStream.registerValidation/$r8, java.io.ObjectInputStream.registerValidation/r0, <java.io.ObjectInputStream: java.util.ArrayList callbacks>, <java.io.ObjectInputStream: void registerValidation(java.io.ObjectInputValidation,int)>
  java.io.ObjectInputStream.inputArray/$r8, java.io.ObjectInputStream.inputArray/r0, <java.io.ObjectInputStream: java.lang.Object currentObject>, <java.io.ObjectInputStream: int inputArray(boolean)>
  <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>/$r3, <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>/r0, <java.io.PrintStream: java.io.OutputStreamWriter charOut>, <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>
  <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>/$r4, <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>/r0, <java.io.PrintStream: java.io.BufferedWriter textOut>, <java.io.PrintStream: void <init>(java.io.OutputStream,boolean)>
  java.lang.ClassLoader.checkCerts/$r10, java.lang.ClassLoader.checkCerts/r0, <java.lang.ClassLoader: java.security.cert.Certificate[] nocerts>, <java.lang.ClassLoader: void checkCerts(java.lang.String,java.security.CodeSource)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r1, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String protocol>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r2, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/$r7, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String file>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/$r9, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String ref>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/$r10, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String query>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r3, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/$r11, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r4, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.net.URLStreamHandler handler>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/$r19, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>/r0, <java.net.URL: java.lang.String authority>, <java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
  java.net.URL.readObject/$r25, java.net.URL.readObject/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$stringconstant1, java.net.URL.readObject/r0, <java.net.URL: java.lang.String host>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r33, java.net.URL.readObject/r0, <java.net.URL: java.lang.String query>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r35, java.net.URL.readObject/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r36, java.net.URL.readObject/r0, <java.net.URL: java.lang.String path>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r2, java.net.URL.readObject/r0, <java.net.URL: java.net.URLStreamHandler handler>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r15, java.net.URL.readObject/r0, <java.net.URL: java.lang.String authority>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r23, java.net.URL.readObject/r0, <java.net.URL: java.lang.String userInfo>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.net.URL.readObject/$r29, java.net.URL.readObject/r0, <java.net.URL: java.lang.String userInfo>, <java.net.URL: void readObject(java.io.ObjectInputStream)>
  java.io.ObjectStreamClass.setClass/r1, java.io.ObjectStreamClass.setClass/r0, <java.io.ObjectStreamClass: java.lang.Class ofClass>, <java.io.ObjectStreamClass: void setClass(java.lang.Class)>
  java.io.ObjectStreamClass.setClass/$r5, java.io.ObjectStreamClass.setClass/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamClass localClassDesc>, <java.io.ObjectStreamClass: void setClass(java.lang.Class)>
  java.io.ObjectStreamClass.setClass/$r33, java.io.ObjectStreamClass.setClass/r0, <java.io.ObjectStreamClass: java.lang.reflect.Method readObjectMethod>, <java.io.ObjectStreamClass: void setClass(java.lang.Class)>
  java.io.ObjectStreamClass.setClass/$r35, java.io.ObjectStreamClass.setClass/r0, <java.io.ObjectStreamClass: java.lang.reflect.Method readResolveMethod>, <java.io.ObjectStreamClass: void setClass(java.lang.Class)>
  java.security.Permissions.add/r2, java.security.Permissions.add/r0, <java.security.Permissions: java.security.PermissionCollection allPermission>, <java.security.Permissions: void add(java.security.Permission)>
  java.lang.FloatingDecimal.developLongDigits/r9, java.lang.FloatingDecimal.developLongDigits/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void developLongDigits(int,long,long)>
  java.lang.FloatingDecimal.dtoa/r1, java.lang.FloatingDecimal.dtoa/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void dtoa(int,long,int)>
  java.lang.FloatingDecimal.dtoa/$r7, java.lang.FloatingDecimal.dtoa/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void dtoa(int,long,int)>
  <java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>/$r3, <java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>/r0, <java.io.BufferedOutputStream: byte[] buf>, <java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>
  <java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>/$r3, <java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>/r0, <java.io.BufferedInputStream: byte[] buf>, <java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>
  <java.io.FileInputStream: void <init>(java.io.FileDescriptor)>/r1, <java.io.FileInputStream: void <init>(java.io.FileDescriptor)>/r0, <java.io.FileInputStream: java.io.FileDescriptor fd>, <java.io.FileInputStream: void <init>(java.io.FileDescriptor)>
  <java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>/r1, <java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>/r0, <java.io.FileOutputStream: java.io.FileDescriptor fd>, <java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>
  <java.util.Hashtable: void <init>(int,float)>/$r11, <java.util.Hashtable: void <init>(int,float)>/r0, <java.util.Hashtable: java.util.Hashtable$Entry[] table>, <java.util.Hashtable: void <init>(int,float)>
  java.util.Hashtable.put/r2, java.util.Hashtable.put/r4, <java.util.Hashtable$Entry: java.lang.Object value>, <java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.ResourceBundle.setLocale/$r6, java.util.ResourceBundle.setLocale/r0, <java.util.ResourceBundle: java.util.Locale locale>, <java.util.ResourceBundle: void setLocale(java.lang.String,java.lang.String)>
  java.util.ResourceBundle.setLocale/$r7, java.util.ResourceBundle.setLocale/r0, <java.util.ResourceBundle: java.util.Locale locale>, <java.util.ResourceBundle: void setLocale(java.lang.String,java.lang.String)>
  java.util.ResourceBundle.setLocale/$r9, java.util.ResourceBundle.setLocale/r0, <java.util.ResourceBundle: java.util.Locale locale>, <java.util.ResourceBundle: void setLocale(java.lang.String,java.lang.String)>
  java.util.ResourceBundle.setLocale/$r11, java.util.ResourceBundle.setLocale/r0, <java.util.ResourceBundle: java.util.Locale locale>, <java.util.ResourceBundle: void setLocale(java.lang.String,java.lang.String)>
  java.text.MessageFormat.applyPattern/$r20, java.text.MessageFormat.applyPattern/r0, <java.text.MessageFormat: java.lang.String pattern>, <java.text.MessageFormat: void applyPattern(java.lang.String)>
  java.io.ObjectOutputStream.putFields/$r4, java.io.ObjectOutputStream.putFields/r0, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField currentPutFields>, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>
  java.io.ObjectOutputStream.writeUTF/$r4, java.io.ObjectOutputStream.writeUTF/r0, <java.io.ObjectOutputStream: char[] cdata>, <java.io.ObjectOutputStream: void writeUTF(java.lang.String)>
  <java.util.ArrayList: void <init>(int)>/$r6, <java.util.ArrayList: void <init>(int)>/r0, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: void <init>(int)>
  <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/r1, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/r0, <java.io.BufferedWriter: java.io.Writer out>, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>
  <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/$r3, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/r0, <java.io.BufferedWriter: char[] cb>, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>
  <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/$r6, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>/r0, <java.io.BufferedWriter: java.lang.String lineSeparator>, <java.io.BufferedWriter: void <init>(java.io.Writer,int)>
  <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/r1, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/r0, <java.io.OutputStreamWriter: java.io.OutputStream out>, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>
  <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/r2, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/r0, <java.io.OutputStreamWriter: sun.io.CharToByteConverter ctb>, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>
  <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/$r4, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>/r0, <java.io.OutputStreamWriter: byte[] bb>, <java.io.OutputStreamWriter: void <init>(java.io.OutputStream,sun.io.CharToByteConverter)>
  <java.io.Writer: void <init>(java.lang.Object)>/r1, <java.io.Writer: void <init>(java.lang.Object)>/r0, <java.io.Writer: java.lang.Object lock>, <java.io.Writer: void <init>(java.lang.Object)>
  java.security.BasicPermission.init/r1, java.security.BasicPermission.init/r0, <java.security.BasicPermission: java.lang.String path>, <java.security.BasicPermission: void init(java.lang.String)>
  java.security.BasicPermission.init/$r4, java.security.BasicPermission.init/r0, <java.security.BasicPermission: java.lang.String path>, <java.security.BasicPermission: void init(java.lang.String)>
  java.security.BasicPermission.init/$stringconstant5, java.security.BasicPermission.init/r0, <java.security.BasicPermission: java.lang.String path>, <java.security.BasicPermission: void init(java.lang.String)>
  <java.io.ByteArrayOutputStream: void <init>(int)>/$r6, <java.io.ByteArrayOutputStream: void <init>(int)>/r0, <java.io.ByteArrayOutputStream: byte[] buf>, <java.io.ByteArrayOutputStream: void <init>(int)>
  <java.io.ByteArrayOutputStream: void write(byte[],int,int)>/r2, <java.io.ByteArrayOutputStream: void write(byte[],int,int)>/r0, <java.io.ByteArrayOutputStream: byte[] buf>, <java.io.ByteArrayOutputStream: void write(byte[],int,int)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/$r8, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/r3, <java.security.MessageDigest: java.security.Provider provider>, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
  <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/$r14, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>/r12, <java.security.MessageDigest: java.security.Provider provider>, <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>
  <java.util.Vector: void <init>(int,int)>/$r6, <java.util.Vector: void <init>(int,int)>/r0, <java.util.Vector: java.lang.Object[] elementData>, <java.util.Vector: void <init>(int,int)>
  java.security.UnresolvedPermission.<init>/r1, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.lang.String type>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.<init>/r2, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.lang.String name>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.<init>/r3, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.lang.String actions>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.<init>/$r9, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.security.cert.Certificate[] certs>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.<init>/$r18, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.security.cert.Certificate[] certs>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.security.UnresolvedPermission.<init>/$r28, java.security.UnresolvedPermission.<init>/r0, <java.security.UnresolvedPermission: java.security.cert.Certificate[] certs>, <java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>
  java.util.jar.Attributes$Name.<init>/$r4, java.util.jar.Attributes$Name.<init>/r0, <java.util.jar.Attributes$Name: java.lang.String name>, <java.util.jar.Attributes$Name: void <init>(java.lang.String)>
  <java.util.HashMap: void <init>(int,float)>/$r11, <java.util.HashMap: void <init>(int,float)>/r0, <java.util.HashMap: java.util.HashMap$Entry[] table>, <java.util.HashMap: void <init>(int,float)>
  java.util.zip.ZipInputStream.<init>/$r4, java.util.zip.ZipInputStream.<init>/r0, <java.util.zip.ZipInputStream: java.util.zip.CRC32 crc>, <java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
  java.util.zip.ZipInputStream.<init>/$r5, java.util.zip.ZipInputStream.<init>/r0, <java.util.zip.ZipInputStream: byte[] tmpbuf>, <java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
  <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r2, <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r0, <java.lang.ThreadGroup: java.lang.String name>, <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
  <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r1, <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>/r0, <java.lang.ThreadGroup: java.lang.ThreadGroup parent>, <java.lang.ThreadGroup: void <init>(java.lang.ThreadGroup,java.lang.String)>
  java.io.FilePermission.init/$r5, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  java.io.FilePermission.init/$r12, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  java.io.FilePermission.init/$r18, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  java.io.FilePermission.init/$r22, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  java.io.FilePermission.init/$r25, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  java.io.FilePermission.init/$stringconstant4, java.io.FilePermission.init/r0, <java.io.FilePermission: java.lang.String cpath>, <java.io.FilePermission: void init(int)>
  <java.io.File: void <init>(java.lang.String)>/$r4, <java.io.File: void <init>(java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.lang.String)>
  <java.io.File: void <init>(java.lang.String,java.lang.String)>/$r9, <java.io.File: void <init>(java.lang.String,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.lang.String,java.lang.String)>
  <java.io.File: void <init>(java.lang.String,java.lang.String)>/$r15, <java.io.File: void <init>(java.lang.String,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.lang.String,java.lang.String)>
  <java.io.File: void <init>(java.lang.String,java.lang.String)>/$r17, <java.io.File: void <init>(java.lang.String,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.lang.String,java.lang.String)>
  <java.io.File: void <init>(java.io.File,java.lang.String)>/$r10, <java.io.File: void <init>(java.io.File,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.io.File,java.lang.String)>
  <java.io.File: void <init>(java.io.File,java.lang.String)>/$r15, <java.io.File: void <init>(java.io.File,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.io.File,java.lang.String)>
  <java.io.File: void <init>(java.io.File,java.lang.String)>/$r17, <java.io.File: void <init>(java.io.File,java.lang.String)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.io.File,java.lang.String)>
  <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>/$r6, <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>/r0, <java.security.AccessControlContext: java.security.ProtectionDomain[] context>, <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>
  <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>/r2, <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>/r0, <java.security.AccessControlContext: java.security.DomainCombiner combiner>, <java.security.AccessControlContext: void <init>(java.security.AccessControlContext,java.security.DomainCombiner)>
  java.lang.FDBigInt.lshiftMe/r1, java.lang.FDBigInt.lshiftMe/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void lshiftMe(int)>
  <java.io.BufferedReader: void <init>(java.io.Reader,int)>/r1, <java.io.BufferedReader: void <init>(java.io.Reader,int)>/r0, <java.io.BufferedReader: java.io.Reader in>, <java.io.BufferedReader: void <init>(java.io.Reader,int)>
  <java.io.BufferedReader: void <init>(java.io.Reader,int)>/$r3, <java.io.BufferedReader: void <init>(java.io.Reader,int)>/r0, <java.io.BufferedReader: char[] cb>, <java.io.BufferedReader: void <init>(java.io.Reader,int)>
  <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/r1, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/r0, <java.io.InputStreamReader: java.io.InputStream in>, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>
  <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/r2, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/r0, <java.io.InputStreamReader: sun.io.ByteToCharConverter btc>, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>
  <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/$r4, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>/r0, <java.io.InputStreamReader: byte[] bb>, <java.io.InputStreamReader: void <init>(java.io.InputStream,sun.io.ByteToCharConverter)>
  <java.io.Reader: void <init>(java.lang.Object)>/r1, <java.io.Reader: void <init>(java.lang.Object)>/r0, <java.io.Reader: java.lang.Object lock>, <java.io.Reader: void <init>(java.lang.Object)>
  <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/$r14, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>
  <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/$r15, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>
  <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/$r16, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>
  <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/$r8, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.text.DateFormatSymbols formatData>, <java.text.SimpleDateFormat: void <init>(int,int,java.util.Locale)>
  java.text.ChoiceFormat.setChoices/r1, java.text.ChoiceFormat.setChoices/r0, <java.text.ChoiceFormat: double[] choiceLimits>, <java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>
  java.text.ChoiceFormat.setChoices/r2, java.text.ChoiceFormat.setChoices/r0, <java.text.ChoiceFormat: java.lang.String[] choiceFormats>, <java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r76, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String posPrefixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r88, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String posPrefixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r77, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String posSuffixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r88, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String posSuffixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r78, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negPrefixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r86, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negPrefixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r98, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negPrefixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r79, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negSuffixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r87, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negSuffixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/$r93, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>/r0, <java.text.DecimalFormat: java.lang.String negSuffixPattern>, <java.text.DecimalFormat: void applyPattern(java.lang.String,boolean)>
  java.text.DecimalFormat.readObject/$r3, java.text.DecimalFormat.readObject/r0, <java.text.DecimalFormat: java.text.DigitList digitList>, <java.text.DecimalFormat: void readObject(java.io.ObjectInputStream)>
  <java.util.zip.ZipEntry: void <init>(java.lang.String)>/r1, <java.util.zip.ZipEntry: void <init>(java.lang.String)>/r0, <java.util.zip.ZipEntry: java.lang.String name>, <java.util.zip.ZipEntry: void <init>(java.lang.String)>
  java.util.zip.ZipEntry.setExtra/r1, java.util.zip.ZipEntry.setExtra/r0, <java.util.zip.ZipEntry: byte[] extra>, <java.util.zip.ZipEntry: void setExtra(byte[])>
  java.util.zip.ZipEntry.setComment/r1, java.util.zip.ZipEntry.setComment/r0, <java.util.zip.ZipEntry: java.lang.String comment>, <java.util.zip.ZipEntry: void setComment(java.lang.String)>
  java.util.Hashtable$Entry.setValue/r1, java.util.Hashtable$Entry.setValue/r0, <java.util.Hashtable$Entry: java.lang.Object value>, <java.util.Hashtable$Entry: java.lang.Object setValue(java.lang.Object)>
  java.util.Hashtable$Enumerator.nextElement/r1, java.util.Hashtable$Enumerator.nextElement/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable$Entry entry>, <java.util.Hashtable$Enumerator: java.lang.Object nextElement()>
  java.util.Hashtable$Enumerator.nextElement/$r5, java.util.Hashtable$Enumerator.nextElement/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable$Entry entry>, <java.util.Hashtable$Enumerator: java.lang.Object nextElement()>
  java.util.Hashtable$Enumerator.nextElement/$r3, java.util.Hashtable$Enumerator.nextElement/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable$Entry lastReturned>, <java.util.Hashtable$Enumerator: java.lang.Object nextElement()>
  <java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>/$r3, <java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>/r0, <java.io.PushbackInputStream: byte[] buf>, <java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>
  java.security.Provider.entrySet/$r4, java.security.Provider.entrySet/r0, <java.security.Provider: java.util.Set entrySet>, <java.security.Provider: java.util.Set entrySet()>
  java.util.Arrays$ArrayList.<init>/r1, java.util.Arrays$ArrayList.<init>/r0, <java.util.Arrays$ArrayList: java.lang.Object[] a>, <java.util.Arrays$ArrayList: void <init>(java.lang.Object[])>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/r6, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/r35, <java.security.Security$ProviderProperty: java.lang.String className>, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/r3, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>/r35, <java.security.Security$ProviderProperty: java.security.Provider provider>, <java.security.Security: java.security.Security$ProviderProperty getEngineClassName(java.lang.String,java.lang.String,java.lang.String)>
  java.util.HashMap$HashIterator.next/r1, java.util.HashMap$HashIterator.next/r0, <java.util.HashMap$HashIterator: java.util.HashMap$Entry entry>, <java.util.HashMap$HashIterator: java.lang.Object next()>
  java.util.HashMap$HashIterator.next/$r7, java.util.HashMap$HashIterator.next/r0, <java.util.HashMap$HashIterator: java.util.HashMap$Entry entry>, <java.util.HashMap$HashIterator: java.lang.Object next()>
  java.util.HashMap$HashIterator.next/$r3, java.util.HashMap$HashIterator.next/r0, <java.util.HashMap$HashIterator: java.util.HashMap$Entry lastReturned>, <java.util.HashMap$HashIterator: java.lang.Object next()>
  java.util.HashMap$HashIterator.remove/$r14, java.util.HashMap$HashIterator.remove/r3, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap$HashIterator: void remove()>
  <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/r2, <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/r0, <java.util.zip.InflaterInputStream: java.util.zip.Inflater inf>, <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>
  <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/$r5, <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>/r0, <java.util.zip.InflaterInputStream: byte[] buf>, <java.util.zip.InflaterInputStream: void <init>(java.io.InputStream,java.util.zip.Inflater,int)>
  <java.util.zip.Inflater: void setInput(byte[],int,int)>/r1, <java.util.zip.Inflater: void setInput(byte[],int,int)>/r0, <java.util.zip.Inflater: byte[] buf>, <java.util.zip.Inflater: void setInput(byte[],int,int)>
  java.net.JarURLConnection.parseSpecs/$r8, java.net.JarURLConnection.parseSpecs/r0, <java.net.JarURLConnection: java.net.URL jarFileURL>, <java.net.JarURLConnection: void parseSpecs(java.net.URL)>
  java.net.JarURLConnection.parseSpecs/$r10, java.net.JarURLConnection.parseSpecs/r0, <java.net.JarURLConnection: java.lang.String entryName>, <java.net.JarURLConnection: void parseSpecs(java.net.URL)>
  java.util.TimeZone.setID/r1, java.util.TimeZone.setID/r0, <java.util.TimeZone: java.lang.String ID>, <java.util.TimeZone: void setID(java.lang.String)>
  <java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)>/$r2, <java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)>/r0, <java.util.SimpleTimeZone: byte[] monthLength>, <java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)>
  <java.math.BigInteger: void <init>(byte[])>/$r3, <java.math.BigInteger: void <init>(byte[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(byte[])>
  <java.math.BigInteger: void <init>(byte[])>/$r4, <java.math.BigInteger: void <init>(byte[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(byte[])>
  <java.math.BigInteger: void <init>(int[])>/$r3, <java.math.BigInteger: void <init>(int[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int[])>
  <java.math.BigInteger: void <init>(int[])>/$r4, <java.math.BigInteger: void <init>(int[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int[])>
  <java.math.BigInteger: void <init>(int,byte[])>/$r2, <java.math.BigInteger: void <init>(int,byte[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int,byte[])>
  <java.math.BigInteger: void <init>(int,int[])>/$r2, <java.math.BigInteger: void <init>(int,int[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int,int[])>
  <java.math.BigInteger: void <init>(java.lang.String,int)>/$r7, <java.math.BigInteger: void <init>(java.lang.String,int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(java.lang.String,int)>
  <java.math.BigInteger: void <init>(java.lang.String,int)>/$r9, <java.math.BigInteger: void <init>(java.lang.String,int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(java.lang.String,int)>
  <java.math.BigInteger: void <init>(java.lang.String,int)>/$r23, <java.math.BigInteger: void <init>(java.lang.String,int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(java.lang.String,int)>
  <java.math.BigInteger: void <init>(char[])>/$r4, <java.math.BigInteger: void <init>(char[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(char[])>
  <java.math.BigInteger: void <init>(char[])>/$r6, <java.math.BigInteger: void <init>(char[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(char[])>
  <java.math.BigInteger: void <init>(char[])>/$r15, <java.math.BigInteger: void <init>(char[])>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(char[])>
  <java.math.BigInteger: void <init>(int,int,java.util.Random)>/$r5, <java.math.BigInteger: void <init>(int,int,java.util.Random)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int,int,java.util.Random)>
  java.math.BigInteger.readObject/$r6, java.math.BigInteger.readObject/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void readObject(java.io.ObjectInputStream)>
  <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>/r1, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>/r0, <java.util.Collections$SynchronizedMap: java.util.Map m>, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>
  <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>/r0, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>/r0, <java.util.Collections$SynchronizedMap: java.lang.Object mutex>, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>
  java.util.Collections$UnmodifiableCollection.<init>/r1, java.util.Collections$UnmodifiableCollection.<init>/r0, <java.util.Collections$UnmodifiableCollection: java.util.Collection c>, <java.util.Collections$UnmodifiableCollection: void <init>(java.util.Collection)>
  java.util.Collections$UnmodifiableMap.<init>/r1, java.util.Collections$UnmodifiableMap.<init>/r0, <java.util.Collections$UnmodifiableMap: java.util.Map m>, <java.util.Collections$UnmodifiableMap: void <init>(java.util.Map)>
  java.util.Collections$CopiesList.<init>/r1, java.util.Collections$CopiesList.<init>/r0, <java.util.Collections$CopiesList: java.lang.Object element>, <java.util.Collections$CopiesList: void <init>(int,java.lang.Object)>
  <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>/r1, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>/r0, <java.util.Collections$SynchronizedCollection: java.util.Collection c>, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>
  <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>/r0, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>/r0, <java.util.Collections$SynchronizedCollection: java.lang.Object mutex>, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>
  java.util.SubList.<init>/r1, java.util.SubList.<init>/r0, <java.util.SubList: java.util.AbstractList l>, <java.util.SubList: void <init>(java.util.AbstractList,int,int)>
  java.net.HttpURLConnection.setRequestMethod/r1, java.net.HttpURLConnection.setRequestMethod/r0, <java.net.HttpURLConnection: java.lang.String method>, <java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>
  <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>/$r7, <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>/$r6, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>
  <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>/$r5, <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>/$r4, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: void remove(java.util.LinkedList$Entry)>
  java.math.MutableBigInteger.divide/$r16, java.math.MutableBigInteger.divide/r2, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void divide(java.math.MutableBigInteger,java.math.MutableBigInteger,java.math.MutableBigInteger)>
  java.math.MutableBigInteger.divide/$r12, java.math.MutableBigInteger.divide/r3, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void divide(java.math.MutableBigInteger,java.math.MutableBigInteger,java.math.MutableBigInteger)>
  java.security.Identity.addCertificate/$r8, java.security.Identity.addCertificate/r0, <java.security.Identity: java.security.PublicKey publicKey>, <java.security.Identity: void addCertificate(java.security.Certificate)>
  java.security.Identity.addCertificate/$r2, java.security.Identity.addCertificate/r0, <java.security.Identity: java.util.Vector certificates>, <java.security.Identity: void addCertificate(java.security.Certificate)>
  <java.util.zip.ZipFile: void <init>(java.io.File,int)>/$r2, <java.util.zip.ZipFile: void <init>(java.io.File,int)>/r0, <java.util.zip.ZipFile: java.util.Vector inflaters>, <java.util.zip.ZipFile: void <init>(java.io.File,int)>
  <java.util.zip.ZipFile: void <init>(java.io.File,int)>/r3, <java.util.zip.ZipFile: void <init>(java.io.File,int)>/r0, <java.util.zip.ZipFile: java.lang.String name>, <java.util.zip.ZipFile: void <init>(java.io.File,int)>
  java.util.LinkedList$ListItr.<init>/r1, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList this$0>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.<init>/$r4, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry lastReturned>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.<init>/$r13, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.<init>/$r15, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.<init>/$r17, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.<init>/$r19, java.util.LinkedList$ListItr.<init>/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>
  java.util.LinkedList$ListItr.next/$r3, java.util.LinkedList$ListItr.next/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry lastReturned>, <java.util.LinkedList$ListItr: java.lang.Object next()>
  java.util.LinkedList$ListItr.next/$r5, java.util.LinkedList$ListItr.next/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: java.lang.Object next()>
  java.util.LinkedList$ListItr.previous/$r1, java.util.LinkedList$ListItr.previous/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry lastReturned>, <java.util.LinkedList$ListItr: java.lang.Object previous()>
  java.util.LinkedList$ListItr.previous/$r1, java.util.LinkedList$ListItr.previous/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: java.lang.Object previous()>
  java.util.LinkedList$ListItr.set/r1, java.util.LinkedList$ListItr.set/$r6, <java.util.LinkedList$Entry: java.lang.Object element>, <java.util.LinkedList$ListItr: void set(java.lang.Object)>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/$r8, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/r3, <java.security.Signature: java.security.Provider provider>, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
  <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/$r14, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/r12, <java.security.Signature: java.security.Provider provider>, <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>
  <java.io.StreamTokenizer: void <init>(java.io.InputStream)>/r1, <java.io.StreamTokenizer: void <init>(java.io.InputStream)>/r0, <java.io.StreamTokenizer: java.io.InputStream input>, <java.io.StreamTokenizer: void <init>(java.io.InputStream)>
  <java.io.StreamTokenizer: void <init>(java.io.Reader)>/r1, <java.io.StreamTokenizer: void <init>(java.io.Reader)>/r0, <java.io.StreamTokenizer: java.io.Reader reader>, <java.io.StreamTokenizer: void <init>(java.io.Reader)>
  <java.util.BitSet: void <init>(int)>/$r3, <java.util.BitSet: void <init>(int)>/r0, <java.util.BitSet: long[] bits>, <java.util.BitSet: void <init>(int)>
  java.io.PipedOutputStream.connect/r1, java.io.PipedOutputStream.connect/r0, <java.io.PipedOutputStream: java.io.PipedInputStream sink>, <java.io.PipedOutputStream: void connect(java.io.PipedInputStream)>
  java.net.PlainSocketImpl.getInputStream/$r4, java.net.PlainSocketImpl.getInputStream/r0, <java.net.PlainSocketImpl: java.net.SocketInputStream socketInputStream>, <java.net.PlainSocketImpl: java.io.InputStream getInputStream()>
  <java.text.CompactIntArray: void <init>(short[],int[])>/r2, <java.text.CompactIntArray: void <init>(short[],int[])>/r0, <java.text.CompactIntArray: int[] values>, <java.text.CompactIntArray: void <init>(short[],int[])>
  <java.text.CompactIntArray: void <init>(short[],int[])>/r1, <java.text.CompactIntArray: void <init>(short[],int[])>/r0, <java.text.CompactIntArray: short[] indices>, <java.text.CompactIntArray: void <init>(short[],int[])>
  java.text.RBTableBuilder.build/$r6, java.text.RBTableBuilder.build/r0, <java.text.RBTableBuilder: java.text.CompactIntArray mapping>, <java.text.RBTableBuilder: void build(java.lang.String,int)>
  java.text.RBTableBuilder.build/$r8, java.text.RBTableBuilder.build/r0, <java.text.RBTableBuilder: java.text.MergeCollation mPattern>, <java.text.RBTableBuilder: void build(java.lang.String,int)>
  <java.text.CompactShortArray: void <init>(short[],short[],short)>/r2, <java.text.CompactShortArray: void <init>(short[],short[],short)>/r0, <java.text.CompactShortArray: short[] values>, <java.text.CompactShortArray: void <init>(short[],short[],short)>
  <java.text.CompactShortArray: void <init>(short[],short[],short)>/r1, <java.text.CompactShortArray: void <init>(short[],short[],short)>/r0, <java.text.CompactShortArray: short[] indices>, <java.text.CompactShortArray: void <init>(short[],short[],short)>
  <java.text.CompactByteArray: void <init>(short[],byte[])>/r2, <java.text.CompactByteArray: void <init>(short[],byte[])>/r0, <java.text.CompactByteArray: byte[] values>, <java.text.CompactByteArray: void <init>(short[],byte[])>
  <java.text.CompactByteArray: void <init>(short[],byte[])>/r1, <java.text.CompactByteArray: void <init>(short[],byte[])>/r0, <java.text.CompactByteArray: short[] indices>, <java.text.CompactByteArray: void <init>(short[],byte[])>
  <java.text.StringCharacterIterator: void <init>(java.lang.String,int,int,int)>/r1, <java.text.StringCharacterIterator: void <init>(java.lang.String,int,int,int)>/r0, <java.text.StringCharacterIterator: java.lang.String text>, <java.text.StringCharacterIterator: void <init>(java.lang.String,int,int,int)>
  java.text.StringCharacterIterator.setText/r1, java.text.StringCharacterIterator.setText/r0, <java.text.StringCharacterIterator: java.lang.String text>, <java.text.StringCharacterIterator: void setText(java.lang.String)>
  java.text.MergeCollation.fixEntry/$r36, java.text.MergeCollation.fixEntry/r1, <java.text.PatternEntry: java.lang.String extension>, <java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>
  java.text.MergeCollation.fixEntry/r1, java.text.MergeCollation.fixEntry/r0, <java.text.MergeCollation: java.text.PatternEntry lastEntry>, <java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>
  java.text.MergeCollation.fixEntry/$r38, java.text.MergeCollation.fixEntry/r0, <java.text.MergeCollation: java.text.PatternEntry lastEntry>, <java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>
  java.text.MergeCollation.fixEntry/r1, java.text.MergeCollation.fixEntry/r0, <java.text.MergeCollation: java.text.PatternEntry saveEntry>, <java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>
  <java.lang.String: void <init>(char[])>/$r3, <java.lang.String: void <init>(char[])>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(char[])>
  <java.lang.String: void <init>(int,int,char[])>/r1, <java.lang.String: void <init>(int,int,char[])>/r0, <java.lang.String: char[] value>, <java.lang.String: void <init>(int,int,char[])>
  <java.lang.Throwable: void <init>(java.lang.String)>/r1, <java.lang.Throwable: void <init>(java.lang.String)>/r0, <java.lang.Throwable: java.lang.String detailMessage>, <java.lang.Throwable: void <init>(java.lang.String)>
  <java.lang.StringBuffer: void <init>(int)>/$r1, <java.lang.StringBuffer: void <init>(int)>/r0, <java.lang.StringBuffer: char[] value>, <java.lang.StringBuffer: void <init>(int)>
  java.lang.StringBuffer.copy/r1, java.lang.StringBuffer.copy/r0, <java.lang.StringBuffer: char[] value>, <java.lang.StringBuffer: void copy()>
  java.lang.StringBuffer.expandCapacity/r1, java.lang.StringBuffer.expandCapacity/r0, <java.lang.StringBuffer: char[] value>, <java.lang.StringBuffer: void expandCapacity(int)>
  java.lang.StringBuffer.readObject/$r4, java.lang.StringBuffer.readObject/r0, <java.lang.StringBuffer: char[] value>, <java.lang.StringBuffer: void readObject(java.io.ObjectInputStream)>
  java.lang.ThreadLocal.createMap/$r3, java.lang.ThreadLocal.createMap/r1, <java.lang.Thread: java.lang.ThreadLocal$ThreadLocalMap threadLocals>, <java.lang.ThreadLocal: void createMap(java.lang.Thread,java.lang.Object)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r1, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r0, <java.io.ObjectStreamField: java.lang.String name>, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r2, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/$r12, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r0, <java.io.ObjectStreamField: java.lang.String typeString>, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/$r14, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>/r0, <java.io.ObjectStreamField: java.lang.String typeString>, <java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>
  <java.io.ObjectStreamField: void <init>(java.lang.reflect.Field)>/r1, <java.io.ObjectStreamField: void <init>(java.lang.reflect.Field)>/r0, <java.io.ObjectStreamField: java.lang.reflect.Field field>, <java.io.ObjectStreamField: void <init>(java.lang.reflect.Field)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/r1, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/r0, <java.io.ObjectStreamField: java.lang.String name>, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/$r5, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/r0, <java.io.ObjectStreamField: java.lang.String typeString>, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/r2, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>/r0, <java.io.ObjectStreamField: java.lang.reflect.Field field>, <java.io.ObjectStreamField: void <init>(java.lang.String,char,java.lang.reflect.Field,java.lang.String)>
  <java.io.ObjectStreamField: void <init>(java.lang.String,boolean)>/r1, <java.io.ObjectStreamField: void <init>(java.lang.String,boolean)>/r0, <java.io.ObjectStreamField: java.lang.String name>, <java.io.ObjectStreamField: void <init>(java.lang.String,boolean)>
  java.io.ObjectStreamField.getType/$r1, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r4, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r5, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r6, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r7, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r8, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r9, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r10, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.getType/$r13, java.io.ObjectStreamField.getType/r0, <java.io.ObjectStreamField: java.lang.Class clazz>, <java.io.ObjectStreamField: java.lang.Class getType()>
  java.io.ObjectStreamField.setField/r1, java.io.ObjectStreamField.setField/r0, <java.io.ObjectStreamField: java.lang.reflect.Field field>, <java.io.ObjectStreamField: void setField(java.lang.reflect.Field)>
  java.io.ObjectStreamField.setSearchKeyTypeString/$r2, java.io.ObjectStreamField.setSearchKeyTypeString/r0, <java.io.ObjectStreamField: java.lang.String typeString>, <java.io.ObjectStreamField: void setSearchKeyTypeString(boolean)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$r4, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String language>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String language>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$r6, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String country>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String country>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$r8, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String variant>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>/r0, <java.util.Locale: java.lang.String variant>, <java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  java.util.Locale.readObject/$r3, java.util.Locale.readObject/r0, <java.util.Locale: java.lang.String language>, <java.util.Locale: void readObject(java.io.ObjectInputStream)>
  java.util.Locale.readObject/$r5, java.util.Locale.readObject/r0, <java.util.Locale: java.lang.String country>, <java.util.Locale: void readObject(java.io.ObjectInputStream)>
  java.util.Locale.readObject/$r7, java.util.Locale.readObject/r0, <java.util.Locale: java.lang.String variant>, <java.util.Locale: void readObject(java.io.ObjectInputStream)>
  <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r1, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r0, <java.lang.String$CachedConverter: java.lang.Object converter>, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>
  <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r2, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r0, <java.lang.String$CachedConverter: java.lang.String requestedEncoding>, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>
  <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r3, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>/r0, <java.lang.String$CachedConverter: java.lang.String canonicalEncoding>, <java.lang.String$CachedConverter: void <init>(java.lang.Object,java.lang.String,java.lang.String)>
  <java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>/r2, <java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>/r0, <java.lang.ClassNotFoundException: java.lang.Throwable ex>, <java.lang.ClassNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r2, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: byte[] data>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r3, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: char[] cdata>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r4, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: java.lang.StringBuffer sbuf>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r5, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: java.lang.Object[] readObjectArglist>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r1, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: java.io.InputStream in>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r6, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: byte[] buf>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/$r7, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>/r0, <java.io.ObjectInputStream: java.io.DataInputStream dis>, <java.io.ObjectInputStream: void <init>(java.io.InputStream)>
  <java.io.ObjectInputStream: void <init>()>/$r2, <java.io.ObjectInputStream: void <init>()>/r0, <java.io.ObjectInputStream: byte[] data>, <java.io.ObjectInputStream: void <init>()>
  <java.io.ObjectInputStream: void <init>()>/$r3, <java.io.ObjectInputStream: void <init>()>/r0, <java.io.ObjectInputStream: char[] cdata>, <java.io.ObjectInputStream: void <init>()>
  <java.io.ObjectInputStream: void <init>()>/$r4, <java.io.ObjectInputStream: void <init>()>/r0, <java.io.ObjectInputStream: java.lang.StringBuffer sbuf>, <java.io.ObjectInputStream: void <init>()>
  <java.io.ObjectInputStream: void <init>()>/$r5, <java.io.ObjectInputStream: void <init>()>/r0, <java.io.ObjectInputStream: java.lang.Object[] readObjectArglist>, <java.io.ObjectInputStream: void <init>()>
  java.io.ObjectInputStream.growClassStacks/r1, java.io.ObjectInputStream.growClassStacks/r0, <java.io.ObjectInputStream: java.lang.Class[] classes>, <java.io.ObjectInputStream: void growClassStacks()>
  java.io.ObjectInputStream.growClassStacks/r2, java.io.ObjectInputStream.growClassStacks/r0, <java.io.ObjectInputStream: java.io.ObjectStreamClass[] classdesc>, <java.io.ObjectInputStream: void growClassStacks()>
  java.io.ObjectInputStream.resetStream/$r5, java.io.ObjectInputStream.resetStream/r0, <java.io.ObjectInputStream: java.lang.Class[] classes>, <java.io.ObjectInputStream: void resetStream()>
  java.io.ObjectInputStream.resetStream/$r9, java.io.ObjectInputStream.resetStream/r0, <java.io.ObjectInputStream: java.io.ObjectStreamClass[] classdesc>, <java.io.ObjectInputStream: void resetStream()>
  java.io.ObjectInputStream.resetStream/$r1, java.io.ObjectInputStream.resetStream/r0, <java.io.ObjectInputStream: java.util.ArrayList wireHandle2Object>, <java.io.ObjectInputStream: void resetStream()>
  java.io.ObjectInputStream.ensureBufferCapacity/r1, java.io.ObjectInputStream.ensureBufferCapacity/r0, <java.io.ObjectInputStream: byte[] buf>, <java.io.ObjectInputStream: void ensureBufferCapacity(int)>
  <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>/r1, <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>/r0, <java.io.PrintWriter: java.io.Writer out>, <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>
  <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>/$r4, <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>/r0, <java.io.PrintWriter: java.lang.String lineSeparator>, <java.io.PrintWriter: void <init>(java.io.Writer,boolean)>
  java.security.ProtectionDomain.<init>/r1, java.security.ProtectionDomain.<init>/r0, <java.security.ProtectionDomain: java.security.CodeSource codesource>, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>
  java.security.ProtectionDomain.<init>/r2, java.security.ProtectionDomain.<init>/r0, <java.security.ProtectionDomain: java.security.PermissionCollection permissions>, <java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/$r3, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.util.Hashtable package2certs>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/$r4, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.util.Vector classes>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/$r5, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.util.Set domains>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/$r6, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.util.HashMap packages>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/$r7, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.util.Vector nativeLibraries>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r1, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.lang.ClassLoader: java.lang.ClassLoader parent>, <java.lang.ClassLoader: void <init>(java.lang.ClassLoader)>
  <java.lang.ClassLoader: void <init>()>/$r2, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.util.Hashtable package2certs>, <java.lang.ClassLoader: void <init>()>
  <java.lang.ClassLoader: void <init>()>/$r3, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.util.Vector classes>, <java.lang.ClassLoader: void <init>()>
  <java.lang.ClassLoader: void <init>()>/$r4, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.util.Set domains>, <java.lang.ClassLoader: void <init>()>
  <java.lang.ClassLoader: void <init>()>/$r5, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.util.HashMap packages>, <java.lang.ClassLoader: void <init>()>
  <java.lang.ClassLoader: void <init>()>/$r6, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.util.Vector nativeLibraries>, <java.lang.ClassLoader: void <init>()>
  <java.lang.ClassLoader: void <init>()>/$r7, <java.lang.ClassLoader: void <init>()>/r0, <java.lang.ClassLoader: java.lang.ClassLoader parent>, <java.lang.ClassLoader: void <init>()>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r1, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String pkgName>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r5, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String implTitle>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r6, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVersion>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r7, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVendor>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r2, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String specTitle>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r3, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVersion>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r4, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVendor>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r8, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/r0, <java.lang.Package: java.net.URL sealBase>, <java.lang.Package: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r1, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String pkgName>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r15, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implTitle>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r33, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implTitle>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r17, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVersion>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r36, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVersion>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r19, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVendor>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r39, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String implVendor>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r9, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specTitle>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r24, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specTitle>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r11, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVersion>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r27, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVersion>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r13, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVendor>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/$r30, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.lang.String specVendor>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r3, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>/r0, <java.lang.Package: java.net.URL sealBase>, <java.lang.Package: void <init>(java.lang.String,java.util.jar.Manifest,java.net.URL)>
  java.security.CodeSource.<init>/r1, java.security.CodeSource.<init>/r0, <java.security.CodeSource: java.net.URL location>, <java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>
  java.security.CodeSource.<init>/$r4, java.security.CodeSource.<init>/r0, <java.security.CodeSource: java.security.cert.Certificate[] certs>, <java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>
  java.security.CodeSource.matchLocation/$r27, java.security.CodeSource.matchLocation/r0, <java.security.CodeSource: java.net.SocketPermission sp>, <java.security.CodeSource: boolean matchLocation(java.security.CodeSource)>
  java.security.CodeSource.matchLocation/$r35, java.security.CodeSource.matchLocation/r1, <java.security.CodeSource: java.net.SocketPermission sp>, <java.security.CodeSource: boolean matchLocation(java.security.CodeSource)>
  <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/$r3, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r0, <java.io.ObjectStreamClass: java.lang.Object lock>, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>
  <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r1, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r0, <java.io.ObjectStreamClass: java.lang.Class ofClass>, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>
  <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/$r4, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r0, <java.io.ObjectStreamClass: java.lang.String name>, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>
  <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r2, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamClass superclass>, <java.io.ObjectStreamClass: void <init>(java.lang.Class,java.io.ObjectStreamClass,boolean,boolean)>
  <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>/$r2, <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>/r0, <java.io.ObjectStreamClass: java.lang.Object lock>, <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>
  <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>/r1, <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>/r0, <java.io.ObjectStreamClass: java.lang.String name>, <java.io.ObjectStreamClass: void <init>(java.lang.String,long)>
  java.io.ObjectStreamClass.setSuperclass/r1, java.io.ObjectStreamClass.setSuperclass/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamClass superclass>, <java.io.ObjectStreamClass: void setSuperclass(java.io.ObjectStreamClass)>
  java.io.ObjectStreamClass.lightCopy/$r4, java.io.ObjectStreamClass.lightCopy/r0, <java.io.ObjectStreamClass: java.lang.String name>, <java.io.ObjectStreamClass: void lightCopy(java.io.ObjectStreamClass)>
  java.io.ObjectStreamClass.lightCopy/$r6, java.io.ObjectStreamClass.lightCopy/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields>, <java.io.ObjectStreamClass: void lightCopy(java.io.ObjectStreamClass)>
  java.io.ObjectStreamClass.initProxyClassDesc/$r2, java.io.ObjectStreamClass.initProxyClassDesc/r0, <java.io.ObjectStreamClass: java.lang.String name>, <java.io.ObjectStreamClass: void initProxyClassDesc(java.lang.Class)>
  java.io.ObjectStreamClass.initProxyClassDesc/$r3, java.io.ObjectStreamClass.initProxyClassDesc/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields>, <java.io.ObjectStreamClass: void initProxyClassDesc(java.lang.Class)>
  java.lang.Class$1.<init>/r1, java.lang.Class$1.<init>/r0, <java.lang.Class$1: java.lang.Class this$0>, <java.lang.Class$1: void <init>(java.lang.Class)>
  java.security.Permissions.<init>/$r1, java.security.Permissions.<init>/r0, <java.security.Permissions: java.util.Hashtable perms>, <java.security.Permissions: void <init>()>
  java.security.Permission.<init>/r1, java.security.Permission.<init>/r0, <java.security.Permission: java.lang.String name>, <java.security.Permission: void <init>(java.lang.String)>
  <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)>/$r4, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)>/r0, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal,java.lang.Object)>
  <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/$r8, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>/r0, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>, <java.lang.ThreadLocal$ThreadLocalMap: void <init>(java.lang.ThreadLocal$ThreadLocalMap)>
  java.lang.ThreadLocal$ThreadLocalMap.resize/r2, java.lang.ThreadLocal$ThreadLocalMap.resize/r0, <java.lang.ThreadLocal$ThreadLocalMap: java.lang.ThreadLocal$ThreadLocalMap$Entry[] table>, <java.lang.ThreadLocal$ThreadLocalMap: void resize()>
  java.lang.Thread.init/r1, java.lang.Thread.init/r0, <java.lang.Thread: java.lang.ThreadGroup group>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.init/$r6, java.lang.Thread.init/r0, <java.lang.Thread: char[] name>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.init/$r7, java.lang.Thread.init/r0, <java.lang.Thread: java.lang.ClassLoader contextClassLoader>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.init/$r8, java.lang.Thread.init/r0, <java.lang.Thread: java.security.AccessControlContext inheritedAccessControlContext>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.init/r2, java.lang.Thread.init/r0, <java.lang.Thread: java.lang.Runnable target>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.init/$r11, java.lang.Thread.init/r0, <java.lang.Thread: java.lang.ThreadLocal$ThreadLocalMap inheritableThreadLocals>, <java.lang.Thread: void init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>
  java.lang.Thread.setName/$r2, java.lang.Thread.setName/r0, <java.lang.Thread: char[] name>, <java.lang.Thread: void setName(java.lang.String)>
  java.lang.Thread.setContextClassLoader/r1, java.lang.Thread.setContextClassLoader/r0, <java.lang.Thread: java.lang.ClassLoader contextClassLoader>, <java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>
  <java.lang.FloatingDecimal: void <init>(boolean,int,char[],int,boolean)>/r1, <java.lang.FloatingDecimal: void <init>(boolean,int,char[],int,boolean)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(boolean,int,char[],int,boolean)>
  <java.lang.FloatingDecimal: void <init>(double)>/$r1, <java.lang.FloatingDecimal: void <init>(double)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(double)>
  <java.lang.FloatingDecimal: void <init>(double)>/$r2, <java.lang.FloatingDecimal: void <init>(double)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(double)>
  <java.lang.FloatingDecimal: void <init>(double)>/$r4, <java.lang.FloatingDecimal: void <init>(double)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(double)>
  <java.lang.FloatingDecimal: void <init>(float)>/$r1, <java.lang.FloatingDecimal: void <init>(float)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(float)>
  <java.lang.FloatingDecimal: void <init>(float)>/$r2, <java.lang.FloatingDecimal: void <init>(float)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(float)>
  <java.lang.FloatingDecimal: void <init>(float)>/$r4, <java.lang.FloatingDecimal: void <init>(float)>/r0, <java.lang.FloatingDecimal: char[] digits>, <java.lang.FloatingDecimal: void <init>(float)>
  <java.util.Properties: void <init>(java.util.Properties)>/r1, <java.util.Properties: void <init>(java.util.Properties)>/r0, <java.util.Properties: java.util.Properties defaults>, <java.util.Properties: void <init>(java.util.Properties)>
  <java.util.PropertyPermission: java.lang.String getActions()>/$r2, <java.util.PropertyPermission: java.lang.String getActions()>/r0, <java.util.PropertyPermission: java.lang.String actions>, <java.util.PropertyPermission: java.lang.String getActions()>
  java.lang.System$1.<init>/r1, java.lang.System$1.<init>/r0, <java.lang.System$1: java.lang.SecurityManager val$s>, <java.lang.System$1: void <init>(java.lang.SecurityManager)>
  java.io.BufferedInputStream.fill/r1, java.io.BufferedInputStream.fill/r0, <java.io.BufferedInputStream: byte[] buf>, <java.io.BufferedInputStream: void fill()>
  <java.io.FileInputStream: void <init>(java.io.File)>/$r4, <java.io.FileInputStream: void <init>(java.io.File)>/r0, <java.io.FileInputStream: java.io.FileDescriptor fd>, <java.io.FileInputStream: void <init>(java.io.File)>
  <java.io.FileOutputStream: void <init>(java.io.File,boolean)>/$r4, <java.io.FileOutputStream: void <init>(java.io.File,boolean)>/r0, <java.io.FileOutputStream: java.io.FileDescriptor fd>, <java.io.FileOutputStream: void <init>(java.io.File,boolean)>
  java.util.MissingResourceException.<init>/r2, java.util.MissingResourceException.<init>/r0, <java.util.MissingResourceException: java.lang.String className>, <java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  java.util.MissingResourceException.<init>/r3, java.util.MissingResourceException.<init>/r0, <java.util.MissingResourceException: java.lang.String key>, <java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
  java.util.Hashtable.rehash/r2, java.util.Hashtable.rehash/r0, <java.util.Hashtable: java.util.Hashtable$Entry[] table>, <java.util.Hashtable: void rehash()>
  java.util.Hashtable.rehash/$r7, java.util.Hashtable.rehash/r4, <java.util.Hashtable$Entry: java.util.Hashtable$Entry next>, <java.util.Hashtable: void rehash()>
  java.util.Hashtable.remove/$r8, java.util.Hashtable.remove/r4, <java.util.Hashtable$Entry: java.util.Hashtable$Entry next>, <java.util.Hashtable: java.lang.Object remove(java.lang.Object)>
  java.util.Hashtable.keySet/$r3, java.util.Hashtable.keySet/r0, <java.util.Hashtable: java.util.Set keySet>, <java.util.Hashtable: java.util.Set keySet()>
  java.util.Hashtable.entrySet/$r3, java.util.Hashtable.entrySet/r0, <java.util.Hashtable: java.util.Set entrySet>, <java.util.Hashtable: java.util.Set entrySet()>
  java.util.Hashtable.values/$r3, java.util.Hashtable.values/r0, <java.util.Hashtable: java.util.Collection values>, <java.util.Hashtable: java.util.Collection values()>
  java.util.Hashtable.readObject/$r4, java.util.Hashtable.readObject/r0, <java.util.Hashtable: java.util.Hashtable$Entry[] table>, <java.util.Hashtable: void readObject(java.io.ObjectInputStream)>
  java.util.ResourceBundle.setParent/r1, java.util.ResourceBundle.setParent/r0, <java.util.ResourceBundle: java.util.ResourceBundle parent>, <java.util.ResourceBundle: void setParent(java.util.ResourceBundle)>
  <java.text.MessageFormat: void <init>(java.lang.String)>/$r2, <java.text.MessageFormat: void <init>(java.lang.String)>/r0, <java.text.MessageFormat: java.util.Locale locale>, <java.text.MessageFormat: void <init>(java.lang.String)>
  <java.text.MessageFormat: void <init>(java.lang.String)>/$stringconstant0, <java.text.MessageFormat: void <init>(java.lang.String)>/r0, <java.text.MessageFormat: java.lang.String pattern>, <java.text.MessageFormat: void <init>(java.lang.String)>
  <java.text.MessageFormat: void <init>(java.lang.String)>/$r3, <java.text.MessageFormat: void <init>(java.lang.String)>/r0, <java.text.MessageFormat: java.text.Format[] formats>, <java.text.MessageFormat: void <init>(java.lang.String)>
  <java.text.MessageFormat: void <init>(java.lang.String)>/$r4, <java.text.MessageFormat: void <init>(java.lang.String)>/r0, <java.text.MessageFormat: int[] offsets>, <java.text.MessageFormat: void <init>(java.lang.String)>
  <java.text.MessageFormat: void <init>(java.lang.String)>/$r5, <java.text.MessageFormat: void <init>(java.lang.String)>/r0, <java.text.MessageFormat: int[] argumentNumbers>, <java.text.MessageFormat: void <init>(java.lang.String)>
  java.text.MessageFormat.setLocale/r1, java.text.MessageFormat.setLocale/r0, <java.text.MessageFormat: java.util.Locale locale>, <java.text.MessageFormat: void setLocale(java.util.Locale)>
  java.text.MessageFormat.clone/$r5, java.text.MessageFormat.clone/r1, <java.text.MessageFormat: java.text.Format[] formats>, <java.text.MessageFormat: java.lang.Object clone()>
  java.text.MessageFormat.clone/$r16, java.text.MessageFormat.clone/r1, <java.text.MessageFormat: int[] offsets>, <java.text.MessageFormat: java.lang.Object clone()>
  java.text.MessageFormat.clone/$r19, java.text.MessageFormat.clone/r1, <java.text.MessageFormat: int[] argumentNumbers>, <java.text.MessageFormat: java.lang.Object clone()>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$r3, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: java.util.Locale locale>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$r8, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: java.util.Locale locale>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$stringconstant0, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: java.lang.String pattern>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$r4, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: java.text.Format[] formats>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$r5, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: int[] offsets>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/$r6, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.MessageFormat: int[] argumentNumbers>, <java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/$r2, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/r0, <java.io.ObjectOutputStream: java.lang.Object[] writeObjectArglist>, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
  <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/r1, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/r0, <java.io.ObjectOutputStream: java.io.OutputStream out>, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
  <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/$r3, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/r0, <java.io.ObjectOutputStream: java.io.DataOutputStream dos>, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
  <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/$r4, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>/r0, <java.io.ObjectOutputStream: byte[] buf>, <java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>
  <java.io.ObjectOutputStream: void <init>()>/$r2, <java.io.ObjectOutputStream: void <init>()>/r0, <java.io.ObjectOutputStream: java.lang.Object[] writeObjectArglist>, <java.io.ObjectOutputStream: void <init>()>
  java.io.ObjectOutputStream.resetStream/$r1, java.io.ObjectOutputStream.resetStream/r0, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$HandleTable handleTable>, <java.io.ObjectOutputStream: void resetStream()>
  java.io.ObjectOutputStream.resetStream/$r5, java.io.ObjectOutputStream.resetStream/r0, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$Stack classDescStack>, <java.io.ObjectOutputStream: void resetStream()>
  java.io.ObjectOutputStream.outputString/$r5, java.io.ObjectOutputStream.outputString/r0, <java.io.ObjectOutputStream: char[] cdata>, <java.io.ObjectOutputStream: void outputString(java.lang.String)>
  java.io.ObjectOutputStream.addReplacement/$r3, java.io.ObjectOutputStream.addReplacement/r0, <java.io.ObjectOutputStream: java.io.ObjectOutputStream$ReplaceTable replaceTable>, <java.io.ObjectOutputStream: void addReplacement(java.lang.Object,java.lang.Object)>
  <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>/r1, <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>/r0, <java.util.StringTokenizer: java.lang.String str>, <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>
  <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>/r2, <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>/r0, <java.util.StringTokenizer: java.lang.String delimiters>, <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>
  <java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>/r1, <java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>/r0, <java.util.StringTokenizer: java.lang.String delimiters>, <java.util.StringTokenizer: java.lang.String nextToken(java.lang.String)>
  java.lang.Character$Subset.<init>/r1, java.lang.Character$Subset.<init>/r0, <java.lang.Character$Subset: java.lang.String name>, <java.lang.Character$Subset: void <init>(java.lang.String)>
  <java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>/r1, <java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>/r0, <java.io.InvalidClassException: java.lang.String classname>, <java.io.InvalidClassException: void <init>(java.lang.String,java.lang.String)>
  java.io.DataInputStream.readLine/r2, java.io.DataInputStream.readLine/r0, <java.io.DataInputStream: char[] lineBuffer>, <java.io.DataInputStream: java.lang.String readLine()>
  java.io.DataInputStream.readLine/$r3, java.io.DataInputStream.readLine/r0, <java.io.DataInputStream: char[] lineBuffer>, <java.io.DataInputStream: java.lang.String readLine()>
  java.io.DataInputStream.readLine/$r4, java.io.DataInputStream.readLine/r0, <java.io.FilterInputStream: java.io.InputStream in>, <java.io.DataInputStream: java.lang.String readLine()>
  <java.util.ArrayList: void <init>(java.util.Collection)>/$r2, <java.util.ArrayList: void <init>(java.util.Collection)>/r0, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: void <init>(java.util.Collection)>
  java.util.ArrayList.trimToSize/$r4, java.util.ArrayList.trimToSize/r0, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: void trimToSize()>
  java.util.ArrayList.ensureCapacity/$r4, java.util.ArrayList.ensureCapacity/r0, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: void ensureCapacity(int)>
  java.util.ArrayList.readObject/$r2, java.util.ArrayList.readObject/r0, <java.util.ArrayList: java.lang.Object[] elementData>, <java.util.ArrayList: void readObject(java.io.ObjectInputStream)>
  <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>/r1, <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>/r0, <java.lang.reflect.InvocationTargetException: java.lang.Throwable target>, <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable)>
  <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable,java.lang.String)>/r1, <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable,java.lang.String)>/r0, <java.lang.reflect.InvocationTargetException: java.lang.Throwable target>, <java.lang.reflect.InvocationTargetException: void <init>(java.lang.Throwable,java.lang.String)>
  java.io.ObjectInputStream$GetFieldImpl.<init>/r1, java.io.ObjectInputStream$GetFieldImpl.<init>/r0, <java.io.ObjectInputStream$GetFieldImpl: java.io.ObjectStreamClass desc>, <java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectStreamClass)>
  java.io.ObjectInputStream$GetFieldImpl.<init>/$r4, java.io.ObjectInputStream$GetFieldImpl.<init>/r0, <java.io.ObjectInputStream$GetFieldImpl: byte[] data>, <java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectStreamClass)>
  java.io.ObjectInputStream$GetFieldImpl.<init>/$r7, java.io.ObjectInputStream$GetFieldImpl.<init>/r0, <java.io.ObjectInputStream$GetFieldImpl: java.lang.Object[] objects>, <java.io.ObjectInputStream$GetFieldImpl: void <init>(java.io.ObjectStreamClass)>
  java.io.ValidationCallback.<init>/r1, java.io.ValidationCallback.<init>/r0, <java.io.ValidationCallback: java.io.ObjectInputValidation callback>, <java.io.ValidationCallback: void <init>(java.io.ObjectInputValidation,int)>
  java.io.WriteAbortedException.<init>/r2, java.io.WriteAbortedException.<init>/r0, <java.io.WriteAbortedException: java.lang.Exception detail>, <java.io.WriteAbortedException: void <init>(java.lang.String,java.lang.Exception)>
  <java.lang.reflect.Proxy: void <init>(java.lang.reflect.InvocationHandler)>/r1, <java.lang.reflect.Proxy: void <init>(java.lang.reflect.InvocationHandler)>/r0, <java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler h>, <java.lang.reflect.Proxy: void <init>(java.lang.reflect.InvocationHandler)>
  java.io.FilterOutputStream.<init>/r1, java.io.FilterOutputStream.<init>/r0, <java.io.FilterOutputStream: java.io.OutputStream out>, <java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
  <java.io.Writer: void <init>()>/r0, <java.io.Writer: void <init>()>/r0, <java.io.Writer: java.lang.Object lock>, <java.io.Writer: void <init>()>
  java.security.cert.Certificate.<init>/r1, java.security.cert.Certificate.<init>/r0, <java.security.cert.Certificate: java.lang.String type>, <java.security.cert.Certificate: void <init>(java.lang.String)>
  <java.net.SocketPermission: java.lang.String getActions()>/$r2, <java.net.SocketPermission: java.lang.String getActions()>/r0, <java.net.SocketPermission: java.lang.String actions>, <java.net.SocketPermission: java.lang.String getActions()>
  <java.io.ByteArrayInputStream: void <init>(byte[])>/r1, <java.io.ByteArrayInputStream: void <init>(byte[])>/r0, <java.io.ByteArrayInputStream: byte[] buf>, <java.io.ByteArrayInputStream: void <init>(byte[])>
  <java.io.ByteArrayInputStream: void <init>(byte[],int,int)>/r1, <java.io.ByteArrayInputStream: void <init>(byte[],int,int)>/r0, <java.io.ByteArrayInputStream: byte[] buf>, <java.io.ByteArrayInputStream: void <init>(byte[],int,int)>
  java.security.cert.CertificateFactory.<init>/r1, java.security.cert.CertificateFactory.<init>/r0, <java.security.cert.CertificateFactory: java.security.cert.CertificateFactorySpi certFacSpi>, <java.security.cert.CertificateFactory: void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String)>
  java.security.cert.CertificateFactory.<init>/r2, java.security.cert.CertificateFactory.<init>/r0, <java.security.cert.CertificateFactory: java.security.Provider provider>, <java.security.cert.CertificateFactory: void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String)>
  java.security.cert.CertificateFactory.<init>/r3, java.security.cert.CertificateFactory.<init>/r0, <java.security.cert.CertificateFactory: java.lang.String type>, <java.security.cert.CertificateFactory: void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String)>
  java.security.DigestOutputStream.setMessageDigest/r1, java.security.DigestOutputStream.setMessageDigest/r0, <java.security.DigestOutputStream: java.security.MessageDigest digest>, <java.security.DigestOutputStream: void setMessageDigest(java.security.MessageDigest)>
  java.io.ObjectStreamClass$MethodSignature.<init>/r1, java.io.ObjectStreamClass$MethodSignature.<init>/r0, <java.io.ObjectStreamClass$MethodSignature: java.lang.reflect.Member member>, <java.io.ObjectStreamClass$MethodSignature: void <init>(java.lang.reflect.Member)>
  java.io.ObjectStreamClass$MethodSignature.<init>/$r3, java.io.ObjectStreamClass$MethodSignature.<init>/r0, <java.io.ObjectStreamClass$MethodSignature: java.lang.String signature>, <java.io.ObjectStreamClass$MethodSignature: void <init>(java.lang.reflect.Member)>
  java.io.ObjectStreamClass$MethodSignature.<init>/$r5, java.io.ObjectStreamClass$MethodSignature.<init>/r0, <java.io.ObjectStreamClass$MethodSignature: java.lang.String signature>, <java.io.ObjectStreamClass$MethodSignature: void <init>(java.lang.reflect.Member)>
  <java.io.ByteArrayOutputStream: void write(int)>/r1, <java.io.ByteArrayOutputStream: void write(int)>/r0, <java.io.ByteArrayOutputStream: byte[] buf>, <java.io.ByteArrayOutputStream: void write(int)>
  java.io.ObjectStreamClass$1.<init>/r1, java.io.ObjectStreamClass$1.<init>/r0, <java.io.ObjectStreamClass$1: java.io.ObjectStreamClass this$0>, <java.io.ObjectStreamClass$1: void <init>(java.io.ObjectStreamClass,java.lang.Class)>
  java.io.ObjectStreamClass$1.<init>/r2, java.io.ObjectStreamClass$1.<init>/r0, <java.io.ObjectStreamClass$1: java.lang.Class val$cl>, <java.io.ObjectStreamClass$1: void <init>(java.io.ObjectStreamClass,java.lang.Class)>
  java.io.ObjectStreamClass$2.<init>/r1, java.io.ObjectStreamClass$2.<init>/r0, <java.io.ObjectStreamClass$2: java.io.ObjectStreamClass this$0>, <java.io.ObjectStreamClass$2: void <init>(java.io.ObjectStreamClass,java.lang.Class)>
  java.io.ObjectStreamClass$2.<init>/r2, java.io.ObjectStreamClass$2.<init>/r0, <java.io.ObjectStreamClass$2: java.lang.Class val$cl>, <java.io.ObjectStreamClass$2: void <init>(java.io.ObjectStreamClass,java.lang.Class)>
  java.security.MessageDigest.<init>/r1, java.security.MessageDigest.<init>/r0, <java.security.MessageDigest: java.lang.String algorithm>, <java.security.MessageDigest: void <init>(java.lang.String)>
  <java.util.Vector: void <init>(java.util.Collection)>/$r2, <java.util.Vector: void <init>(java.util.Collection)>/r0, <java.util.Vector: java.lang.Object[] elementData>, <java.util.Vector: void <init>(java.util.Collection)>
  java.util.Vector.trimToSize/$r4, java.util.Vector.trimToSize/r0, <java.util.Vector: java.lang.Object[] elementData>, <java.util.Vector: void trimToSize()>
  java.util.Vector.ensureCapacityHelper/$r3, java.util.Vector.ensureCapacityHelper/r0, <java.util.Vector: java.lang.Object[] elementData>, <java.util.Vector: void ensureCapacityHelper(int)>
  java.security.PermissionsHash.<init>/$r1, java.security.PermissionsHash.<init>/r0, <java.security.PermissionsHash: java.util.Hashtable perms>, <java.security.PermissionsHash: void <init>()>
  java.security.UnresolvedPermissionCollection.<init>/$r1, java.security.UnresolvedPermissionCollection.<init>/r0, <java.security.UnresolvedPermissionCollection: java.util.Hashtable permissions>, <java.security.UnresolvedPermissionCollection: void <init>()>
  java.security.PermissionsEnumerator.<init>/r1, java.security.PermissionsEnumerator.<init>/r0, <java.security.PermissionsEnumerator: java.util.Enumeration perms>, <java.security.PermissionsEnumerator: void <init>(java.util.Enumeration)>
  java.security.PermissionsEnumerator.<init>/$r2, java.security.PermissionsEnumerator.<init>/r0, <java.security.PermissionsEnumerator: java.util.Enumeration permset>, <java.security.PermissionsEnumerator: void <init>(java.util.Enumeration)>
  java.security.PermissionsEnumerator.hasMoreElements/$r3, java.security.PermissionsEnumerator.hasMoreElements/r0, <java.security.PermissionsEnumerator: java.util.Enumeration permset>, <java.security.PermissionsEnumerator: boolean hasMoreElements()>
  <java.util.jar.Manifest: void <init>()>/$r1, <java.util.jar.Manifest: void <init>()>/r0, <java.util.jar.Manifest: java.util.jar.Attributes attr>, <java.util.jar.Manifest: void <init>()>
  <java.util.jar.Manifest: void <init>()>/$r2, <java.util.jar.Manifest: void <init>()>/r0, <java.util.jar.Manifest: java.util.Map entries>, <java.util.jar.Manifest: void <init>()>
  <java.util.jar.Manifest: void <init>(java.io.InputStream)>/$r2, <java.util.jar.Manifest: void <init>(java.io.InputStream)>/r0, <java.util.jar.Manifest: java.util.jar.Attributes attr>, <java.util.jar.Manifest: void <init>(java.io.InputStream)>
  <java.util.jar.Manifest: void <init>(java.io.InputStream)>/$r3, <java.util.jar.Manifest: void <init>(java.io.InputStream)>/r0, <java.util.jar.Manifest: java.util.Map entries>, <java.util.jar.Manifest: void <init>(java.io.InputStream)>
  <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>/$r2, <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>/r0, <java.util.jar.Manifest: java.util.jar.Attributes attr>, <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>
  <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>/$r3, <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>/r0, <java.util.jar.Manifest: java.util.Map entries>, <java.util.jar.Manifest: void <init>(java.util.jar.Manifest)>
  java.lang.Package$1.<init>/r1, java.lang.Package$1.<init>/r0, <java.lang.Package$1: java.lang.String val$iname>, <java.lang.Package$1: void <init>(java.lang.String,java.lang.String)>
  java.lang.Package$1.<init>/r2, java.lang.Package$1.<init>/r0, <java.lang.Package$1: java.lang.String val$fn>, <java.lang.Package$1: void <init>(java.lang.String,java.lang.String)>
  java.util.HashMap.rehash/r2, java.util.HashMap.rehash/r0, <java.util.HashMap: java.util.HashMap$Entry[] table>, <java.util.HashMap: void rehash()>
  java.util.HashMap.rehash/$r7, java.util.HashMap.rehash/r4, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap: void rehash()>
  java.util.HashMap.put/r2, java.util.HashMap.put/r4, <java.util.HashMap$Entry: java.lang.Object value>, <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.HashMap.put/r2, java.util.HashMap.put/r7, <java.util.HashMap$Entry: java.lang.Object value>, <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
  java.util.HashMap.remove/$r8, java.util.HashMap.remove/r4, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
  java.util.HashMap.remove/$r15, java.util.HashMap.remove/r12, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap: java.lang.Object remove(java.lang.Object)>
  java.util.HashMap.keySet/$r1, java.util.HashMap.keySet/r0, <java.util.HashMap: java.util.Set keySet>, <java.util.HashMap: java.util.Set keySet()>
  java.util.HashMap.values/$r1, java.util.HashMap.values/r0, <java.util.HashMap: java.util.Collection values>, <java.util.HashMap: java.util.Collection values()>
  java.util.HashMap.entrySet/$r1, java.util.HashMap.entrySet/r0, <java.util.HashMap: java.util.Set entrySet>, <java.util.HashMap: java.util.Set entrySet()>
  java.util.HashMap.readObject/$r4, java.util.HashMap.readObject/r0, <java.util.HashMap: java.util.HashMap$Entry[] table>, <java.util.HashMap: void readObject(java.io.ObjectInputStream)>
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r9, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r0, <java.util.jar.JarInputStream: java.util.jar.Manifest man>, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r13, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r0, <java.util.jar.JarInputStream: java.util.jar.JarVerifier jv>, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r15, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r0, <java.util.jar.JarInputStream: sun.security.util.ManifestEntryVerifier mev>, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r2, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r0, <java.util.jar.JarInputStream: java.util.jar.JarEntry first>, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
  <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/$r17, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>/r0, <java.util.jar.JarInputStream: java.util.jar.JarEntry first>, <java.util.jar.JarInputStream: void <init>(java.io.InputStream,boolean)>
  java.util.jar.JarInputStream.createZipEntry/$r6, java.util.jar.JarInputStream.createZipEntry/r3, <java.util.jar.JarEntry: java.util.jar.Attributes attr>, <java.util.jar.JarInputStream: java.util.zip.ZipEntry createZipEntry(java.lang.String)>
  <java.util.jar.Attributes: void <init>(int)>/$r1, <java.util.jar.Attributes: void <init>(int)>/r0, <java.util.jar.Attributes: java.util.Map map>, <java.util.jar.Attributes: void <init>(int)>
  <java.util.jar.Attributes: void <init>(java.util.jar.Attributes)>/$r2, <java.util.jar.Attributes: void <init>(java.util.jar.Attributes)>/r0, <java.util.jar.Attributes: java.util.Map map>, <java.util.jar.Attributes: void <init>(java.util.jar.Attributes)>
  java.util.zip.ZipInputStream.getNextEntry/$r1, java.util.zip.ZipInputStream.getNextEntry/r0, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry entry>, <java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
  <java.lang.ThreadGroup: void <init>()>/$stringconstant0, <java.lang.ThreadGroup: void <init>()>/r0, <java.lang.ThreadGroup: java.lang.String name>, <java.lang.ThreadGroup: void <init>()>
  <java.net.InetAddress: void <init>(java.lang.String,byte[])>/r1, <java.net.InetAddress: void <init>(java.lang.String,byte[])>/r0, <java.net.InetAddress: java.lang.String hostName>, <java.net.InetAddress: void <init>(java.lang.String,byte[])>
  java.lang.SecurityManager$2.<init>/r1, java.lang.SecurityManager$2.<init>/r0, <java.lang.SecurityManager$2: java.lang.SecurityManager this$0>, <java.lang.SecurityManager$2: void <init>(java.lang.SecurityManager)>
  java.lang.SecurityManager$1.<init>/r1, java.lang.SecurityManager$1.<init>/r0, <java.lang.SecurityManager$1: java.lang.SecurityManager this$0>, <java.lang.SecurityManager$1: void <init>(java.lang.SecurityManager)>
  <java.io.FilePermission: java.lang.String getActions()>/$r2, <java.io.FilePermission: java.lang.String getActions()>/r0, <java.io.FilePermission: java.lang.String actions>, <java.io.FilePermission: java.lang.String getActions()>
  <java.io.File: void <init>(java.lang.String,int)>/r1, <java.io.File: void <init>(java.lang.String,int)>/r0, <java.io.File: java.lang.String path>, <java.io.File: void <init>(java.lang.String,int)>
  java.io.File.readObject/$r3, java.io.File.readObject/r0, <java.io.File: java.lang.String path>, <java.io.File: void readObject(java.io.ObjectInputStream)>
  java.io.File.readObject/$r6, java.io.File.readObject/r0, <java.io.File: java.lang.String path>, <java.io.File: void readObject(java.io.ObjectInputStream)>
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r4, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/r0, <java.security.AccessControlContext: java.security.ProtectionDomain[] context>, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/$r9, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>/r0, <java.security.AccessControlContext: java.security.ProtectionDomain[] context>, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[])>
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>/$r4, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>/r0, <java.security.AccessControlContext: java.security.ProtectionDomain[] context>, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>/r2, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>/r0, <java.security.AccessControlContext: java.security.DomainCombiner combiner>, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],java.security.DomainCombiner)>
  <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],boolean)>/r1, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],boolean)>/r0, <java.security.AccessControlContext: java.security.ProtectionDomain[] context>, <java.security.AccessControlContext: void <init>(java.security.ProtectionDomain[],boolean)>
  java.security.PrivilegedActionException.<init>/r1, java.security.PrivilegedActionException.<init>/r0, <java.security.PrivilegedActionException: java.lang.Exception exception>, <java.security.PrivilegedActionException: void <init>(java.lang.Exception)>
  <java.security.AccessControlException: void <init>(java.lang.String,java.security.Permission)>/r2, <java.security.AccessControlException: void <init>(java.lang.String,java.security.Permission)>/r0, <java.security.AccessControlException: java.security.Permission perm>, <java.security.AccessControlException: void <init>(java.lang.String,java.security.Permission)>
  java.lang.ClassLoader$4.<init>/r1, java.lang.ClassLoader$4.<init>/r0, <java.lang.ClassLoader$4: java.io.File val$file>, <java.lang.ClassLoader$4: void <init>(java.io.File)>
  java.lang.ClassLoader$3.<init>/r1, java.lang.ClassLoader$3.<init>/r0, <java.lang.ClassLoader$3: java.lang.ClassLoader this$0>, <java.lang.ClassLoader$3: void <init>(java.lang.ClassLoader)>
  java.lang.ClassLoader$2.<init>/r1, java.lang.ClassLoader$2.<init>/r0, <java.lang.ClassLoader$2: java.util.Enumeration val$e>, <java.lang.ClassLoader$2: void <init>(java.util.Enumeration)>
  java.lang.ClassLoader$1.<init>/r1, java.lang.ClassLoader$1.<init>/r0, <java.lang.ClassLoader$1: java.lang.ClassLoader this$0>, <java.lang.ClassLoader$1: void <init>(java.lang.ClassLoader,java.lang.SecurityManager,java.lang.String,int)>
  java.lang.ClassLoader$1.<init>/r2, java.lang.ClassLoader$1.<init>/r0, <java.lang.ClassLoader$1: java.lang.SecurityManager val$sm>, <java.lang.ClassLoader$1: void <init>(java.lang.ClassLoader,java.lang.SecurityManager,java.lang.String,int)>
  java.lang.ClassLoader$1.<init>/r3, java.lang.ClassLoader$1.<init>/r0, <java.lang.ClassLoader$1: java.lang.String val$name>, <java.lang.ClassLoader$1: void <init>(java.lang.ClassLoader,java.lang.SecurityManager,java.lang.String,int)>
  java.lang.ClassLoader$NativeLibrary.<init>/r2, java.lang.ClassLoader$NativeLibrary.<init>/r0, <java.lang.ClassLoader$NativeLibrary: java.lang.String name>, <java.lang.ClassLoader$NativeLibrary: void <init>(java.lang.Class,java.lang.String)>
  java.lang.ClassLoader$NativeLibrary.<init>/r1, java.lang.ClassLoader$NativeLibrary.<init>/r0, <java.lang.ClassLoader$NativeLibrary: java.lang.Class fromClass>, <java.lang.ClassLoader$NativeLibrary: void <init>(java.lang.Class,java.lang.String)>
  <java.util.HashSet: void <init>()>/$r1, <java.util.HashSet: void <init>()>/r0, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: void <init>()>
  <java.util.HashSet: void <init>(java.util.Collection)>/$r2, <java.util.HashSet: void <init>(java.util.Collection)>/r0, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: void <init>(java.util.Collection)>
  <java.util.HashSet: void <init>(int,float)>/$r1, <java.util.HashSet: void <init>(int,float)>/r0, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: void <init>(int,float)>
  <java.util.HashSet: void <init>(int)>/$r1, <java.util.HashSet: void <init>(int)>/r0, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: void <init>(int)>
  java.util.HashSet.readObject/$r2, java.util.HashSet.readObject/r0, <java.util.HashSet: java.util.HashMap map>, <java.util.HashSet: void readObject(java.io.ObjectInputStream)>
  java.net.URLConnection.<init>/r1, java.net.URLConnection.<init>/r0, <java.net.URLConnection: java.net.URL url>, <java.net.URLConnection: void <init>(java.net.URL)>
  <java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>/r2, <java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>/r0, <java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value>, <java.lang.ThreadLocal$ThreadLocalMap$Entry: void <init>(java.lang.ThreadLocal,java.lang.Object)>
  <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r1, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r0, <java.lang.ref.Reference: java.lang.Object referent>, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
  <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/$r3, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r0, <java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
  <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/$r5, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r0, <java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
  <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r0, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>/r0, <java.lang.ref.Reference: java.lang.ref.Reference next>, <java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
  <java.lang.FDBigInt: void <init>(int)>/$r1, <java.lang.FDBigInt: void <init>(int)>/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void <init>(int)>
  <java.lang.FDBigInt: void <init>(long)>/$r1, <java.lang.FDBigInt: void <init>(long)>/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void <init>(long)>
  <java.lang.FDBigInt: void <init>(java.lang.FDBigInt)>/$r2, <java.lang.FDBigInt: void <init>(java.lang.FDBigInt)>/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void <init>(java.lang.FDBigInt)>
  <java.lang.FDBigInt: void <init>(int[],int)>/r1, <java.lang.FDBigInt: void <init>(int[],int)>/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void <init>(int[],int)>
  <java.lang.FDBigInt: void <init>(long,char[],int,int)>/$r2, <java.lang.FDBigInt: void <init>(long,char[],int,int)>/r0, <java.lang.FDBigInt: int[] data>, <java.lang.FDBigInt: void <init>(long,char[],int,int)>
  java.util.PropertyPermissionCollection.<init>/$r1, java.util.PropertyPermissionCollection.<init>/r0, <java.util.PropertyPermissionCollection: java.util.Hashtable permissions>, <java.util.PropertyPermissionCollection: void <init>()>
  java.io.BufferedReader.fill/r1, java.io.BufferedReader.fill/r0, <java.io.BufferedReader: char[] cb>, <java.io.BufferedReader: void fill()>
  java.util.Date.setField/$r1, java.util.Date.setField/r0, <java.util.Date: java.util.Calendar cal>, <java.util.Date: void setField(int,int)>
  <java.io.Reader: void <init>()>/r0, <java.io.Reader: void <init>()>/r0, <java.io.Reader: java.lang.Object lock>, <java.io.Reader: void <init>()>
  java.io.FilterInputStream.<init>/r1, java.io.FilterInputStream.<init>/r0, <java.io.FilterInputStream: java.io.InputStream in>, <java.io.FilterInputStream: void <init>(java.io.InputStream)>
  java.io.ObjectOutputStream$HandleTable.<init>/$r1, java.io.ObjectOutputStream$HandleTable.<init>/r0, <java.io.ObjectOutputStream$HandleTable: int[] wireHash2Handle>, <java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>
  java.io.ObjectOutputStream$HandleTable.<init>/$r2, java.io.ObjectOutputStream$HandleTable.<init>/r0, <java.io.ObjectOutputStream$HandleTable: int[] wireNextHandle>, <java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>
  java.io.ObjectOutputStream$HandleTable.<init>/$r3, java.io.ObjectOutputStream$HandleTable.<init>/r0, <java.io.ObjectOutputStream$HandleTable: java.lang.Object[] wireHandle2Object>, <java.io.ObjectOutputStream$HandleTable: void <init>(int,float)>
  java.io.ObjectOutputStream$HandleTable.growSpine/$r2, java.io.ObjectOutputStream$HandleTable.growSpine/r0, <java.io.ObjectOutputStream$HandleTable: int[] wireHash2Handle>, <java.io.ObjectOutputStream$HandleTable: void growSpine()>
  java.io.ObjectOutputStream$HandleTable.growEntries/r1, java.io.ObjectOutputStream$HandleTable.growEntries/r0, <java.io.ObjectOutputStream$HandleTable: int[] wireNextHandle>, <java.io.ObjectOutputStream$HandleTable: void growEntries()>
  java.io.ObjectOutputStream$HandleTable.growEntries/r2, java.io.ObjectOutputStream$HandleTable.growEntries/r0, <java.io.ObjectOutputStream$HandleTable: java.lang.Object[] wireHandle2Object>, <java.io.ObjectOutputStream$HandleTable: void growEntries()>
  java.io.ObjectOutputStream$ReplaceTable.<init>/$r1, java.io.ObjectOutputStream$ReplaceTable.<init>/r0, <java.io.ObjectOutputStream$ReplaceTable: java.io.ObjectOutputStream$HandleTable htab>, <java.io.ObjectOutputStream$ReplaceTable: void <init>(int,float)>
  java.io.ObjectOutputStream$ReplaceTable.<init>/$r2, java.io.ObjectOutputStream$ReplaceTable.<init>/r0, <java.io.ObjectOutputStream$ReplaceTable: java.lang.Object[] reps>, <java.io.ObjectOutputStream$ReplaceTable: void <init>(int,float)>
  java.io.ObjectOutputStream$ReplaceTable.grow/r1, java.io.ObjectOutputStream$ReplaceTable.grow/r0, <java.io.ObjectOutputStream$ReplaceTable: java.lang.Object[] reps>, <java.io.ObjectOutputStream$ReplaceTable: void grow()>
  java.io.ObjectOutputStream$PutFieldImpl.<init>/r1, java.io.ObjectOutputStream$PutFieldImpl.<init>/r0, <java.io.ObjectOutputStream$PutFieldImpl: java.io.ObjectStreamClass desc>, <java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectStreamClass)>
  java.io.ObjectOutputStream$PutFieldImpl.<init>/$r4, java.io.ObjectOutputStream$PutFieldImpl.<init>/r0, <java.io.ObjectOutputStream$PutFieldImpl: byte[] data>, <java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectStreamClass)>
  java.io.ObjectOutputStream$PutFieldImpl.<init>/$r7, java.io.ObjectOutputStream$PutFieldImpl.<init>/r0, <java.io.ObjectOutputStream$PutFieldImpl: java.lang.Object[] objects>, <java.io.ObjectOutputStream$PutFieldImpl: void <init>(java.io.ObjectStreamClass)>
  <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>/r1, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>/$r3, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>/r0, <java.text.SimpleDateFormat: java.text.DateFormatSymbols formatData>, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
  <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>/r1, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>
  <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>/$r4, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>/r0, <java.text.SimpleDateFormat: java.text.DateFormatSymbols formatData>, <java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>
  java.text.SimpleDateFormat.initialize/$r3, java.text.SimpleDateFormat.initialize/r0, <java.text.DateFormat: java.util.Calendar calendar>, <java.text.SimpleDateFormat: void initialize(java.util.Locale)>
  java.text.SimpleDateFormat.initialize/$r4, java.text.SimpleDateFormat.initialize/r0, <java.text.DateFormat: java.text.NumberFormat numberFormat>, <java.text.SimpleDateFormat: void initialize(java.util.Locale)>
  java.text.SimpleDateFormat.parseAmbiguousDatesAsAfter/r1, java.text.SimpleDateFormat.parseAmbiguousDatesAsAfter/r0, <java.text.SimpleDateFormat: java.util.Date defaultCenturyStart>, <java.text.SimpleDateFormat: void parseAmbiguousDatesAsAfter(java.util.Date)>
  java.text.SimpleDateFormat.applyPattern/r1, java.text.SimpleDateFormat.applyPattern/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void applyPattern(java.lang.String)>
  java.text.SimpleDateFormat.applyLocalizedPattern/$r5, java.text.SimpleDateFormat.applyLocalizedPattern/r0, <java.text.SimpleDateFormat: java.lang.String pattern>, <java.text.SimpleDateFormat: void applyLocalizedPattern(java.lang.String)>
  java.text.SimpleDateFormat.setDateFormatSymbols/$r3, java.text.SimpleDateFormat.setDateFormatSymbols/r0, <java.text.SimpleDateFormat: java.text.DateFormatSymbols formatData>, <java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)>
  java.text.SimpleDateFormat.clone/$r5, java.text.SimpleDateFormat.clone/r1, <java.text.SimpleDateFormat: java.text.DateFormatSymbols formatData>, <java.text.SimpleDateFormat: java.lang.Object clone()>
  java.text.ChoiceFormat.clone/$r5, java.text.ChoiceFormat.clone/r1, <java.text.ChoiceFormat: double[] choiceLimits>, <java.text.ChoiceFormat: java.lang.Object clone()>
  java.text.ChoiceFormat.clone/$r8, java.text.ChoiceFormat.clone/r1, <java.text.ChoiceFormat: java.lang.String[] choiceFormats>, <java.text.ChoiceFormat: java.lang.Object clone()>
  java.text.DateFormat.setCalendar/r1, java.text.DateFormat.setCalendar/r0, <java.text.DateFormat: java.util.Calendar calendar>, <java.text.DateFormat: void setCalendar(java.util.Calendar)>
  java.text.DateFormat.setNumberFormat/r1, java.text.DateFormat.setNumberFormat/r0, <java.text.DateFormat: java.text.NumberFormat numberFormat>, <java.text.DateFormat: void setNumberFormat(java.text.NumberFormat)>
  java.text.DateFormat.clone/$r5, java.text.DateFormat.clone/r1, <java.text.DateFormat: java.util.Calendar calendar>, <java.text.DateFormat: java.lang.Object clone()>
  java.text.DateFormat.clone/$r8, java.text.DateFormat.clone/r1, <java.text.DateFormat: java.text.NumberFormat numberFormat>, <java.text.DateFormat: java.lang.Object clone()>
  <java.text.DecimalFormat: void <init>()>/$r1, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.text.DigitList digitList>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>()>/$stringconstant0, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.lang.String positivePrefix>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>()>/$stringconstant1, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.lang.String positiveSuffix>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>()>/$stringconstant2, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.lang.String negativePrefix>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>()>/$stringconstant3, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.lang.String negativeSuffix>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>()>/$r10, <java.text.DecimalFormat: void <init>()>/r0, <java.text.DecimalFormat: java.text.DecimalFormatSymbols symbols>, <java.text.DecimalFormat: void <init>()>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$r2, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.text.DigitList digitList>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$stringconstant0, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.lang.String positivePrefix>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$stringconstant1, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.lang.String positiveSuffix>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$stringconstant2, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.lang.String negativePrefix>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$stringconstant3, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.lang.String negativeSuffix>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String)>/$r4, <java.text.DecimalFormat: void <init>(java.lang.String)>/r0, <java.text.DecimalFormat: java.text.DecimalFormatSymbols symbols>, <java.text.DecimalFormat: void <init>(java.lang.String)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$r3, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.text.DigitList digitList>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$stringconstant0, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.lang.String positivePrefix>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$stringconstant1, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.lang.String positiveSuffix>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$stringconstant2, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.lang.String negativePrefix>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$stringconstant3, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.lang.String negativeSuffix>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/$r5, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>/r0, <java.text.DecimalFormat: java.text.DecimalFormatSymbols symbols>, <java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>
  java.text.DecimalFormat.setPositivePrefix/r1, java.text.DecimalFormat.setPositivePrefix/r0, <java.text.DecimalFormat: java.lang.String positivePrefix>, <java.text.DecimalFormat: void setPositivePrefix(java.lang.String)>
  java.text.DecimalFormat.setNegativePrefix/r1, java.text.DecimalFormat.setNegativePrefix/r0, <java.text.DecimalFormat: java.lang.String negativePrefix>, <java.text.DecimalFormat: void setNegativePrefix(java.lang.String)>
  java.text.DecimalFormat.setPositiveSuffix/r1, java.text.DecimalFormat.setPositiveSuffix/r0, <java.text.DecimalFormat: java.lang.String positiveSuffix>, <java.text.DecimalFormat: void setPositiveSuffix(java.lang.String)>
  java.text.DecimalFormat.setNegativeSuffix/r1, java.text.DecimalFormat.setNegativeSuffix/r0, <java.text.DecimalFormat: java.lang.String negativeSuffix>, <java.text.DecimalFormat: void setNegativeSuffix(java.lang.String)>
  java.text.DecimalFormat.expandAffixes/$r5, java.text.DecimalFormat.expandAffixes/r0, <java.text.DecimalFormat: java.lang.String positivePrefix>, <java.text.DecimalFormat: void expandAffixes()>
  java.text.DecimalFormat.expandAffixes/$r8, java.text.DecimalFormat.expandAffixes/r0, <java.text.DecimalFormat: java.lang.String positiveSuffix>, <java.text.DecimalFormat: void expandAffixes()>
  java.text.DecimalFormat.expandAffixes/$r11, java.text.DecimalFormat.expandAffixes/r0, <java.text.DecimalFormat: java.lang.String negativePrefix>, <java.text.DecimalFormat: void expandAffixes()>
  java.text.DecimalFormat.expandAffixes/$r14, java.text.DecimalFormat.expandAffixes/r0, <java.text.DecimalFormat: java.lang.String negativeSuffix>, <java.text.DecimalFormat: void expandAffixes()>
  java.util.ResourceBundle$ResourceCacheKey.setKeyValues/r2, java.util.ResourceBundle$ResourceCacheKey.setKeyValues/r0, <java.util.ResourceBundle$ResourceCacheKey: java.lang.String searchName>, <java.util.ResourceBundle$ResourceCacheKey: void setKeyValues(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle$ResourceCacheKey.setKeyValues/$r3, java.util.ResourceBundle$ResourceCacheKey.setKeyValues/r0, <java.util.ResourceBundle$ResourceCacheKey: java.lang.ref.SoftReference loaderRef>, <java.util.ResourceBundle$ResourceCacheKey: void setKeyValues(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle$1.<init>/r1, java.util.ResourceBundle$1.<init>/r0, <java.util.ResourceBundle$1: java.lang.ClassLoader val$loader>, <java.util.ResourceBundle$1: void <init>(java.lang.ClassLoader,java.lang.String)>
  java.util.ResourceBundle$1.<init>/r2, java.util.ResourceBundle$1.<init>/r0, <java.util.ResourceBundle$1: java.lang.String val$resName>, <java.util.ResourceBundle$1: void <init>(java.lang.ClassLoader,java.lang.String)>
  java.util.PropertyResourceBundle.<init>/$r2, java.util.PropertyResourceBundle.<init>/r0, <java.util.PropertyResourceBundle: java.util.Properties lookup>, <java.util.PropertyResourceBundle: void <init>(java.io.InputStream)>
  <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/$r3, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/r0, <java.util.zip.ZipEntry: byte[] extra>, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>
  <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/$r2, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/r0, <java.util.zip.ZipEntry: java.lang.String name>, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>
  <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/$r4, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>/r0, <java.util.zip.ZipEntry: java.lang.String comment>, <java.util.zip.ZipEntry: void <init>(java.util.zip.ZipEntry)>
  <java.util.zip.ZipEntry: void <init>(java.lang.String,long)>/r1, <java.util.zip.ZipEntry: void <init>(java.lang.String,long)>/r0, <java.util.zip.ZipEntry: java.lang.String name>, <java.util.zip.ZipEntry: void <init>(java.lang.String,long)>
  java.util.Hashtable$Entry.<init>/r3, java.util.Hashtable$Entry.<init>/r0, <java.util.Hashtable$Entry: java.util.Hashtable$Entry next>, <java.util.Hashtable$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)>
  java.util.Hashtable$Entry.<init>/r2, java.util.Hashtable$Entry.<init>/r0, <java.util.Hashtable$Entry: java.lang.Object value>, <java.util.Hashtable$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)>
  java.util.Hashtable$Entry.<init>/r1, java.util.Hashtable$Entry.<init>/r0, <java.util.Hashtable$Entry: java.lang.Object key>, <java.util.Hashtable$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)>
  <java.util.Hashtable$KeySet: void <init>(java.util.Hashtable)>/r1, <java.util.Hashtable$KeySet: void <init>(java.util.Hashtable)>/r0, <java.util.Hashtable$KeySet: java.util.Hashtable this$0>, <java.util.Hashtable$KeySet: void <init>(java.util.Hashtable)>
  <java.util.Hashtable$EntrySet: void <init>(java.util.Hashtable)>/r1, <java.util.Hashtable$EntrySet: void <init>(java.util.Hashtable)>/r0, <java.util.Hashtable$EntrySet: java.util.Hashtable this$0>, <java.util.Hashtable$EntrySet: void <init>(java.util.Hashtable)>
  java.util.Hashtable$EntrySet.remove/$r9, java.util.Hashtable$EntrySet.remove/r6, <java.util.Hashtable$Entry: java.util.Hashtable$Entry next>, <java.util.Hashtable$EntrySet: boolean remove(java.lang.Object)>
  java.util.Hashtable$Enumerator.<init>/r1, java.util.Hashtable$Enumerator.<init>/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable this$0>, <java.util.Hashtable$Enumerator: void <init>(java.util.Hashtable,int,boolean)>
  java.util.Hashtable$Enumerator.<init>/$r3, java.util.Hashtable$Enumerator.<init>/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable$Entry[] table>, <java.util.Hashtable$Enumerator: void <init>(java.util.Hashtable,int,boolean)>
  java.util.Hashtable$Enumerator.hasMoreElements/r1, java.util.Hashtable$Enumerator.hasMoreElements/r0, <java.util.Hashtable$Enumerator: java.util.Hashtable$Entry entry>, <java.util.Hashtable$Enumerator: boolean hasMoreElements()>
  <java.util.Hashtable$ValueCollection: void <init>(java.util.Hashtable)>/r1, <java.util.Hashtable$ValueCollection: void <init>(java.util.Hashtable)>/r0, <java.util.Hashtable$ValueCollection: java.util.Hashtable this$0>, <java.util.Hashtable$ValueCollection: void <init>(java.util.Hashtable)>
  <java.util.WeakHashMap: void <init>(int,float)>/$r1, <java.util.WeakHashMap: void <init>(int,float)>/r0, <java.util.WeakHashMap: java.lang.ref.ReferenceQueue queue>, <java.util.WeakHashMap: void <init>(int,float)>
  <java.util.WeakHashMap: void <init>(int,float)>/$r2, <java.util.WeakHashMap: void <init>(int,float)>/r0, <java.util.WeakHashMap: java.util.Map hash>, <java.util.WeakHashMap: void <init>(int,float)>
  <java.util.WeakHashMap: void <init>(int)>/$r1, <java.util.WeakHashMap: void <init>(int)>/r0, <java.util.WeakHashMap: java.lang.ref.ReferenceQueue queue>, <java.util.WeakHashMap: void <init>(int)>
  <java.util.WeakHashMap: void <init>(int)>/$r2, <java.util.WeakHashMap: void <init>(int)>/r0, <java.util.WeakHashMap: java.util.Map hash>, <java.util.WeakHashMap: void <init>(int)>
  <java.util.WeakHashMap: void <init>()>/$r1, <java.util.WeakHashMap: void <init>()>/r0, <java.util.WeakHashMap: java.lang.ref.ReferenceQueue queue>, <java.util.WeakHashMap: void <init>()>
  <java.util.WeakHashMap: void <init>()>/$r2, <java.util.WeakHashMap: void <init>()>/r0, <java.util.WeakHashMap: java.util.Map hash>, <java.util.WeakHashMap: void <init>()>
  java.util.WeakHashMap.entrySet/$r1, java.util.WeakHashMap.entrySet/r0, <java.util.WeakHashMap: java.util.Set entrySet>, <java.util.WeakHashMap: java.util.Set entrySet()>
  java.security.BasicPermissionCollection.<init>/$r1, java.security.BasicPermissionCollection.<init>/r0, <java.security.BasicPermissionCollection: java.util.Hashtable permissions>, <java.security.BasicPermissionCollection: void <init>()>
  java.security.cert.Certificate$CertificateRep.<init>/r1, java.security.cert.Certificate$CertificateRep.<init>/r0, <java.security.cert.Certificate$CertificateRep: java.lang.String type>, <java.security.cert.Certificate$CertificateRep: void <init>(java.lang.String,byte[])>
  java.security.cert.Certificate$CertificateRep.<init>/r2, java.security.cert.Certificate$CertificateRep.<init>/r0, <java.security.cert.Certificate$CertificateRep: byte[] data>, <java.security.cert.Certificate$CertificateRep: void <init>(java.lang.String,byte[])>
  java.net.SocketPermissionCollection.<init>/$r1, java.net.SocketPermissionCollection.<init>/r0, <java.net.SocketPermissionCollection: java.util.Vector permissions>, <java.net.SocketPermissionCollection: void <init>()>
  <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>/r1, <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>/r0, <java.security.Provider: java.lang.String name>, <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>
  <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>/r2, <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>/r0, <java.security.Provider: java.lang.String info>, <java.security.Provider: void <init>(java.lang.String,double,java.lang.String)>
  java.security.cert.CRL.<init>/r1, java.security.cert.CRL.<init>/r0, <java.security.cert.CRL: java.lang.String type>, <java.security.cert.CRL: void <init>(java.lang.String)>
  java.lang.ref.ReferenceQueue.<init>/$r1, java.lang.ref.ReferenceQueue.<init>/r0, <java.lang.ref.ReferenceQueue: java.lang.ref.ReferenceQueue$Lock lock>, <java.lang.ref.ReferenceQueue: void <init>()>
  java.lang.ref.ReferenceQueue.reallyPoll/$r6, java.lang.ref.ReferenceQueue.reallyPoll/r1, <java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference reallyPoll()>
  java.lang.ref.ReferenceQueue.reallyPoll/r1, java.lang.ref.ReferenceQueue.reallyPoll/r1, <java.lang.ref.Reference: java.lang.ref.Reference next>, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference reallyPoll()>
  java.lang.ref.ReferenceQueue.reallyPoll/$r5, java.lang.ref.ReferenceQueue.reallyPoll/r0, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>, <java.lang.ref.ReferenceQueue: java.lang.ref.Reference reallyPoll()>
  java.security.MessageDigest$Delegate.<init>/r1, java.security.MessageDigest$Delegate.<init>/r0, <java.security.MessageDigest$Delegate: java.security.MessageDigestSpi digestSpi>, <java.security.MessageDigest$Delegate: void <init>(java.security.MessageDigestSpi,java.lang.String)>
  java.util.Vector$1.<init>/r1, java.util.Vector$1.<init>/r0, <java.util.Vector$1: java.util.Vector this$0>, <java.util.Vector$1: void <init>(java.util.Vector)>
  java.util.AbstractMap.keySet/$r1, java.util.AbstractMap.keySet/r0, <java.util.AbstractMap: java.util.Set keySet>, <java.util.AbstractMap: java.util.Set keySet()>
  java.util.AbstractMap.values/$r1, java.util.AbstractMap.values/r0, <java.util.AbstractMap: java.util.Collection values>, <java.util.AbstractMap: java.util.Collection values()>
  java.util.HashMap$Entry.<init>/r3, java.util.HashMap$Entry.<init>/r0, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Entry)>
  java.util.HashMap$Entry.<init>/r2, java.util.HashMap$Entry.<init>/r0, <java.util.HashMap$Entry: java.lang.Object value>, <java.util.HashMap$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Entry)>
  java.util.HashMap$Entry.<init>/r1, java.util.HashMap$Entry.<init>/r0, <java.util.HashMap$Entry: java.lang.Object key>, <java.util.HashMap$Entry: void <init>(int,java.lang.Object,java.lang.Object,java.util.HashMap$Entry)>
  java.util.HashMap$Entry.setValue/r1, java.util.HashMap$Entry.setValue/r0, <java.util.HashMap$Entry: java.lang.Object value>, <java.util.HashMap$Entry: java.lang.Object setValue(java.lang.Object)>
  java.util.HashMap$1.<init>/r1, java.util.HashMap$1.<init>/r0, <java.util.HashMap$1: java.util.HashMap this$0>, <java.util.HashMap$1: void <init>(java.util.HashMap)>
  java.util.HashMap$2.<init>/r1, java.util.HashMap$2.<init>/r0, <java.util.HashMap$2: java.util.HashMap this$0>, <java.util.HashMap$2: void <init>(java.util.HashMap)>
  java.util.HashMap$3.<init>/r1, java.util.HashMap$3.<init>/r0, <java.util.HashMap$3: java.util.HashMap this$0>, <java.util.HashMap$3: void <init>(java.util.HashMap)>
  java.util.HashMap$3.remove/$r9, java.util.HashMap$3.remove/r6, <java.util.HashMap$Entry: java.util.HashMap$Entry next>, <java.util.HashMap$3: boolean remove(java.lang.Object)>
  java.util.HashMap$HashIterator.<init>/r1, java.util.HashMap$HashIterator.<init>/r0, <java.util.HashMap$HashIterator: java.util.HashMap this$0>, <java.util.HashMap$HashIterator: void <init>(java.util.HashMap,int)>
  java.util.HashMap$HashIterator.<init>/$r3, java.util.HashMap$HashIterator.<init>/r0, <java.util.HashMap$HashIterator: java.util.HashMap$Entry[] table>, <java.util.HashMap$HashIterator: void <init>(java.util.HashMap,int)>
  java.util.HashMap$HashIterator.hasNext/r1, java.util.HashMap$HashIterator.hasNext/r0, <java.util.HashMap$HashIterator: java.util.HashMap$Entry entry>, <java.util.HashMap$HashIterator: boolean hasNext()>
  <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>/$r2, <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>/r0, <java.util.jar.JarEntry: java.util.jar.Attributes attr>, <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>
  <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>/$r3, <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>/r0, <java.util.jar.JarEntry: java.security.cert.Certificate[] certs>, <java.util.jar.JarEntry: void <init>(java.util.jar.JarEntry)>
  java.util.jar.JarVerifier.<init>/r2, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: byte[] manifestRawBytes>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/$r3, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.util.Hashtable sigFileCerts>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/$r4, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.util.Hashtable verifiedCerts>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/$r5, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.util.Hashtable sigFileData>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/$r6, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.util.ArrayList pendingBlocks>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/$r7, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.io.ByteArrayOutputStream baos>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  java.util.jar.JarVerifier.<init>/r1, java.util.jar.JarVerifier.<init>/r0, <java.util.jar.JarVerifier: java.util.jar.Manifest manifest>, <java.util.jar.JarVerifier: void <init>(java.util.jar.Manifest,byte[])>
  <java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>/$r2, <java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>/r0, <java.util.jar.Manifest$FastInputStream: byte[] buf>, <java.util.jar.Manifest$FastInputStream: void <init>(java.io.InputStream,int)>
  <java.util.zip.Inflater: void <init>(boolean)>/$r1, <java.util.zip.Inflater: void <init>(boolean)>/r0, <java.util.zip.Inflater: byte[] buf>, <java.util.zip.Inflater: void <init>(boolean)>
  java.net.InetAddress$CacheEntry.<init>/r2, java.net.InetAddress$CacheEntry.<init>/r0, <java.net.InetAddress$CacheEntry: java.lang.Object address>, <java.net.InetAddress$CacheEntry: void <init>(java.lang.String,java.lang.Object,long)>
  java.net.InetAddress$CacheEntry.<init>/r1, java.net.InetAddress$CacheEntry.<init>/r0, <java.net.InetAddress$CacheEntry: java.lang.String hostname>, <java.net.InetAddress$CacheEntry: void <init>(java.lang.String,java.lang.Object,long)>
  java.io.FilePermission$1.<init>/r1, java.io.FilePermission$1.<init>/r0, <java.io.FilePermission$1: java.io.FilePermission this$0>, <java.io.FilePermission$1: void <init>(java.io.FilePermission)>
  java.io.FilePermissionCollection.<init>/$r1, java.io.FilePermissionCollection.<init>/r0, <java.io.FilePermissionCollection: java.util.Vector permissions>, <java.io.FilePermissionCollection: void <init>()>
  java.security.AccessControlContext$1.<init>/r1, java.security.AccessControlContext$1.<init>/r0, <java.security.AccessControlContext$1: java.security.AccessControlContext this$0>, <java.security.AccessControlContext$1: void <init>(java.security.AccessControlContext,sun.security.util.Debug,java.security.ProtectionDomain)>
  java.security.AccessControlContext$1.<init>/r2, java.security.AccessControlContext$1.<init>/r0, <java.security.AccessControlContext$1: sun.security.util.Debug val$db>, <java.security.AccessControlContext$1: void <init>(java.security.AccessControlContext,sun.security.util.Debug,java.security.ProtectionDomain)>
  java.security.AccessControlContext$1.<init>/r3, java.security.AccessControlContext$1.<init>/r0, <java.security.AccessControlContext$1: java.security.ProtectionDomain val$pd>, <java.security.AccessControlContext$1: void <init>(java.security.AccessControlContext,sun.security.util.Debug,java.security.ProtectionDomain)>
  java.security.AllPermissionCollection$1.<init>/r1, java.security.AllPermissionCollection$1.<init>/r0, <java.security.AllPermissionCollection$1: java.security.AllPermissionCollection this$0>, <java.security.AllPermissionCollection$1: void <init>(java.security.AllPermissionCollection)>
  java.net.URLConnection$1.<init>/$r1, java.net.URLConnection$1.<init>/r0, <java.net.URLConnection$1: java.net.FileNameMap map>, <java.net.URLConnection$1: void <init>()>
  <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/$r3, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/r0, <java.util.Calendar: int[] fields>, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
  <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/$r4, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/r0, <java.util.Calendar: boolean[] isSet>, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
  <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/$r5, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/r0, <java.util.Calendar: int[] stamp>, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
  <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/r1, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>/r0, <java.util.Calendar: java.util.TimeZone zone>, <java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>
  <java.util.Calendar: void clear()>/$r1, <java.util.Calendar: void clear()>/r0, <java.util.Calendar: int[] fields>, <java.util.Calendar: void clear()>
  <java.util.Calendar: void clear()>/$r3, <java.util.Calendar: void clear()>/r0, <java.util.Calendar: boolean[] isSet>, <java.util.Calendar: void clear()>
  <java.util.Calendar: void clear()>/$r2, <java.util.Calendar: void clear()>/r0, <java.util.Calendar: int[] stamp>, <java.util.Calendar: void clear()>
  java.util.Calendar.setTimeZone/r1, java.util.Calendar.setTimeZone/r0, <java.util.Calendar: java.util.TimeZone zone>, <java.util.Calendar: void setTimeZone(java.util.TimeZone)>
  java.util.Calendar.readObject/$r4, java.util.Calendar.readObject/r0, <java.util.Calendar: int[] fields>, <java.util.Calendar: void readObject(java.io.ObjectInputStream)>
  java.util.Calendar.readObject/$r6, java.util.Calendar.readObject/r0, <java.util.Calendar: boolean[] isSet>, <java.util.Calendar: void readObject(java.io.ObjectInputStream)>
  java.util.Calendar.readObject/$r2, java.util.Calendar.readObject/r0, <java.util.Calendar: int[] stamp>, <java.util.Calendar: void readObject(java.io.ObjectInputStream)>
  java.lang.Shutdown$WrappedHook.<init>/r1, java.lang.Shutdown$WrappedHook.<init>/r0, <java.lang.Shutdown$WrappedHook: java.lang.Thread hook>, <java.lang.Shutdown$WrappedHook: void <init>(java.lang.Thread)>
  java.text.DateFormatSymbols.setEras/$r2, java.text.DateFormatSymbols.setEras/r0, <java.text.DateFormatSymbols: java.lang.String[] eras>, <java.text.DateFormatSymbols: void setEras(java.lang.String[])>
  java.text.DateFormatSymbols.setMonths/$r2, java.text.DateFormatSymbols.setMonths/r0, <java.text.DateFormatSymbols: java.lang.String[] months>, <java.text.DateFormatSymbols: void setMonths(java.lang.String[])>
  java.text.DateFormatSymbols.setShortMonths/$r2, java.text.DateFormatSymbols.setShortMonths/r0, <java.text.DateFormatSymbols: java.lang.String[] shortMonths>, <java.text.DateFormatSymbols: void setShortMonths(java.lang.String[])>
  java.text.DateFormatSymbols.setWeekdays/$r2, java.text.DateFormatSymbols.setWeekdays/r0, <java.text.DateFormatSymbols: java.lang.String[] weekdays>, <java.text.DateFormatSymbols: void setWeekdays(java.lang.String[])>
  java.text.DateFormatSymbols.setShortWeekdays/$r2, java.text.DateFormatSymbols.setShortWeekdays/r0, <java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>, <java.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])>
  java.text.DateFormatSymbols.setAmPmStrings/$r2, java.text.DateFormatSymbols.setAmPmStrings/r0, <java.text.DateFormatSymbols: java.lang.String[] ampms>, <java.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])>
  java.text.DateFormatSymbols.setZoneStrings/r2, java.text.DateFormatSymbols.setZoneStrings/r0, <java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>, <java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])>
  java.text.DateFormatSymbols.setLocalPatternChars/$r2, java.text.DateFormatSymbols.setLocalPatternChars/r0, <java.text.DateFormatSymbols: java.lang.String localPatternChars>, <java.text.DateFormatSymbols: void setLocalPatternChars(java.lang.String)>
  java.text.DateFormatSymbols.initializeData/$r8, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] eras>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r9, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] months>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r10, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] shortMonths>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r11, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] weekdays>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r15, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r19, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[] ampms>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r21, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.initializeData/$r23, java.text.DateFormatSymbols.initializeData/r0, <java.text.DateFormatSymbols: java.lang.String localPatternChars>, <java.text.DateFormatSymbols: void initializeData(java.util.Locale)>
  java.text.DateFormatSymbols.copyMembers/$r4, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] eras>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r6, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] months>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r8, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] shortMonths>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r10, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] weekdays>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r12, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r14, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String[] ampms>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  java.text.DateFormatSymbols.copyMembers/$r20, java.text.DateFormatSymbols.copyMembers/r2, <java.text.DateFormatSymbols: java.lang.String localPatternChars>, <java.text.DateFormatSymbols: void copyMembers(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>
  <java.util.SimpleTimeZone: void <init>(int,java.lang.String)>/$r2, <java.util.SimpleTimeZone: void <init>(int,java.lang.String)>/r0, <java.util.SimpleTimeZone: byte[] monthLength>, <java.util.SimpleTimeZone: void <init>(int,java.lang.String)>
  <java.math.BigInteger: void <init>(int[],int)>/r1, <java.math.BigInteger: void <init>(int[],int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(int[],int)>
  <java.math.BigInteger: void <init>(byte[],int)>/$r3, <java.math.BigInteger: void <init>(byte[],int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(byte[],int)>
  <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>/$r3, <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>
  <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>/$r6, <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(java.math.MutableBigInteger,int)>
  <java.math.BigInteger: void <init>(long)>/$r1, <java.math.BigInteger: void <init>(long)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(long)>
  <java.math.BigInteger: void <init>(long)>/$r3, <java.math.BigInteger: void <init>(long)>/r0, <java.math.BigInteger: int[] mag>, <java.math.BigInteger: void <init>(long)>
  java.math.BigInteger.writeReplace/$r2, java.math.BigInteger.writeReplace/r0, <java.math.BigInteger: byte[] magnitude>, <java.math.BigInteger: java.lang.Object writeReplace()>
  java.text.DecimalFormatSymbols.setInfinity/r1, java.text.DecimalFormatSymbols.setInfinity/r0, <java.text.DecimalFormatSymbols: java.lang.String infinity>, <java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>
  java.text.DecimalFormatSymbols.setNaN/r1, java.text.DecimalFormatSymbols.setNaN/r0, <java.text.DecimalFormatSymbols: java.lang.String NaN>, <java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>
  java.text.DecimalFormatSymbols.setCurrencySymbol/r1, java.text.DecimalFormatSymbols.setCurrencySymbol/r0, <java.text.DecimalFormatSymbols: java.lang.String currencySymbol>, <java.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)>
  java.text.DecimalFormatSymbols.setInternationalCurrencySymbol/r1, java.text.DecimalFormatSymbols.setInternationalCurrencySymbol/r0, <java.text.DecimalFormatSymbols: java.lang.String intlCurrencySymbol>, <java.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)>
  java.text.DecimalFormatSymbols.initialize/$r21, java.text.DecimalFormatSymbols.initialize/r0, <java.text.DecimalFormatSymbols: java.lang.String infinity>, <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>
  java.text.DecimalFormatSymbols.initialize/$r22, java.text.DecimalFormatSymbols.initialize/r0, <java.text.DecimalFormatSymbols: java.lang.String NaN>, <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>
  java.text.DecimalFormatSymbols.initialize/$r23, java.text.DecimalFormatSymbols.initialize/r0, <java.text.DecimalFormatSymbols: java.lang.String currencySymbol>, <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>
  java.text.DecimalFormatSymbols.initialize/$r24, java.text.DecimalFormatSymbols.initialize/r0, <java.text.DecimalFormatSymbols: java.lang.String intlCurrencySymbol>, <java.text.DecimalFormatSymbols: void initialize(java.util.Locale)>
  java.text.DigitList.<init>/$r1, java.text.DigitList.<init>/r0, <java.text.DigitList: byte[] digits>, <java.text.DigitList: void <init>()>
  java.util.PropertyResourceBundle$1.<init>/r1, java.util.PropertyResourceBundle$1.<init>/r0, <java.util.PropertyResourceBundle$1: java.util.PropertyResourceBundle this$0>, <java.util.PropertyResourceBundle$1: void <init>(java.util.PropertyResourceBundle,java.util.Enumeration,java.util.Enumeration)>
  java.util.PropertyResourceBundle$1.<init>/r2, java.util.PropertyResourceBundle$1.<init>/r0, <java.util.PropertyResourceBundle$1: java.util.Enumeration val$myKeys>, <java.util.PropertyResourceBundle$1: void <init>(java.util.PropertyResourceBundle,java.util.Enumeration,java.util.Enumeration)>
  java.util.PropertyResourceBundle$1.<init>/r3, java.util.PropertyResourceBundle$1.<init>/r0, <java.util.PropertyResourceBundle$1: java.util.Enumeration val$parentKeys>, <java.util.PropertyResourceBundle$1: void <init>(java.util.PropertyResourceBundle,java.util.Enumeration,java.util.Enumeration)>
  java.util.PropertyResourceBundle$1.nextElement/$r4, java.util.PropertyResourceBundle$1.nextElement/r0, <java.util.PropertyResourceBundle$1: java.lang.Object temp>, <java.util.PropertyResourceBundle$1: java.lang.Object nextElement()>
  java.util.PropertyResourceBundle$1.nextElement/$r6, java.util.PropertyResourceBundle$1.nextElement/r0, <java.util.PropertyResourceBundle$1: java.lang.Object temp>, <java.util.PropertyResourceBundle$1: java.lang.Object nextElement()>
  java.util.Collections$SingletonMap.<init>/r1, java.util.Collections$SingletonMap.<init>/r0, <java.util.Collections$SingletonMap: java.lang.Object k>, <java.util.Collections$SingletonMap: void <init>(java.lang.Object,java.lang.Object)>
  java.util.Collections$SingletonMap.<init>/r2, java.util.Collections$SingletonMap.<init>/r0, <java.util.Collections$SingletonMap: java.lang.Object v>, <java.util.Collections$SingletonMap: void <init>(java.lang.Object,java.lang.Object)>
  java.util.Collections$SingletonMap.keySet/$r3, java.util.Collections$SingletonMap.keySet/r0, <java.util.Collections$SingletonMap: java.util.Set keySet>, <java.util.Collections$SingletonMap: java.util.Set keySet()>
  java.util.Collections$SingletonMap.entrySet/$r5, java.util.Collections$SingletonMap.entrySet/r0, <java.util.Collections$SingletonMap: java.util.Set entrySet>, <java.util.Collections$SingletonMap: java.util.Set entrySet()>
  java.util.Collections$SingletonMap.values/$r3, java.util.Collections$SingletonMap.values/r0, <java.util.Collections$SingletonMap: java.util.Collection values>, <java.util.Collections$SingletonMap: java.util.Collection values()>
  <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>/r1, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>/r0, <java.util.Collections$SynchronizedMap: java.util.Map m>, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>
  <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>/r2, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>/r0, <java.util.Collections$SynchronizedMap: java.lang.Object mutex>, <java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>
  java.util.Collections$UnmodifiableMap.keySet/$r4, java.util.Collections$UnmodifiableMap.keySet/r0, <java.util.Collections$UnmodifiableMap: java.util.Set keySet>, <java.util.Collections$UnmodifiableMap: java.util.Set keySet()>
  java.util.Collections$UnmodifiableMap.entrySet/$r1, java.util.Collections$UnmodifiableMap.entrySet/r0, <java.util.Collections$UnmodifiableMap: java.util.Set entrySet>, <java.util.Collections$UnmodifiableMap: java.util.Set entrySet()>
  java.util.Collections$UnmodifiableMap.values/$r4, java.util.Collections$UnmodifiableMap.values/r0, <java.util.Collections$UnmodifiableMap: java.util.Collection values>, <java.util.Collections$UnmodifiableMap: java.util.Collection values()>
  <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap)>/r1, <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap)>/r0, <java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>, <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap)>
  <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>/r1, <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>/r0, <java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>, <java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>
  java.util.Collections$UnmodifiableSortedSet.<init>/r1, java.util.Collections$UnmodifiableSortedSet.<init>/r0, <java.util.Collections$UnmodifiableSortedSet: java.util.SortedSet ss>, <java.util.Collections$UnmodifiableSortedSet: void <init>(java.util.SortedSet)>
  <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>/r1, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>/r0, <java.util.Collections$SynchronizedCollection: java.util.Collection c>, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>
  <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>/r2, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>/r0, <java.util.Collections$SynchronizedCollection: java.lang.Object mutex>, <java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>
  java.util.Collections$SingletonList.<init>/r1, java.util.Collections$SingletonList.<init>/r0, <java.util.Collections$SingletonList: java.lang.Object element>, <java.util.Collections$SingletonList: void <init>(java.lang.Object)>
  <java.util.Collections$SynchronizedList: void <init>(java.util.List)>/r1, <java.util.Collections$SynchronizedList: void <init>(java.util.List)>/r0, <java.util.Collections$SynchronizedList: java.util.List list>, <java.util.Collections$SynchronizedList: void <init>(java.util.List)>
  <java.util.Collections$SynchronizedList: void <init>(java.util.List,java.lang.Object)>/r1, <java.util.Collections$SynchronizedList: void <init>(java.util.List,java.lang.Object)>/r0, <java.util.Collections$SynchronizedList: java.util.List list>, <java.util.Collections$SynchronizedList: void <init>(java.util.List,java.lang.Object)>
  java.util.Collections$SingletonSet.<init>/r1, java.util.Collections$SingletonSet.<init>/r0, <java.util.Collections$SingletonSet: java.lang.Object element>, <java.util.Collections$SingletonSet: void <init>(java.lang.Object)>
  java.util.Collections$6.<init>/r1, java.util.Collections$6.<init>/r0, <java.util.Collections$6: java.util.Collection val$c>, <java.util.Collections$6: void <init>(java.util.Collection)>
  java.util.Collections$6.<init>/$r3, java.util.Collections$6.<init>/r0, <java.util.Collections$6: java.util.Iterator i>, <java.util.Collections$6: void <init>(java.util.Collection)>
  java.util.Collections$1.<init>/r1, java.util.Collections$1.<init>/r0, <java.util.Collections$1: java.util.Collections$UnmodifiableCollection this$0>, <java.util.Collections$1: void <init>(java.util.Collections$UnmodifiableCollection)>
  java.util.Collections$1.<init>/$r4, java.util.Collections$1.<init>/r0, <java.util.Collections$1: java.util.Iterator i>, <java.util.Collections$1: void <init>(java.util.Collections$UnmodifiableCollection)>
  java.util.Collections$UnmodifiableSortedMap.<init>/r1, java.util.Collections$UnmodifiableSortedMap.<init>/r0, <java.util.Collections$UnmodifiableSortedMap: java.util.SortedMap sm>, <java.util.Collections$UnmodifiableSortedMap: void <init>(java.util.SortedMap)>
  java.util.Collections$UnmodifiableList.<init>/r1, java.util.Collections$UnmodifiableList.<init>/r0, <java.util.Collections$UnmodifiableList: java.util.List list>, <java.util.Collections$UnmodifiableList: void <init>(java.util.List)>
  <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet)>/r1, <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet)>/r0, <java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>, <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet)>
  <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>/r1, <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>/r0, <java.util.Collections$SynchronizedSortedSet: java.util.SortedSet ss>, <java.util.Collections$SynchronizedSortedSet: void <init>(java.util.SortedSet,java.lang.Object)>
  <java.util.AbstractList$Itr: void <init>(java.util.AbstractList)>/r1, <java.util.AbstractList$Itr: void <init>(java.util.AbstractList)>/r0, <java.util.AbstractList$Itr: java.util.AbstractList this$0>, <java.util.AbstractList$Itr: void <init>(java.util.AbstractList)>
  java.util.AbstractList$ListItr.<init>/r1, java.util.AbstractList$ListItr.<init>/r0, <java.util.AbstractList$ListItr: java.util.AbstractList this$0>, <java.util.AbstractList$ListItr: void <init>(java.util.AbstractList,int)>
  java.util.WeakHashMap$1.<init>/r1, java.util.WeakHashMap$1.<init>/r0, <java.util.WeakHashMap$1: java.util.WeakHashMap$EntrySet this$1>, <java.util.WeakHashMap$1: void <init>(java.util.WeakHashMap$EntrySet)>
  java.util.WeakHashMap$1.<init>/$r4, java.util.WeakHashMap$1.<init>/r0, <java.util.WeakHashMap$1: java.util.Iterator hashIterator>, <java.util.WeakHashMap$1: void <init>(java.util.WeakHashMap$EntrySet)>
  java.util.WeakHashMap$1.hasNext/$r8, java.util.WeakHashMap$1.hasNext/r0, <java.util.WeakHashMap$1: java.util.WeakHashMap$Entry next>, <java.util.WeakHashMap$1: boolean hasNext()>
  <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>/r1, <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>/r0, <java.util.WeakHashMap$EntrySet: java.util.WeakHashMap this$0>, <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>
  <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>/$r4, <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>/r0, <java.util.WeakHashMap$EntrySet: java.util.Set hashEntrySet>, <java.util.WeakHashMap$EntrySet: void <init>(java.util.WeakHashMap)>
  java.util.WeakHashMap$Entry.<init>/r1, java.util.WeakHashMap$Entry.<init>/r0, <java.util.WeakHashMap$Entry: java.util.Map$Entry ent>, <java.util.WeakHashMap$Entry: void <init>(java.util.Map$Entry,java.lang.Object)>
  java.util.WeakHashMap$Entry.<init>/r2, java.util.WeakHashMap$Entry.<init>/r0, <java.util.WeakHashMap$Entry: java.lang.Object key>, <java.util.WeakHashMap$Entry: void <init>(java.util.Map$Entry,java.lang.Object)>
  java.security.Security$2.<init>/r1, java.security.Security$2.<init>/r0, <java.security.Security$2: java.lang.String val$name>, <java.security.Security$2: void <init>(java.lang.String)>
  java.util.AbstractMap$3.<init>/r1, java.util.AbstractMap$3.<init>/r0, <java.util.AbstractMap$3: java.util.AbstractMap this$0>, <java.util.AbstractMap$3: void <init>(java.util.AbstractMap)>
  java.util.AbstractMap$1.<init>/r1, java.util.AbstractMap$1.<init>/r0, <java.util.AbstractMap$1: java.util.AbstractMap this$0>, <java.util.AbstractMap$1: void <init>(java.util.AbstractMap)>
  java.util.jar.JarVerifier$VerifierStream.<init>/r3, java.util.jar.JarVerifier$VerifierStream.<init>/r0, <java.util.jar.JarVerifier$VerifierStream: java.io.InputStream is>, <java.util.jar.JarVerifier$VerifierStream: void <init>(java.util.jar.Manifest,java.util.jar.JarEntry,java.io.InputStream,java.util.jar.JarVerifier)>
  java.util.jar.JarVerifier$VerifierStream.<init>/r4, java.util.jar.JarVerifier$VerifierStream.<init>/r0, <java.util.jar.JarVerifier$VerifierStream: java.util.jar.JarVerifier jv>, <java.util.jar.JarVerifier$VerifierStream: void <init>(java.util.jar.Manifest,java.util.jar.JarEntry,java.io.InputStream,java.util.jar.JarVerifier)>
  java.util.jar.JarVerifier$VerifierStream.<init>/$r5, java.util.jar.JarVerifier$VerifierStream.<init>/r0, <java.util.jar.JarVerifier$VerifierStream: sun.security.util.ManifestEntryVerifier mev>, <java.util.jar.JarVerifier$VerifierStream: void <init>(java.util.jar.Manifest,java.util.jar.JarEntry,java.io.InputStream,java.util.jar.JarVerifier)>
  <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>/$r4, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>/r0, <java.net.URLClassLoader: sun.misc.URLClassPath ucp>, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>
  <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>/$r5, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>/r0, <java.net.URLClassLoader: java.security.AccessControlContext acc>, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>
  <java.net.URLClassLoader: void <init>(java.net.URL[])>/$r3, <java.net.URLClassLoader: void <init>(java.net.URL[])>/r0, <java.net.URLClassLoader: sun.misc.URLClassPath ucp>, <java.net.URLClassLoader: void <init>(java.net.URL[])>
  <java.net.URLClassLoader: void <init>(java.net.URL[])>/$r4, <java.net.URLClassLoader: void <init>(java.net.URL[])>/r0, <java.net.URLClassLoader: java.security.AccessControlContext acc>, <java.net.URLClassLoader: void <init>(java.net.URL[])>
  <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>/$r5, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>/r0, <java.net.URLClassLoader: sun.misc.URLClassPath ucp>, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>
  <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>/$r6, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>/r0, <java.net.URLClassLoader: java.security.AccessControlContext acc>, <java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>
  java.net.HttpURLConnection.<init>/$stringconstant0, java.net.HttpURLConnection.<init>/r0, <java.net.HttpURLConnection: java.lang.String method>, <java.net.HttpURLConnection: void <init>(java.net.URL)>
  java.util.jar.JarFile.getManifest/$r2, java.util.jar.JarFile.getManifest/r0, <java.util.jar.JarFile: java.util.jar.JarEntry manEntry>, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  java.util.jar.JarFile.getManifest/$r8, java.util.jar.JarFile.getManifest/r0, <java.util.jar.JarFile: java.util.jar.JarEntry manEntry>, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  java.util.jar.JarFile.getManifest/$r12, java.util.jar.JarFile.getManifest/r0, <java.util.jar.JarFile: java.util.jar.Manifest man>, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  java.util.jar.JarFile.getManifest/$r16, java.util.jar.JarFile.getManifest/r0, <java.util.jar.JarFile: java.util.jar.Manifest man>, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  java.util.jar.JarFile.getManifest/$r14, java.util.jar.JarFile.getManifest/r0, <java.util.jar.JarFile: java.util.jar.JarVerifier jv>, <java.util.jar.JarFile: java.util.jar.Manifest getManifest()>
  <java.util.LinkedList: void <init>()>/$r1, <java.util.LinkedList: void <init>()>/r0, <java.util.LinkedList: java.util.LinkedList$Entry header>, <java.util.LinkedList: void <init>()>
  <java.util.LinkedList: void <init>()>/$r3, <java.util.LinkedList: void <init>()>/$r4, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: void <init>()>
  <java.util.LinkedList: void <init>()>/$r3, <java.util.LinkedList: void <init>()>/$r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: void <init>()>
  <java.util.LinkedList: boolean addAll(int,java.util.Collection)>/r3, <java.util.LinkedList: boolean addAll(int,java.util.Collection)>/r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: boolean addAll(int,java.util.Collection)>
  <java.util.LinkedList: boolean addAll(int,java.util.Collection)>/r5, <java.util.LinkedList: boolean addAll(int,java.util.Collection)>/r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: boolean addAll(int,java.util.Collection)>
  java.util.LinkedList.clear/$r2, java.util.LinkedList.clear/$r4, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: void clear()>
  java.util.LinkedList.clear/$r2, java.util.LinkedList.clear/$r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: void clear()>
  java.util.LinkedList.set/r1, java.util.LinkedList.set/r2, <java.util.LinkedList$Entry: java.lang.Object element>, <java.util.LinkedList: java.lang.Object set(int,java.lang.Object)>
  java.util.LinkedList.addBefore/r4, java.util.LinkedList.addBefore/$r7, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>
  java.util.LinkedList.addBefore/r4, java.util.LinkedList.addBefore/$r6, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>
  java.util.LinkedList.readObject/$r2, java.util.LinkedList.readObject/r0, <java.util.LinkedList: java.util.LinkedList$Entry header>, <java.util.LinkedList: void readObject(java.io.ObjectInputStream)>
  java.util.LinkedList.readObject/$r4, java.util.LinkedList.readObject/$r5, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList: void readObject(java.io.ObjectInputStream)>
  java.util.LinkedList.readObject/$r4, java.util.LinkedList.readObject/$r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList: void readObject(java.io.ObjectInputStream)>
  java.util.TimeZone$1.<init>/r1, java.util.TimeZone$1.<init>/r0, <java.util.TimeZone$1: java.lang.String val$id>, <java.util.TimeZone$1: void <init>(java.lang.String)>
  <java.math.MutableBigInteger: void <init>()>/$r1, <java.math.MutableBigInteger: void <init>()>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>()>
  <java.math.MutableBigInteger: void <init>(int)>/$r1, <java.math.MutableBigInteger: void <init>(int)>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>(int)>
  <java.math.MutableBigInteger: void <init>(int[],int)>/r1, <java.math.MutableBigInteger: void <init>(int[],int)>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>(int[],int)>
  <java.math.MutableBigInteger: void <init>(int[])>/r1, <java.math.MutableBigInteger: void <init>(int[])>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>(int[])>
  <java.math.MutableBigInteger: void <init>(java.math.BigInteger)>/$r4, <java.math.MutableBigInteger: void <init>(java.math.BigInteger)>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>(java.math.BigInteger)>
  <java.math.MutableBigInteger: void <init>(java.math.MutableBigInteger)>/$r2, <java.math.MutableBigInteger: void <init>(java.math.MutableBigInteger)>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void <init>(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.ensureCapacity/$r2, java.math.MutableBigInteger.ensureCapacity/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void ensureCapacity(int)>
  java.math.MutableBigInteger.setValue/r1, java.math.MutableBigInteger.setValue/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void setValue(int[],int)>
  <java.math.MutableBigInteger: void copyValue(java.math.MutableBigInteger)>/$r3, <java.math.MutableBigInteger: void copyValue(java.math.MutableBigInteger)>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void copyValue(java.math.MutableBigInteger)>
  <java.math.MutableBigInteger: void copyValue(int[])>/$r3, <java.math.MutableBigInteger: void copyValue(int[])>/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void copyValue(int[])>
  java.math.MutableBigInteger.add/r2, java.math.MutableBigInteger.add/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void add(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.subtract/r3, java.math.MutableBigInteger.subtract/r0, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: int subtract(java.math.MutableBigInteger)>
  java.math.MutableBigInteger.multiply/$r4, java.math.MutableBigInteger.multiply/r2, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void multiply(java.math.MutableBigInteger,java.math.MutableBigInteger)>
  java.math.MutableBigInteger.mul/r2, java.math.MutableBigInteger.mul/r1, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void mul(int,java.math.MutableBigInteger)>
  java.math.MutableBigInteger.divideOneWord/$r12, java.math.MutableBigInteger.divideOneWord/r1, <java.math.MutableBigInteger: int[] value>, <java.math.MutableBigInteger: void divideOneWord(int,java.math.MutableBigInteger)>
  <java.math.BitSieve: void <init>()>/$r1, <java.math.BitSieve: void <init>()>/r0, <java.math.BitSieve: long[] bits>, <java.math.BitSieve: void <init>()>
  <java.math.BitSieve: void <init>(java.math.BigInteger,int)>/$r4, <java.math.BitSieve: void <init>(java.math.BigInteger,int)>/r0, <java.math.BitSieve: long[] bits>, <java.math.BitSieve: void <init>(java.math.BigInteger,int)>
  java.util.Collections$SingletonMap$ImmutableEntry.<init>/r1, java.util.Collections$SingletonMap$ImmutableEntry.<init>/r0, <java.util.Collections$SingletonMap$ImmutableEntry: java.lang.Object k>, <java.util.Collections$SingletonMap$ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
  java.util.Collections$SingletonMap$ImmutableEntry.<init>/r2, java.util.Collections$SingletonMap$ImmutableEntry.<init>/r0, <java.util.Collections$SingletonMap$ImmutableEntry: java.lang.Object v>, <java.util.Collections$SingletonMap$ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
  java.util.Collections$4.<init>/r1, java.util.Collections$4.<init>/r0, <java.util.Collections$4: java.util.Collections$EmptySet this$0>, <java.util.Collections$4: void <init>(java.util.Collections$EmptySet)>
  java.util.Collections$5.<init>/r1, java.util.Collections$5.<init>/r0, <java.util.Collections$5: java.util.Collections$SingletonSet this$0>, <java.util.Collections$5: void <init>(java.util.Collections$SingletonSet)>
  java.util.Collections$2.<init>/r1, java.util.Collections$2.<init>/r0, <java.util.Collections$2: java.util.Collections$UnmodifiableList this$0>, <java.util.Collections$2: void <init>(java.util.Collections$UnmodifiableList,int)>
  java.util.Collections$2.<init>/$r4, java.util.Collections$2.<init>/r0, <java.util.Collections$2: java.util.ListIterator i>, <java.util.Collections$2: void <init>(java.util.Collections$UnmodifiableList,int)>
  java.util.SubList$1.<init>/r1, java.util.SubList$1.<init>/r0, <java.util.SubList$1: java.util.SubList this$0>, <java.util.SubList$1: void <init>(java.util.SubList,int)>
  java.util.SubList$1.<init>/$r5, java.util.SubList$1.<init>/r0, <java.util.SubList$1: java.util.ListIterator i>, <java.util.SubList$1: void <init>(java.util.SubList,int)>
  java.util.AbstractMap$4.<init>/r1, java.util.AbstractMap$4.<init>/r0, <java.util.AbstractMap$4: java.util.AbstractMap$3 this$1>, <java.util.AbstractMap$4: void <init>(java.util.AbstractMap$3)>
  java.util.AbstractMap$4.<init>/$r5, java.util.AbstractMap$4.<init>/r0, <java.util.AbstractMap$4: java.util.Iterator i>, <java.util.AbstractMap$4: void <init>(java.util.AbstractMap$3)>
  java.util.AbstractMap$2.<init>/r1, java.util.AbstractMap$2.<init>/r0, <java.util.AbstractMap$2: java.util.AbstractMap$1 this$1>, <java.util.AbstractMap$2: void <init>(java.util.AbstractMap$1)>
  java.util.AbstractMap$2.<init>/$r5, java.util.AbstractMap$2.<init>/r0, <java.util.AbstractMap$2: java.util.Iterator i>, <java.util.AbstractMap$2: void <init>(java.util.AbstractMap$1)>
  java.security.KeyStore.<init>/r1, java.security.KeyStore.<init>/r0, <java.security.KeyStore: java.security.KeyStoreSpi keyStoreSpi>, <java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>
  java.security.KeyStore.<init>/r2, java.security.KeyStore.<init>/r0, <java.security.KeyStore: java.security.Provider provider>, <java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>
  java.security.KeyStore.<init>/r3, java.security.KeyStore.<init>/r0, <java.security.KeyStore: java.lang.String type>, <java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>
  <java.security.Identity: void <init>(java.lang.String,java.security.IdentityScope)>/r2, <java.security.Identity: void <init>(java.lang.String,java.security.IdentityScope)>/r0, <java.security.Identity: java.security.IdentityScope scope>, <java.security.Identity: void <init>(java.lang.String,java.security.IdentityScope)>
  <java.security.Identity: void <init>(java.lang.String)>/$stringconstant0, <java.security.Identity: void <init>(java.lang.String)>/r0, <java.security.Identity: java.lang.String info>, <java.security.Identity: void <init>(java.lang.String)>
  <java.security.Identity: void <init>(java.lang.String)>/r1, <java.security.Identity: void <init>(java.lang.String)>/r0, <java.security.Identity: java.lang.String name>, <java.security.Identity: void <init>(java.lang.String)>
  java.security.Identity.setPublicKey/r1, java.security.Identity.setPublicKey/r0, <java.security.Identity: java.security.PublicKey publicKey>, <java.security.Identity: void setPublicKey(java.security.PublicKey)>
  java.security.Identity.setPublicKey/$r2, java.security.Identity.setPublicKey/r0, <java.security.Identity: java.util.Vector certificates>, <java.security.Identity: void setPublicKey(java.security.PublicKey)>
  java.security.Identity.setInfo/r1, java.security.Identity.setInfo/r0, <java.security.Identity: java.lang.String info>, <java.security.Identity: void setInfo(java.lang.String)>
  <java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>/$r3, <java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>/r0, <java.security.SecureClassLoader: java.util.Hashtable pdcache>, <java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>
  <java.security.SecureClassLoader: void <init>()>/$r2, <java.security.SecureClassLoader: void <init>()>/r0, <java.security.SecureClassLoader: java.util.Hashtable pdcache>, <java.security.SecureClassLoader: void <init>()>
  java.net.URLClassLoader$3.<init>/r1, java.net.URLClassLoader$3.<init>/r0, <java.net.URLClassLoader$3: java.net.URLClassLoader this$0>, <java.net.URLClassLoader$3: void <init>(java.net.URLClassLoader,java.util.Enumeration)>
  java.net.URLClassLoader$3.<init>/r2, java.net.URLClassLoader$3.<init>/r0, <java.net.URLClassLoader$3: java.util.Enumeration val$e>, <java.net.URLClassLoader$3: void <init>(java.net.URLClassLoader,java.util.Enumeration)>
  java.net.URLClassLoader$3.hasMoreElements/$r10, java.net.URLClassLoader$3.hasMoreElements/r0, <java.net.URLClassLoader$3: java.net.URL res>, <java.net.URLClassLoader$3: boolean hasMoreElements()>
  java.net.URLClassLoader$6.<init>/r1, java.net.URLClassLoader$6.<init>/r0, <java.net.URLClassLoader$6: java.net.URL[] val$urls>, <java.net.URLClassLoader$6: void <init>(java.net.URL[],java.lang.ClassLoader)>
  java.net.URLClassLoader$6.<init>/r2, java.net.URLClassLoader$6.<init>/r0, <java.net.URLClassLoader$6: java.lang.ClassLoader val$parent>, <java.net.URLClassLoader$6: void <init>(java.net.URL[],java.lang.ClassLoader)>
  java.net.URLClassLoader$5.<init>/r1, java.net.URLClassLoader$5.<init>/r0, <java.net.URLClassLoader$5: java.net.URLClassLoader this$0>, <java.net.URLClassLoader$5: void <init>(java.net.URLClassLoader,java.lang.SecurityManager,java.security.Permission)>
  java.net.URLClassLoader$5.<init>/r2, java.net.URLClassLoader$5.<init>/r0, <java.net.URLClassLoader$5: java.lang.SecurityManager val$sm>, <java.net.URLClassLoader$5: void <init>(java.net.URLClassLoader,java.lang.SecurityManager,java.security.Permission)>
  java.net.URLClassLoader$5.<init>/r3, java.net.URLClassLoader$5.<init>/r0, <java.net.URLClassLoader$5: java.security.Permission val$fp>, <java.net.URLClassLoader$5: void <init>(java.net.URLClassLoader,java.lang.SecurityManager,java.security.Permission)>
  java.net.URLClassLoader$7.<init>/r1, java.net.URLClassLoader$7.<init>/r0, <java.net.URLClassLoader$7: java.net.URL[] val$urls>, <java.net.URLClassLoader$7: void <init>(java.net.URL[])>
  java.net.URLClassLoader$2.<init>/r1, java.net.URLClassLoader$2.<init>/r0, <java.net.URLClassLoader$2: java.net.URLClassLoader this$0>, <java.net.URLClassLoader$2: void <init>(java.net.URLClassLoader,java.lang.String)>
  java.net.URLClassLoader$2.<init>/r2, java.net.URLClassLoader$2.<init>/r0, <java.net.URLClassLoader$2: java.lang.String val$name>, <java.net.URLClassLoader$2: void <init>(java.net.URLClassLoader,java.lang.String)>
  java.net.URLClassLoader$1.<init>/r1, java.net.URLClassLoader$1.<init>/r0, <java.net.URLClassLoader$1: java.net.URLClassLoader this$0>, <java.net.URLClassLoader$1: void <init>(java.net.URLClassLoader,java.lang.String)>
  java.net.URLClassLoader$1.<init>/r2, java.net.URLClassLoader$1.<init>/r0, <java.net.URLClassLoader$1: java.lang.String val$name>, <java.net.URLClassLoader$1: void <init>(java.net.URLClassLoader,java.lang.String)>
  java.util.jar.JarFile$JarFileEntry.<init>/r1, java.util.jar.JarFile$JarFileEntry.<init>/r0, <java.util.jar.JarFile$JarFileEntry: java.util.jar.JarFile this$0>, <java.util.jar.JarFile$JarFileEntry: void <init>(java.util.jar.JarFile,java.util.zip.ZipEntry)>
  java.util.jar.JarFile$JarFileEntry.getCertificates/$r9, java.util.jar.JarFile$JarFileEntry.getCertificates/r0, <java.util.jar.JarEntry: java.security.cert.Certificate[] certs>, <java.util.jar.JarFile$JarFileEntry: java.security.cert.Certificate[] getCertificates()>
  java.util.jar.JarFile$1.<init>/r1, java.util.jar.JarFile$1.<init>/r0, <java.util.jar.JarFile$1: java.util.jar.JarFile this$0>, <java.util.jar.JarFile$1: void <init>(java.util.jar.JarFile,java.util.Enumeration)>
  java.util.jar.JarFile$1.<init>/r2, java.util.jar.JarFile$1.<init>/r0, <java.util.jar.JarFile$1: java.util.Enumeration val$enum>, <java.util.jar.JarFile$1: void <init>(java.util.jar.JarFile,java.util.Enumeration)>
  java.util.LinkedList$Entry.<init>/r3, java.util.LinkedList$Entry.<init>/r0, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, <java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>
  java.util.LinkedList$Entry.<init>/r2, java.util.LinkedList$Entry.<init>/r0, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, <java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>
  java.util.LinkedList$Entry.<init>/r1, java.util.LinkedList$Entry.<init>/r0, <java.util.LinkedList$Entry: java.lang.Object element>, <java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>
  java.util.LinkedList$ListItr.remove/$r9, java.util.LinkedList$ListItr.remove/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry lastReturned>, <java.util.LinkedList$ListItr: void remove()>
  java.util.LinkedList$ListItr.remove/$r6, java.util.LinkedList$ListItr.remove/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry next>, <java.util.LinkedList$ListItr: void remove()>
  java.util.LinkedList$ListItr.add/$r3, java.util.LinkedList$ListItr.add/r0, <java.util.LinkedList$ListItr: java.util.LinkedList$Entry lastReturned>, <java.util.LinkedList$ListItr: void add(java.lang.Object)>
  java.util.Collections$3.<init>/r1, java.util.Collections$3.<init>/r0, <java.util.Collections$3: java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet this$0>, <java.util.Collections$3: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>
  java.util.Collections$3.<init>/$r4, java.util.Collections$3.<init>/r0, <java.util.Collections$3: java.util.Iterator i>, <java.util.Collections$3: void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet)>
  java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>/r1, java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>/r0, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.util.Map$Entry e>, <java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>
  java.security.Signature.<init>/r1, java.security.Signature.<init>/r0, <java.security.Signature: java.lang.String algorithm>, <java.security.Signature: void <init>(java.lang.String)>
  <java.io.StreamTokenizer: void <init>()>/$r1, <java.io.StreamTokenizer: void <init>()>/r0, <java.io.StreamTokenizer: char[] buf>, <java.io.StreamTokenizer: void <init>()>
  <java.io.StreamTokenizer: void <init>()>/$r2, <java.io.StreamTokenizer: void <init>()>/r0, <java.io.StreamTokenizer: byte[] ctype>, <java.io.StreamTokenizer: void <init>()>
  java.io.StreamTokenizer.nextToken/r7, java.io.StreamTokenizer.nextToken/r0, <java.io.StreamTokenizer: char[] buf>, <java.io.StreamTokenizer: int nextToken()>
  java.io.StreamTokenizer.nextToken/r17, java.io.StreamTokenizer.nextToken/r0, <java.io.StreamTokenizer: char[] buf>, <java.io.StreamTokenizer: int nextToken()>
  java.io.StreamTokenizer.nextToken/$r12, java.io.StreamTokenizer.nextToken/r0, <java.io.StreamTokenizer: java.lang.String sval>, <java.io.StreamTokenizer: int nextToken()>
  java.io.StreamTokenizer.nextToken/$r14, java.io.StreamTokenizer.nextToken/r0, <java.io.StreamTokenizer: java.lang.String sval>, <java.io.StreamTokenizer: int nextToken()>
  java.io.StreamTokenizer.nextToken/$r23, java.io.StreamTokenizer.nextToken/r0, <java.io.StreamTokenizer: java.lang.String sval>, <java.io.StreamTokenizer: int nextToken()>
  java.util.BitSet.ensureCapacity/r1, java.util.BitSet.ensureCapacity/r0, <java.util.BitSet: long[] bits>, <java.util.BitSet: void ensureCapacity(int)>
  java.security.KeyPair.<init>/r1, java.security.KeyPair.<init>/r0, <java.security.KeyPair: java.security.PublicKey publicKey>, <java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>
  java.security.KeyPair.<init>/r2, java.security.KeyPair.<init>/r0, <java.security.KeyPair: java.security.PrivateKey privateKey>, <java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>
  java.net.URLClassLoader$4.<init>/r1, java.net.URLClassLoader$4.<init>/r0, <java.net.URLClassLoader$4: java.net.URLClassLoader$3 this$1>, <java.net.URLClassLoader$4: void <init>(java.net.URLClassLoader$3)>
  java.util.zip.ZipFile$ZipFileInputStream.<init>/r1, java.util.zip.ZipFile$ZipFileInputStream.<init>/r0, <java.util.zip.ZipFile$ZipFileInputStream: java.util.zip.ZipFile this$0>, <java.util.zip.ZipFile$ZipFileInputStream: void <init>(java.util.zip.ZipFile,long,java.util.zip.ZipFile)>
  java.util.zip.ZipFile$ZipFileInputStream.<init>/r2, java.util.zip.ZipFile$ZipFileInputStream.<init>/r0, <java.util.zip.ZipFile$ZipFileInputStream: java.util.zip.ZipFile handle>, <java.util.zip.ZipFile$ZipFileInputStream: void <init>(java.util.zip.ZipFile,long,java.util.zip.ZipFile)>
  java.util.zip.ZipFile$1.<init>/r1, java.util.zip.ZipFile$1.<init>/r0, <java.util.zip.ZipFile$1: java.util.zip.ZipFile this$0>, <java.util.zip.ZipFile$1: void <init>(java.util.zip.ZipFile,java.io.InputStream,java.util.zip.Inflater)>
  java.util.zip.ZipFile$2.<init>/r1, java.util.zip.ZipFile$2.<init>/r0, <java.util.zip.ZipFile$2: java.util.zip.ZipFile this$0>, <java.util.zip.ZipFile$2: void <init>(java.util.zip.ZipFile)>
  <java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>/r2, <java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>/r0, <java.security.SignatureSpi: java.security.SecureRandom appRandom>, <java.security.SignatureSpi: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>
  <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>/r1, <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>/r0, <java.security.SecureRandom: java.security.SecureRandomSpi secureRandomSpi>, <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>
  <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>/r2, <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>/r0, <java.security.SecureRandom: java.security.Provider provider>, <java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)>
  java.security.Signature$Delegate.<init>/r1, java.security.Signature$Delegate.<init>/r0, <java.security.Signature$Delegate: java.security.SignatureSpi sigSpi>, <java.security.Signature$Delegate: void <init>(java.security.SignatureSpi,java.lang.String)>
  <java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>/r1, <java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>/r0, <java.lang.ExceptionInInitializerError: java.lang.Throwable exception>, <java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>
  java.security.AlgorithmParameters.<init>/r1, java.security.AlgorithmParameters.<init>/r0, <java.security.AlgorithmParameters: java.security.AlgorithmParametersSpi paramSpi>, <java.security.AlgorithmParameters: void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)>
  java.security.AlgorithmParameters.<init>/r2, java.security.AlgorithmParameters.<init>/r0, <java.security.AlgorithmParameters: java.security.Provider provider>, <java.security.AlgorithmParameters: void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)>
  java.security.AlgorithmParameters.<init>/r3, java.security.AlgorithmParameters.<init>/r0, <java.security.AlgorithmParameters: java.lang.String algorithm>, <java.security.AlgorithmParameters: void <init>(java.security.AlgorithmParametersSpi,java.security.Provider,java.lang.String)>
  java.security.Signer$1.<init>/r1, java.security.Signer$1.<init>/r0, <java.security.Signer$1: java.security.Signer this$0>, <java.security.Signer$1: void <init>(java.security.Signer,java.security.PublicKey)>
  java.security.Signer$1.<init>/r2, java.security.Signer$1.<init>/r0, <java.security.Signer$1: java.security.PublicKey val$pub>, <java.security.Signer$1: void <init>(java.security.Signer,java.security.PublicKey)>
  java.io.StringReader.<init>/r1, java.io.StringReader.<init>/r0, <java.io.StringReader: java.lang.String str>, <java.io.StringReader: void <init>(java.lang.String)>
  java.security.KeyFactory.<init>/r1, java.security.KeyFactory.<init>/r0, <java.security.KeyFactory: java.security.KeyFactorySpi keyFacSpi>, <java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>
  java.security.KeyFactory.<init>/r2, java.security.KeyFactory.<init>/r0, <java.security.KeyFactory: java.security.Provider provider>, <java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>
  java.security.KeyFactory.<init>/r3, java.security.KeyFactory.<init>/r0, <java.security.KeyFactory: java.lang.String algorithm>, <java.security.KeyFactory: void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String)>
  java.security.spec.EncodedKeySpec.<init>/$r3, java.security.spec.EncodedKeySpec.<init>/r0, <java.security.spec.EncodedKeySpec: byte[] encodedKey>, <java.security.spec.EncodedKeySpec: void <init>(byte[])>
  <java.io.PipedInputStream: void <init>(java.io.PipedOutputStream)>/$r2, <java.io.PipedInputStream: void <init>(java.io.PipedOutputStream)>/r0, <java.io.PipedInputStream: byte[] buffer>, <java.io.PipedInputStream: void <init>(java.io.PipedOutputStream)>
  <java.io.PipedInputStream: void <init>()>/$r1, <java.io.PipedInputStream: void <init>()>/r0, <java.io.PipedInputStream: byte[] buffer>, <java.io.PipedInputStream: void <init>()>
  <java.net.Socket: void <init>()>/$r4, <java.net.Socket: void <init>()>/r0, <java.net.Socket: java.net.SocketImpl impl>, <java.net.Socket: void <init>()>
  <java.net.Socket: void <init>(java.net.SocketImpl)>/r1, <java.net.Socket: void <init>(java.net.SocketImpl)>/r0, <java.net.Socket: java.net.SocketImpl impl>, <java.net.Socket: void <init>(java.net.SocketImpl)>
  <java.net.ServerSocket: void <init>()>/$r4, <java.net.ServerSocket: void <init>()>/r0, <java.net.ServerSocket: java.net.SocketImpl impl>, <java.net.ServerSocket: void <init>()>
  java.net.PasswordAuthentication.<init>/r1, java.net.PasswordAuthentication.<init>/r0, <java.net.PasswordAuthentication: java.lang.String userName>, <java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>
  java.net.PasswordAuthentication.<init>/$r4, java.net.PasswordAuthentication.<init>/r0, <java.net.PasswordAuthentication: char[] password>, <java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>
  java.util.Observable.<init>/$r1, java.util.Observable.<init>/r0, <java.util.Observable: java.util.Vector obs>, <java.util.Observable: void <init>()>
  java.net.PlainSocketImpl.<init>/$r1, java.net.PlainSocketImpl.<init>/r0, <java.net.PlainSocketImpl: java.lang.Object fdLock>, <java.net.PlainSocketImpl: void <init>()>
  java.net.PlainSocketImpl.create/$r1, java.net.PlainSocketImpl.create/r0, <java.net.SocketImpl: java.io.FileDescriptor fd>, <java.net.PlainSocketImpl: void create(boolean)>
  java.net.Socket$1.<init>/r1, java.net.Socket$1.<init>/r0, <java.net.Socket$1: java.net.Socket this$0>, <java.net.Socket$1: void <init>(java.net.Socket)>
  java.net.Socket$2.<init>/r1, java.net.Socket$2.<init>/r0, <java.net.Socket$2: java.net.Socket this$0>, <java.net.Socket$2: void <init>(java.net.Socket)>
  java.net.SocketInputStream.<init>/r1, java.net.SocketInputStream.<init>/r0, <java.net.SocketInputStream: java.net.PlainSocketImpl impl>, <java.net.SocketInputStream: void <init>(java.net.PlainSocketImpl)>
  <java.net.SocketInputStream: int read()>/$r1, <java.net.SocketInputStream: int read()>/r0, <java.net.SocketInputStream: byte[] temp>, <java.net.SocketInputStream: int read()>
  java.net.PlainSocketImpl$2.<init>/r1, java.net.PlainSocketImpl$2.<init>/r0, <java.net.PlainSocketImpl$2: java.net.PlainSocketImpl this$0>, <java.net.PlainSocketImpl$2: void <init>(java.net.PlainSocketImpl,java.lang.String)>
  java.net.PlainSocketImpl$2.<init>/r2, java.net.PlainSocketImpl$2.<init>/r0, <java.net.PlainSocketImpl$2: java.lang.String val$socksServerString>, <java.net.PlainSocketImpl$2: void <init>(java.net.PlainSocketImpl,java.lang.String)>
  java.net.PlainSocketImpl$3.<init>/r1, java.net.PlainSocketImpl$3.<init>/r0, <java.net.PlainSocketImpl$3: java.net.PlainSocketImpl this$0>, <java.net.PlainSocketImpl$3: void <init>(java.net.PlainSocketImpl)>
  java.net.PlainSocketImpl$1.<init>/r1, java.net.PlainSocketImpl$1.<init>/r0, <java.net.PlainSocketImpl$1: java.net.PlainSocketImpl this$0>, <java.net.PlainSocketImpl$1: void <init>(java.net.PlainSocketImpl)>
  java.net.SocketOutputStream.<init>/$r3, java.net.SocketOutputStream.<init>/r0, <java.net.SocketOutputStream: byte[] temp>, <java.net.SocketOutputStream: void <init>(java.net.PlainSocketImpl)>
  java.net.SocketOutputStream.<init>/r1, java.net.SocketOutputStream.<init>/r0, <java.net.SocketOutputStream: java.net.PlainSocketImpl impl>, <java.net.SocketOutputStream: void <init>(java.net.PlainSocketImpl)>
  java.lang.ref.Finalizer$1.<init>/r1, java.lang.ref.Finalizer$1.<init>/r0, <java.lang.ref.Finalizer$1: java.lang.Runnable val$proc>, <java.lang.ref.Finalizer$1: void <init>(java.lang.Runnable)>
  java.text.CollationKey.<init>/r1, java.text.CollationKey.<init>/r0, <java.text.CollationKey: java.lang.String source>, <java.text.CollationKey: void <init>(java.lang.String,java.lang.String)>
  java.text.CollationKey.<init>/r2, java.text.CollationKey.<init>/r0, <java.text.CollationKey: java.lang.String key>, <java.text.CollationKey: void <init>(java.lang.String,java.lang.String)>
  <java.text.RuleBasedCollator: void <init>(java.lang.String,int)>/$r2, <java.text.RuleBasedCollator: void <init>(java.lang.String,int)>/r0, <java.text.RuleBasedCollator: java.text.RBCollationTables tables>, <java.text.RuleBasedCollator: void <init>(java.lang.String,int)>
  <java.text.RuleBasedCollator: void <init>(java.text.RuleBasedCollator)>/$r2, <java.text.RuleBasedCollator: void <init>(java.text.RuleBasedCollator)>/r0, <java.text.RuleBasedCollator: java.text.RBCollationTables tables>, <java.text.RuleBasedCollator: void <init>(java.text.RuleBasedCollator)>
  java.text.RuleBasedCollator.compare/$r4, java.text.RuleBasedCollator.compare/r0, <java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>, <java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>
  java.text.RuleBasedCollator.compare/$r7, java.text.RuleBasedCollator.compare/r0, <java.text.RuleBasedCollator: java.text.CollationElementIterator targetCursor>, <java.text.RuleBasedCollator: int compare(java.lang.String,java.lang.String)>
  java.text.RuleBasedCollator.getCollationKey/$r10, java.text.RuleBasedCollator.getCollationKey/r0, <java.text.RuleBasedCollator: java.text.CollationElementIterator sourceCursor>, <java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
  java.text.RuleBasedCollator.getCollationKey/$r2, java.text.RuleBasedCollator.getCollationKey/r0, <java.text.RuleBasedCollator: java.lang.StringBuffer primResult>, <java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
  java.text.RuleBasedCollator.getCollationKey/$r4, java.text.RuleBasedCollator.getCollationKey/r0, <java.text.RuleBasedCollator: java.lang.StringBuffer secResult>, <java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
  java.text.RuleBasedCollator.getCollationKey/$r5, java.text.RuleBasedCollator.getCollationKey/r0, <java.text.RuleBasedCollator: java.lang.StringBuffer terResult>, <java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)>
  java.text.RBCollationTables.<init>/r1, java.text.RBCollationTables.<init>/r0, <java.text.RBCollationTables: java.lang.String rules>, <java.text.RBCollationTables: void <init>(java.lang.String,int)>
  <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/$r3, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.lang.StringBuffer key>, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/r2, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.RuleBasedCollator owner>, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/$r4, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.RBCollationTables ordering>, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/$r5, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.Normalizer text>, <java.text.CollationElementIterator: void <init>(java.lang.String,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/$r3, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.lang.StringBuffer key>, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/r2, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.RuleBasedCollator owner>, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/$r4, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.RBCollationTables ordering>, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>
  <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/$r5, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>/r0, <java.text.CollationElementIterator: java.text.Normalizer text>, <java.text.CollationElementIterator: void <init>(java.text.CharacterIterator,java.text.RuleBasedCollator)>
  java.text.CollationElementIterator.next/$r13, java.text.CollationElementIterator.next/r0, <java.text.CollationElementIterator: int[] buffer>, <java.text.CollationElementIterator: int next()>
  java.text.CollationElementIterator.previous/$r12, java.text.CollationElementIterator.previous/r0, <java.text.CollationElementIterator: int[] buffer>, <java.text.CollationElementIterator: int previous()>
  <java.text.CollationElementIterator: void setText(java.lang.String)>/$r3, <java.text.CollationElementIterator: void setText(java.lang.String)>/r0, <java.text.CollationElementIterator: java.text.Normalizer text>, <java.text.CollationElementIterator: void setText(java.lang.String)>
  <java.text.CollationElementIterator: void setText(java.text.CharacterIterator)>/$r3, <java.text.CollationElementIterator: void setText(java.text.CharacterIterator)>/r0, <java.text.CollationElementIterator: java.text.Normalizer text>, <java.text.CollationElementIterator: void setText(java.text.CharacterIterator)>
  <java.text.Normalizer: void <init>(java.text.CharacterIterator,int)>/r1, <java.text.Normalizer: void <init>(java.text.CharacterIterator,int)>/r0, <java.text.Normalizer: java.text.CharacterIterator str>, <java.text.Normalizer: void <init>(java.text.CharacterIterator,int)>
  <java.text.Normalizer: void setText(java.lang.String)>/$r4, <java.text.Normalizer: void setText(java.lang.String)>/r0, <java.text.Normalizer: java.text.CharacterIterator str>, <java.text.Normalizer: void setText(java.lang.String)>
  <java.text.Normalizer: void setText(java.text.CharacterIterator)>/r1, <java.text.Normalizer: void setText(java.text.CharacterIterator)>/r0, <java.text.Normalizer: java.text.CharacterIterator str>, <java.text.Normalizer: void setText(java.text.CharacterIterator)>
  java.text.Normalizer.zapParsedStr/$r1, java.text.Normalizer.zapParsedStr/r0, <java.text.Normalizer: java.lang.StringBuffer parsedStr>, <java.text.Normalizer: void zapParsedStr()>
  <java.text.EntryPair: void <init>(java.lang.String,int,boolean)>/r1, <java.text.EntryPair: void <init>(java.lang.String,int,boolean)>/r0, <java.text.EntryPair: java.lang.String entryName>, <java.text.EntryPair: void <init>(java.lang.String,int,boolean)>
  <java.text.CompactIntArray: void <init>(int)>/$r1, <java.text.CompactIntArray: void <init>(int)>/r0, <java.text.CompactIntArray: int[] values>, <java.text.CompactIntArray: void <init>(int)>
  <java.text.CompactIntArray: void <init>(int)>/$r2, <java.text.CompactIntArray: void <init>(int)>/r0, <java.text.CompactIntArray: short[] indices>, <java.text.CompactIntArray: void <init>(int)>
  <java.text.CompactIntArray: void <init>(int)>/$r3, <java.text.CompactIntArray: void <init>(int)>/r0, <java.text.CompactIntArray: int[] hashes>, <java.text.CompactIntArray: void <init>(int)>
  java.text.CompactIntArray.compact/r15, java.text.CompactIntArray.compact/r0, <java.text.CompactIntArray: int[] values>, <java.text.CompactIntArray: void compact()>
  java.text.CompactIntArray.expand/r1, java.text.CompactIntArray.expand/r0, <java.text.CompactIntArray: int[] values>, <java.text.CompactIntArray: void expand()>
  java.text.CompactIntArray.expand/$r2, java.text.CompactIntArray.expand/r0, <java.text.CompactIntArray: int[] hashes>, <java.text.CompactIntArray: void expand()>
  java.text.IntHashtable.clone/$r5, java.text.IntHashtable.clone/r0, <java.text.IntHashtable: int[] values>, <java.text.IntHashtable: java.lang.Object clone()>
  java.text.IntHashtable.clone/$r8, java.text.IntHashtable.clone/r0, <java.text.IntHashtable: int[] keyList>, <java.text.IntHashtable: java.lang.Object clone()>
  java.text.IntHashtable.initialize/$r5, java.text.IntHashtable.initialize/r0, <java.text.IntHashtable: int[] values>, <java.text.IntHashtable: void initialize(int)>
  java.text.IntHashtable.initialize/$r6, java.text.IntHashtable.initialize/r0, <java.text.IntHashtable: int[] keyList>, <java.text.IntHashtable: void initialize(int)>
  java.text.RBTableBuilder.<init>/$r2, java.text.RBTableBuilder.<init>/r0, <java.text.RBTableBuilder: java.lang.StringBuffer key>, <java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)>
  java.text.RBTableBuilder.<init>/$r3, java.text.RBTableBuilder.<init>/r0, <java.text.RBTableBuilder: java.text.IntHashtable contractFlags>, <java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)>
  java.text.RBTableBuilder.<init>/r1, java.text.RBTableBuilder.<init>/r0, <java.text.RBTableBuilder: java.text.RBCollationTables$BuildAPI tables>, <java.text.RBTableBuilder: void <init>(java.text.RBCollationTables$BuildAPI)>
  <java.text.RBTableBuilder: void addContractOrder(java.lang.String,int,boolean)>/$r2, <java.text.RBTableBuilder: void addContractOrder(java.lang.String,int,boolean)>/r0, <java.text.RBTableBuilder: java.util.Vector contractTable>, <java.text.RBTableBuilder: void addContractOrder(java.lang.String,int,boolean)>
  java.text.RBTableBuilder.addExpansion/$r2, java.text.RBTableBuilder.addExpansion/r0, <java.text.RBTableBuilder: java.util.Vector expandTable>, <java.text.RBTableBuilder: int addExpansion(int,java.lang.String)>
  <java.text.RBCollationTables$BuildAPI: void <init>(java.text.RBCollationTables)>/r1, <java.text.RBCollationTables$BuildAPI: void <init>(java.text.RBCollationTables)>/r0, <java.text.RBCollationTables$BuildAPI: java.text.RBCollationTables this$0>, <java.text.RBCollationTables$BuildAPI: void <init>(java.text.RBCollationTables)>
  <java.text.CompactShortArray: void <init>(short)>/$r1, <java.text.CompactShortArray: void <init>(short)>/r0, <java.text.CompactShortArray: short[] values>, <java.text.CompactShortArray: void <init>(short)>
  <java.text.CompactShortArray: void <init>(short)>/$r2, <java.text.CompactShortArray: void <init>(short)>/r0, <java.text.CompactShortArray: short[] indices>, <java.text.CompactShortArray: void <init>(short)>
  <java.text.CompactShortArray: void <init>(short)>/$r3, <java.text.CompactShortArray: void <init>(short)>/r0, <java.text.CompactShortArray: int[] hashes>, <java.text.CompactShortArray: void <init>(short)>
  java.text.CompactShortArray.compact/r15, java.text.CompactShortArray.compact/r0, <java.text.CompactShortArray: short[] values>, <java.text.CompactShortArray: void compact()>
  java.text.CompactShortArray.expand/r1, java.text.CompactShortArray.expand/r0, <java.text.CompactShortArray: short[] values>, <java.text.CompactShortArray: void expand()>
  <java.text.CompactByteArray: void <init>(byte)>/$r1, <java.text.CompactByteArray: void <init>(byte)>/r0, <java.text.CompactByteArray: byte[] values>, <java.text.CompactByteArray: void <init>(byte)>
  <java.text.CompactByteArray: void <init>(byte)>/$r2, <java.text.CompactByteArray: void <init>(byte)>/r0, <java.text.CompactByteArray: short[] indices>, <java.text.CompactByteArray: void <init>(byte)>
  <java.text.CompactByteArray: void <init>(byte)>/$r3, <java.text.CompactByteArray: void <init>(byte)>/r0, <java.text.CompactByteArray: int[] hashes>, <java.text.CompactByteArray: void <init>(byte)>
  java.text.CompactByteArray.compact/r15, java.text.CompactByteArray.compact/r0, <java.text.CompactByteArray: byte[] values>, <java.text.CompactByteArray: void compact()>
  java.text.CompactByteArray.expand/r1, java.text.CompactByteArray.expand/r0, <java.text.CompactByteArray: byte[] values>, <java.text.CompactByteArray: void expand()>
  java.text.CompactByteArray.expand/$r2, java.text.CompactByteArray.expand/r0, <java.text.CompactByteArray: int[] hashes>, <java.text.CompactByteArray: void expand()>
  java.text.Normalizer$DecompIterator.<init>/$r2, java.text.Normalizer$DecompIterator.<init>/r0, <java.text.Normalizer$DecompIterator: java.text.CompactShortArray$Iterator iter>, <java.text.Normalizer$DecompIterator: void <init>(int)>
  java.text.Normalizer$DecompIterator.<init>/$r3, java.text.Normalizer$DecompIterator.<init>/r0, <java.text.Normalizer$DecompIterator: java.lang.StringBuffer buf>, <java.text.Normalizer$DecompIterator: void <init>(int)>
  java.text.MergeCollation.<init>/$r2, java.text.MergeCollation.<init>/r0, <java.text.MergeCollation: java.util.ArrayList patterns>, <java.text.MergeCollation: void <init>(java.lang.String)>
  java.text.MergeCollation.<init>/$r3, java.text.MergeCollation.<init>/r0, <java.text.MergeCollation: java.lang.StringBuffer excess>, <java.text.MergeCollation: void <init>(java.lang.String)>
  java.text.MergeCollation.<init>/$r4, java.text.MergeCollation.<init>/r0, <java.text.MergeCollation: byte[] statusArray>, <java.text.MergeCollation: void <init>(java.lang.String)>
  java.text.PatternEntry.<init>/$r5, java.text.PatternEntry.<init>/r0, <java.text.PatternEntry: java.lang.String extension>, <java.text.PatternEntry: void <init>(int,java.lang.StringBuffer,java.lang.StringBuffer)>
  java.text.PatternEntry.<init>/$stringconstant1, java.text.PatternEntry.<init>/r0, <java.text.PatternEntry: java.lang.String extension>, <java.text.PatternEntry: void <init>(int,java.lang.StringBuffer,java.lang.StringBuffer)>
  java.text.PatternEntry.<init>/$r3, java.text.PatternEntry.<init>/r0, <java.text.PatternEntry: java.lang.String chars>, <java.text.PatternEntry: void <init>(int,java.lang.StringBuffer,java.lang.StringBuffer)>
  java.text.PatternEntry.<init>/$stringconstant0, java.text.PatternEntry.<init>/r0, <java.text.PatternEntry: java.lang.String chars>, <java.text.PatternEntry: void <init>(int,java.lang.StringBuffer,java.lang.StringBuffer)>
  java.text.CompactShortArray$Iterator.<init>/r1, java.text.CompactShortArray$Iterator.<init>/r0, <java.text.CompactShortArray$Iterator: java.text.CompactShortArray this$0>, <java.text.CompactShortArray$Iterator: void <init>(java.text.CompactShortArray)>
  java.text.PatternEntry$Parser.<init>/$r2, java.text.PatternEntry$Parser.<init>/r0, <java.text.PatternEntry$Parser: java.lang.StringBuffer newChars>, <java.text.PatternEntry$Parser: void <init>(java.lang.String)>
  java.text.PatternEntry$Parser.<init>/$r3, java.text.PatternEntry$Parser.<init>/r0, <java.text.PatternEntry$Parser: java.lang.StringBuffer newExtension>, <java.text.PatternEntry$Parser: void <init>(java.lang.String)>
  java.text.PatternEntry$Parser.<init>/r1, java.text.PatternEntry$Parser.<init>/r0, <java.text.PatternEntry$Parser: java.lang.String pattern>, <java.text.PatternEntry$Parser: void <init>(java.lang.String)>
  java.io.ObjectStreamClass.findDescriptorFor/$r11, java.io.ObjectStreamClass.findDescriptorFor/r2, <java.io.ObjectStreamClass$ObjectStreamClassEntry: java.io.ObjectStreamClass$ObjectStreamClassEntry next>, <java.io.ObjectStreamClass: java.io.ObjectStreamClass findDescriptorFor(java.lang.Class)>
  java.io.ObjectStreamClass.insertDescriptorFor/$r8, java.io.ObjectStreamClass.insertDescriptorFor/r1, <java.io.ObjectStreamClass$ObjectStreamClassEntry: java.io.ObjectStreamClass$ObjectStreamClassEntry next>, <java.io.ObjectStreamClass: void insertDescriptorFor(java.io.ObjectStreamClass)>
  java.io.ObjectStreamClass.access$002/r1, java.io.ObjectStreamClass.access$002/r0, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] fields>, <java.io.ObjectStreamClass: java.io.ObjectStreamField[] access$002(java.io.ObjectStreamClass,java.io.ObjectStreamField[])>
  java.security.MessageDigest.access$102/r1, java.security.MessageDigest.access$102/r0, <java.security.MessageDigest: java.security.Provider provider>, <java.security.MessageDigest: java.security.Provider access$102(java.security.MessageDigest,java.security.Provider)>
  java.lang.ThreadLocal$ThreadLocalMap$Entry.access$502/r1, java.lang.ThreadLocal$ThreadLocalMap$Entry.access$502/r0, <java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object value>, <java.lang.ThreadLocal$ThreadLocalMap$Entry: java.lang.Object access$502(java.lang.ThreadLocal$ThreadLocalMap$Entry,java.lang.Object)>
  <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r5, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r12, <java.security.Security$ProviderProperty: java.lang.String className>, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>
  <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r4, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>/r12, <java.security.Security$ProviderProperty: java.security.Provider provider>, <java.security.Security: java.security.Security$ProviderProperty getProviderProperty(java.lang.String)>
  <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>/r2, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>/r3, <java.net.URLClassLoader: java.security.AccessControlContext acc>, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[],java.lang.ClassLoader)>
  <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>/r1, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>/r2, <java.net.URLClassLoader: java.security.AccessControlContext acc>, <java.net.URLClassLoader: java.net.URLClassLoader newInstance(java.net.URL[])>
  java.security.Signature.access$102/r1, java.security.Signature.access$102/r0, <java.security.Signature: java.security.Provider provider>, <java.security.Signature: java.security.Provider access$102(java.security.Signature,java.security.Provider)>
  java.text.RBCollationTables.access$202/r1, java.text.RBCollationTables.access$202/r0, <java.text.RBCollationTables: java.text.CompactIntArray mapping>, <java.text.RBCollationTables: java.text.CompactIntArray access$202(java.text.RBCollationTables,java.text.CompactIntArray)>
  java.text.RBCollationTables.access$302/r1, java.text.RBCollationTables.access$302/r0, <java.text.RBCollationTables: java.util.Vector contractTable>, <java.text.RBCollationTables: java.util.Vector access$302(java.text.RBCollationTables,java.util.Vector)>
  java.text.RBCollationTables.access$402/r1, java.text.RBCollationTables.access$402/r0, <java.text.RBCollationTables: java.util.Vector expandTable>, <java.text.RBCollationTables: java.util.Vector access$402(java.text.RBCollationTables,java.util.Vector)>
  java.text.RBCollationTables.access$502/r1, java.text.RBCollationTables.access$502/r0, <java.text.RBCollationTables: java.text.IntHashtable contractFlags>, <java.text.RBCollationTables: java.text.IntHashtable access$502(java.text.RBCollationTables,java.text.IntHashtable)>
